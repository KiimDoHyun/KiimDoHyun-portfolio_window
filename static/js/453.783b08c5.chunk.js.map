{"version":3,"file":"static/js/453.783b08c5.chunk.js","mappings":"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","sources":["Component/Program/FolderComponent.jsx","Component/Folder/TechStackFolder.jsx","Container/Program/FolderContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport folderFull from \"../../asset/images/icons/folder_full.png\";\r\nimport folderEmpty from \"../../asset/images/icons/folder_empty.png\";\r\nimport defaultImage from \"../../asset/images/icons/image_default.png\";\r\nimport leftArrow from \"../../asset/images/icons/left-arrow.png\";\r\nimport rightArrow from \"../../asset/images/icons/right-arrow.png\";\r\nimport TechStackFolder from \"../Folder/TechStackFolder\";\r\n\r\nconst FolderComponent = ({\r\n    onClick,\r\n    onClickClose,\r\n    onClickMax,\r\n    onClickNormalSize,\r\n    onClickMin,\r\n    onMouseDown,\r\n    onMouseUp,\r\n    onMouseDown_Resize,\r\n    onMouseUp_Resize,\r\n    onClickItem,\r\n    onDoubleClickItem,\r\n    onClickLeft,\r\n    onClickRight,\r\n\r\n    boxRef,\r\n    isClose,\r\n    isMaxSize,\r\n    item,\r\n    selectedItem,\r\n    folderContents,\r\n}) => {\r\n    return (\r\n        <FolderComponentBlock\r\n            ref={boxRef}\r\n            isClose={isClose}\r\n            onMouseDown={onClick}\r\n            isMaxSize={isMaxSize}\r\n        >\r\n            <div\r\n                className=\"headerArea\"\r\n                onMouseDown={onMouseDown}\r\n                onMouseUp={onMouseUp}\r\n            >\r\n                <div className=\"infoArea\">\r\n                    <img src={item.icon} alt={item.key} />\r\n                    <div>{item.key}</div>\r\n                </div>\r\n                <div className=\"buttonArea\">\r\n                    <div className=\"min\" onClick={onClickMin}>\r\n                        <div />\r\n                    </div>\r\n                    {isMaxSize ? (\r\n                        <div className=\"normalSize\" onClick={onClickNormalSize}>\r\n                            <div />\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"max\" onClick={onClickMax}>\r\n                            <div />\r\n                        </div>\r\n                    )}\r\n                    <div className=\"close\" onClick={onClickClose}>\r\n                        <div />\r\n                        <div />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* 폴더형인지, 인터넷형인지에 따라 생김새가 달라질 헤더 영역 */}\r\n            <div className=\"headerArea2\">\r\n                <div className=\"arrowBox\">\r\n                    <img\r\n                        src={leftArrow}\r\n                        alt=\"leftArrow\"\r\n                        onClick={onClickLeft}\r\n                    />\r\n                    <img\r\n                        src={rightArrow}\r\n                        alt=\"rightArrow\"\r\n                        onClick={onClickRight}\r\n                    />\r\n                </div>\r\n                <div></div>\r\n            </div>\r\n\r\n            {/* 내부 데이터가 들어올 영역 */}\r\n            <div className=\"contentsArea_Cover\">\r\n                {item.key === \"구글\" ? (\r\n                    <iframe\r\n                        src={\"https://www.google.com/webhp?igu=1\"}\r\n                        width={\"100%\"}\r\n                        height={\"100%\"}\r\n                    />\r\n                ) : (\r\n                    <div className=\"contentsArea_folder\">\r\n                        {folderContents ? (\r\n                            <>\r\n                                {folderContents.map((item, idx) => (\r\n                                    <div\r\n                                        className={\r\n                                            selectedItem === item.name\r\n                                                ? \"folder folder_selected\"\r\n                                                : \"folder\"\r\n                                        }\r\n                                        key={idx}\r\n                                        onClick={() => onClickItem(item.name)}\r\n                                        onDoubleClick={() =>\r\n                                            onDoubleClickItem(item)\r\n                                        }\r\n                                    >\r\n                                        {/*  폴더 */}\r\n                                        {item.type === \"FOLDER\" ? (\r\n                                            <img\r\n                                                src={\r\n                                                    item.folderCnt\r\n                                                        ? folderFull\r\n                                                        : folderEmpty\r\n                                                }\r\n                                                alt=\"folderEmpty\"\r\n                                            />\r\n                                        ) : (\r\n                                            <img\r\n                                                src={item.icon || defaultImage}\r\n                                                alt={item.name}\r\n                                            />\r\n                                        )}\r\n\r\n                                        <div className=\"name\">{item.name}</div>\r\n                                    </div>\r\n                                ))}\r\n                            </>\r\n                        ) : null}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* 폴더형 일때만 출력하도록. */}\r\n            {item.type === \"FOLDER\" && (\r\n                <div className=\"bottomArea\">{folderContents.length} 개항목</div>\r\n            )}\r\n\r\n            <div className=\"modiSize top_left\"></div>\r\n            <div className=\"modiSize top_right\"></div>\r\n            <div className=\"modiSize right\"></div>\r\n            <div className=\"modiSize bottom_left\"></div>\r\n            <div\r\n                className=\"modiSize bottom_right\"\r\n                onMouseDown={onMouseDown_Resize}\r\n                onMouseUp={onMouseUp_Resize}\r\n            ></div>\r\n        </FolderComponentBlock>\r\n    );\r\n};\r\nconst open = keyframes`\r\nfrom {\r\n    opacity: 0;\r\n    transform: scale(0.9);\r\n}\r\nto {\r\n    opacity: 1;\r\n    transform: scale(1);\r\n}\r\n`;\r\n\r\nconst FolderComponentBlock = styled.div`\r\n    left: calc(50% - 250px);\r\n    top: calc(50% - 250px);\r\n    height: 500px;\r\n    width: 500px;\r\n\r\n    box-shadow: 0px 0px 20px 3px #00000061;\r\n    position: absolute;\r\n\r\n    background-color: white;\r\n\r\n    z-index: ${(props) => props.zIndexCnt};\r\n\r\n    display: grid;\r\n    grid-template-rows: 32px 25px 1fr 20px;\r\n\r\n    .modiSize {\r\n        position: absolute;\r\n        width: 4px;\r\n        height: 4px;\r\n        cursor: pointer;\r\n\r\n        // background-color: red;\r\n    }\r\n\r\n    .top_left {\r\n        top: 0;\r\n        left: 0;\r\n        cursor: nw-resize;\r\n    }\r\n\r\n    .top_right {\r\n        top: 0;\r\n        right: 0;\r\n        cursor: ne-resize;\r\n    }\r\n\r\n    .bottom_left {\r\n        bottom: 0;\r\n        left: 0;\r\n        cursor: ne-resize;\r\n    }\r\n\r\n    .bottom_right {\r\n        bottom: 0;\r\n        right: 0;\r\n        cursor: nw-resize;\r\n    }\r\n\r\n    .infoArea {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 5px;\r\n        height: 100%;\r\n        margin-left: 10px;\r\n    }\r\n\r\n    .infoArea img {\r\n        width: 20px;\r\n        height: 20px;\r\n    }\r\n    .infoArea div {\r\n        font-size: 14px;\r\n    }\r\n\r\n    .headerArea {\r\n        width: 100%;\r\n        height: 32px;\r\n\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n\r\n        padding: 1px 1px 0 1px;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    .headerArea2 {\r\n        padding: 0 10px;\r\n        border-bottom: 1px solid #e3e3e3;\r\n\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n    }\r\n\r\n    .buttonArea {\r\n        height: 100%;\r\n        display: flex;\r\n        gap: 1px;\r\n    }\r\n\r\n    .min div {\r\n        width: 11px;\r\n        height: 1px;\r\n        background-color: black;\r\n    }\r\n\r\n    .max div {\r\n        width: 8px;\r\n        height: 8px;\r\n        border: 1px solid black;\r\n    }\r\n\r\n    .close div {\r\n        width: 14px;\r\n        height: 1px;\r\n        background-color: black;\r\n    }\r\n\r\n    .close div:nth-child(1) {\r\n        position: absolute;\r\n        rotate: 45deg;\r\n    }\r\n\r\n    .close div:nth-child(2) {\r\n        rotate: 135deg;\r\n    }\r\n\r\n    .buttonArea > div {\r\n        height: 100%;\r\n        width: 45px;\r\n        transition: 0.2s;\r\n\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    .buttonArea > div > img {\r\n        width: 10px;\r\n    }\r\n\r\n    .buttonArea .min:hover,\r\n    .buttonArea .normalSize:hover,\r\n    .buttonArea .max:hover {\r\n        background-color: #ddddddb3;\r\n    }\r\n\r\n    .buttonArea > .close:hover {\r\n        background-color: #ff1010;\r\n    }\r\n\r\n    animation: ${open} 0.25s 0s;\r\n\r\n    .contentsArea_Cover {\r\n        width: 100%;\r\n        height: 100%;\r\n        overflow: scroll;\r\n    }\r\n\r\n    // 폴더형 컨텐츠 영역\r\n    .contentsArea_folder {\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        padding: 10px;\r\n        box-sizing: border-box;\r\n\r\n        display: flex;\r\n        gap: 20px;\r\n        flex-wrap: wrap;\r\n\r\n        align-content: flex-start;\r\n    }\r\n\r\n    // 보통 아이콘\r\n    .folder {\r\n        width: 80px;\r\n        height: auto;\r\n\r\n        padding: 5px 10px;\r\n\r\n        border: 1px solid #ffffff00;\r\n    }\r\n\r\n    .folder_selected {\r\n        background-color: #cce8ff !important;\r\n        border: 1px solid #99d1ff;\r\n    }\r\n    .folder:hover {\r\n        background-color: #e5f3ff;\r\n    }\r\n    .folder img {\r\n        width: 80px;\r\n        height: 80px;\r\n    }\r\n\r\n    .folder .name {\r\n        word-break: break-all;\r\n        font-size: 12px;\r\n        cursor: default;\r\n    }\r\n    .bottomArea {\r\n        width: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: flex-start;\r\n        font-size: 12px;\r\n        padding: 0 10px;\r\n    }\r\n\r\n    .arrowBox {\r\n        display: flex;\r\n        gap: 10px;\r\n    }\r\n    .arrowBox img {\r\n        width: 15px;\r\n        height: 100%;\r\n    }\r\n\r\n    ${(props) => props.isClose && ` opacity: 0; transform: scale(0.9)`}\r\n`;\r\nexport default FolderComponent;\r\n\r\n/*\r\n\r\n*/\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport folderEmpty from \"../../asset/images/icons/folder_empty.png\";\r\n\r\nconst TechStackFolder = () => {\r\n    return (\r\n        <TechStackFolderBlock className=\"contentsArea_folder\">\r\n            <div className=\"folder\">\r\n                <img src={folderEmpty} alt=\"folderEmpty\" />\r\n                <div className=\"name\">\r\n                    폴더 2asdfasdfasdfasdfasdfasdfasdfasdf번\r\n                </div>\r\n            </div>\r\n        </TechStackFolderBlock>\r\n    );\r\n};\r\n\r\nconst TechStackFolderBlock = styled.div``;\r\nexport default TechStackFolder;\r\n","import React, { useCallback, useEffect, useRef } from \"react\";\r\nimport FolderComponent from \"../../Component/Program/FolderComponent\";\r\nimport {\r\n    rc_program_activeProgram,\r\n    rc_program_programList,\r\n    rc_program_zIndexCnt,\r\n} from \"../../store/program\";\r\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\r\nimport { useState } from \"react\";\r\n\r\nconst FolderContainer = ({ item }) => {\r\n    const { key, status } = item;\r\n    const setProgramList = useSetRecoilState(rc_program_programList);\r\n    const [zIndexCnt, setZIndexCnt] = useRecoilState(rc_program_zIndexCnt);\r\n    const temp_zIndexCnt = zIndexCnt;\r\n    const [activeProgram, setActiveProgram] = useRecoilState(\r\n        rc_program_activeProgram\r\n    );\r\n    const [isMovable, setIsMovable] = useState(false);\r\n    const [isResizable, setIsResizable] = useState(false);\r\n    const [isClose, setIsClose] = useState(false);\r\n    const [isMaxSize, setIsMaxSize] = useState(false);\r\n\r\n    const [folderContents, setFolderContents] = useState(item.contents || []);\r\n    const [folderHistory, setFolderHistory] = useState([item.contents]);\r\n\r\n    const [selectedItem, setSelectedItem] = useState(\"\"); // 클릭한 아이템\r\n\r\n    const prevPos = useRef();\r\n    const boxRef = useRef();\r\n\r\n    // 현재 창 클릭\r\n    const onClick = useCallback(() => {\r\n        setActiveProgram(key);\r\n    }, [setActiveProgram, key]);\r\n\r\n    // 최대화\r\n    const onClickMax = useCallback(() => {\r\n        // setProgramList((prev) =>\r\n        //     prev.map((prevItem) =>\r\n        //         prevItem.key === key\r\n        //             ? { ...prevItem, status: \"active_max\" }\r\n        //             : { ...prevItem }\r\n        //     )\r\n        // );\r\n\r\n        setIsMaxSize(true);\r\n        boxRef.current.style.transition = \"0.25s\";\r\n        boxRef.current.style.left = \"0\";\r\n        boxRef.current.style.top = \"0\";\r\n\r\n        localStorage.setItem(`${key}width`, \"100vw\");\r\n        localStorage.setItem(`${key}height`, \"calc(100vh - 50px)\");\r\n\r\n        boxRef.current.style.width = \"100vw\";\r\n        boxRef.current.style.height = \"calc(100vh - 50px)\";\r\n    }, [setIsMaxSize, setProgramList]);\r\n\r\n    // 기본 크기\r\n    const onClickNormalSize = useCallback(() => {\r\n        setIsMaxSize(false);\r\n        // setProgramList((prev) =>\r\n        //     prev.map((prevItem) =>\r\n        //         prevItem.key === key\r\n        //             ? { ...prevItem, status: \"active\" }\r\n        //             : { ...prevItem }\r\n        //     )\r\n        // );\r\n        const left = localStorage.getItem(`${key}Left`);\r\n        const top = localStorage.getItem(`${key}Top`);\r\n        boxRef.current.style.transition = \"0.25s\";\r\n\r\n        if (left && top) {\r\n            boxRef.current.style.left = left + \"px\";\r\n            boxRef.current.style.top = top + \"px\";\r\n        } else {\r\n            boxRef.current.style.left = \"calc(50vw - 250px)\";\r\n            boxRef.current.style.top = \"calc(50vh - 250px)\";\r\n        }\r\n        localStorage.setItem(`${key}width`, \"500px\");\r\n        localStorage.setItem(`${key}height`, \"500px\");\r\n\r\n        boxRef.current.style.width = \"500px\";\r\n        boxRef.current.style.height = \"500px\";\r\n    }, [setIsMaxSize, setProgramList]);\r\n\r\n    // 최소화\r\n    const onClickMin = useCallback(() => {\r\n        setProgramList((prev) =>\r\n            prev.map((prevItem) =>\r\n                prevItem.key === key\r\n                    ? { ...prevItem, status: \"min\" }\r\n                    : { ...prevItem }\r\n            )\r\n        );\r\n    }, [key, setProgramList]);\r\n\r\n    // 닫기\r\n    const onClickClose = useCallback(() => {\r\n        setIsClose(true);\r\n        boxRef.current.style.transition = \"0.25s\";\r\n        boxRef.current.style.opacity = \"0\";\r\n\r\n        setTimeout(() => {\r\n            setProgramList((prev) => prev.filter((item) => item.key !== key));\r\n        }, [300]);\r\n    }, [key, setProgramList]);\r\n\r\n    // 이동 활성화\r\n    const onMouseDown = useCallback(\r\n        (e) => {\r\n            setIsMovable(true);\r\n            prevPos.current = {\r\n                X: e.clientX,\r\n                Y: e.clientY,\r\n            };\r\n        },\r\n        [setIsMovable]\r\n    );\r\n\r\n    // 이동\r\n    const onMouseMove = useCallback(\r\n        (e) => {\r\n            // if (e.clientY <= 0) {\r\n            //     console.log(\"exit\");\r\n            //     return;\r\n            // }\r\n            // 이전 좌표와 현재 좌표 차이값\r\n            if (isMovable) {\r\n                const posX = prevPos.current.X - e.clientX;\r\n                const posY = prevPos.current.Y - e.clientY;\r\n\r\n                // 현재 좌표가 이전 좌표로 바뀜\r\n                prevPos.current = {\r\n                    X: e.clientX,\r\n                    Y: e.clientY,\r\n                };\r\n\r\n                // left, top으로 이동\r\n\r\n                boxRef.current.style.transition = \"0s\";\r\n\r\n                localStorage.setItem(\r\n                    `${key}Left`,\r\n                    boxRef.current.offsetLeft - posX\r\n                );\r\n                localStorage.setItem(\r\n                    `${key}Top`,\r\n                    boxRef.current.offsetTop - posY\r\n                );\r\n\r\n                boxRef.current.style.left =\r\n                    boxRef.current.offsetLeft - posX + \"px\";\r\n                boxRef.current.style.top =\r\n                    boxRef.current.offsetTop - posY + \"px\";\r\n            }\r\n\r\n            if (isResizable) {\r\n                /*\r\n                    posX 에 이전과 커서 위치 차이값이 들어있다.\r\n\r\n                    마우스가 움직이면서 이전 좌표값을 갱신한다\r\n\r\n                    차이값 만큼 width, height 값을 계산한다\r\n\r\n                    만약 최소값보다 큰 경우만 값을 갱신한다\r\n\r\n                    만약 최소값 이하로 내려가려한다면?\r\n\r\n                    커서값은 계속 갱신된다. (현재 위치좌표로)\r\n\r\n                    커서가 오른쪽으로 움직이는 순간\r\n\r\n                    좌표 값 차이만큼 width 값이 변한다\r\n                    이때 커서는 한참 왼쪽에있다.\r\n\r\n                    커서가 다시 원래 위치로 오고 나서 값 계산에 따른 너비를 갱신해야한다.\r\n\r\n                    원래위치는 최소 값에 도달한 위치를 말한다.\r\n\r\n                    크기 조정함수 공통화 필요\r\n                    \r\n                */\r\n\r\n                // 커서의 이전 위치를 기반으로 어느 방향으로 움직일지 체크\r\n                boxRef.current.style.transition = \"0s\";\r\n                const posX = prevPos.current.X - e.clientX;\r\n                const posY = prevPos.current.Y - e.clientY;\r\n\r\n                // 크기 값 갱신\r\n                const newWidth = boxRef.current.offsetWidth - posX;\r\n                const newHeight = boxRef.current.offsetHeight - posY;\r\n\r\n                // ====================\r\n                // 상\r\n                if (posX === 0 && posY > 0) {\r\n                    console.log(\"위쪽\");\r\n                    if (newHeight < 60) {\r\n                        console.log(\"최소 높이 보다 낮습니다.\");\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${key}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n                // 하\r\n                else if (posX === 0 && posY < 0) {\r\n                    if (prevPos.current.Y <= e.clientY) {\r\n                        console.log(\"아래쪽\");\r\n                        localStorage.setItem(\r\n                            `${key}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n                // 좌\r\n                else if (posX > 0 && posY === 0) {\r\n                    console.log(\"왼쪽\");\r\n                    if (newWidth < 300) {\r\n                        console.log(\"너비가 최소 크기보다 작습니다.\");\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${key}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                        //\r\n                    }\r\n                }\r\n                // 우\r\n                else if (posX < 0 && posY === 0) {\r\n                    console.log(\"오른쪽\");\r\n                    if (prevPos.current.X <= e.clientX) {\r\n                        localStorage.setItem(\r\n                            `${key}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n                        // 마우스 위치..\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                    }\r\n                }\r\n                // 왼쪽 위\r\n                else if (posX > 0 && posY > 0) {\r\n                    console.log(\"왼쪽 위\");\r\n                    if (newWidth < 300) {\r\n                        console.log(\"너비가 최소 크기보다 작습니다.\");\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${key}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                        //\r\n                    }\r\n\r\n                    if (newHeight < 60) {\r\n                        console.log(\"최소 높이 보다 낮습니다.\");\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${key}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n                // 오른쪽 위\r\n                else if (posX < 0 && posY > 0) {\r\n                    console.log(\"오른쪽 위\");\r\n                    if (prevPos.current.X <= e.clientX) {\r\n                        console.log(\"prevPos.current.X: \", prevPos.current.X);\r\n                        console.log(\"e.clientX: \", e.clientX);\r\n                        localStorage.setItem(\r\n                            `${key}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n                        // 마우스 위치..\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                    }\r\n\r\n                    if (newHeight < 60) {\r\n                        console.log(\"최소 높이 보다 낮습니다.\");\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${key}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n                // 왼쪽 아래\r\n                else if (posX > 0 && posY < 0) {\r\n                    console.log(\"왼쪽 아래\");\r\n                    if (newWidth < 300) {\r\n                        console.log(\"너비가 최소 크기보다 작습니다.\");\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${key}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                        //\r\n                    }\r\n\r\n                    if (prevPos.current.Y <= e.clientY) {\r\n                        localStorage.setItem(\r\n                            `${key}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n                // 오른쪽 아래\r\n                else if (posX < 0 && posY < 0) {\r\n                    console.log(\"오른쪽 아래\");\r\n                    if (prevPos.current.X <= e.clientX) {\r\n                        console.log(\"prevPos.current.X: \", prevPos.current.X);\r\n                        console.log(\"e.clientX: \", e.clientX);\r\n                        localStorage.setItem(\r\n                            `${key}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n                        // 마우스 위치..\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                    }\r\n\r\n                    if (prevPos.current.Y <= e.clientY) {\r\n                        localStorage.setItem(\r\n                            `${key}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        [isMovable, isResizable]\r\n    );\r\n\r\n    // 이동 종료\r\n    const onMouseUp = useCallback(() => {\r\n        setIsMovable(false);\r\n    }, []);\r\n\r\n    // 현재 창 맨 앞으로\r\n    useEffect(() => {\r\n        if (activeProgram === key) {\r\n            boxRef.current.style.zIndex = temp_zIndexCnt + 1;\r\n            setZIndexCnt((prev) => prev + 1);\r\n        }\r\n    }, [activeProgram, key, setZIndexCnt]);\r\n\r\n    // 이동 활성화\r\n    useEffect(() => {\r\n        document.addEventListener(\"mousemove\", onMouseMove);\r\n\r\n        // 마우스 클릭이 종료되는 경우 모든 이벤트 종료 처리 필요\r\n        document.addEventListener(\"mouseup\", () => setIsResizable(false));\r\n\r\n        return () => {\r\n            document.removeEventListener(\"mousemove\", onMouseMove);\r\n        };\r\n    }, [onMouseMove]);\r\n\r\n    useEffect(() => {\r\n        if (status === \"active\") {\r\n            if (isMaxSize) {\r\n                boxRef.current.style.left = \"0px\";\r\n                boxRef.current.style.top = \"0px\";\r\n            } else {\r\n                const left = localStorage.getItem(`${key}Left`);\r\n                const top = localStorage.getItem(`${key}Top`);\r\n\r\n                //\r\n                if (left && top) {\r\n                    boxRef.current.style.left = left + \"px\";\r\n                    boxRef.current.style.top = top + \"px\";\r\n                } else {\r\n                    boxRef.current.style.left = \"calc(50vw - 250px)\";\r\n                    boxRef.current.style.top = \"calc(50vh - 250px)\";\r\n                }\r\n            }\r\n        }\r\n    }, [status, isMaxSize, boxRef]);\r\n\r\n    useEffect(() => {\r\n        /*\r\n        min\r\n        active\r\n        */\r\n\r\n        // 활성화\r\n        if (status === \"active\") {\r\n            boxRef.current.style.transition = \"0.25s\";\r\n            boxRef.current.style.opacity = \"1\";\r\n\r\n            const height = localStorage.getItem(`${key}height`);\r\n            const width = localStorage.getItem(`${key}width`);\r\n\r\n            if (height && width) {\r\n                boxRef.current.style.height = height;\r\n                boxRef.current.style.width = width;\r\n            } else {\r\n                boxRef.current.style.width = \"500px\";\r\n                boxRef.current.style.height = \"500px\";\r\n            }\r\n\r\n            boxRef.current.style.scale = \"1\";\r\n        }\r\n        // 최소화\r\n        else if (status === \"min\") {\r\n            boxRef.current.style.transition = \"0.25s\";\r\n            boxRef.current.style.opacity = \"0\";\r\n            boxRef.current.style.left = \"80px\";\r\n            boxRef.current.style.top = \"60vh\";\r\n            boxRef.current.style.scale = \"0.6\";\r\n            boxRef.current.style.width = \"500px\";\r\n            boxRef.current.style.height = \"500px\";\r\n        }\r\n    }, [status]);\r\n\r\n    const onMouseDown_Resize = useCallback((e) => {\r\n        console.log(\"posX: \", e.clientX);\r\n        setIsResizable(true);\r\n        prevPos.current = {\r\n            X: e.clientX,\r\n            Y: e.clientY,\r\n        };\r\n    }, []);\r\n\r\n    const onMouseMove_Resize = useCallback(() => {\r\n        //\r\n    }, []);\r\n\r\n    const onMouseUp_Resize = useCallback(() => {\r\n        //\r\n        setIsResizable(false);\r\n    }, []);\r\n\r\n    // 특정 아이템 클릭\r\n    const onClickItem = useCallback((name) => {\r\n        setSelectedItem(name);\r\n    }, []);\r\n\r\n    // 특정 아이템 더블 클릭\r\n    const onDoubleClickItem = useCallback(\r\n        (item) => {\r\n            console.log(\"item: \", item);\r\n            if (item.type === \"FOLDER\") {\r\n                // 이동 기록에 없는 경우만 추가한다.\r\n                if (\r\n                    !folderHistory.some(\r\n                        (someItem) => someItem.name === item.name\r\n                    )\r\n                ) {\r\n                    setFolderHistory((prev) => [...prev, item.contents]);\r\n                }\r\n                setFolderContents(item.contents);\r\n            }\r\n        },\r\n        [folderHistory]\r\n    );\r\n\r\n    const onClickLeft = useCallback(() => {\r\n        setFolderContents(folderHistory[0]);\r\n        //\r\n    }, []);\r\n\r\n    const onClickRight = useCallback(() => {\r\n        // setFolderContents(folderHistory[folderHistory.length - 1]);\r\n        //\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            localStorage.removeItem(`${key}Left`);\r\n            localStorage.removeItem(`${key}Top`);\r\n            localStorage.removeItem(`${key}width`);\r\n            localStorage.removeItem(`${key}height`);\r\n        };\r\n    }, []);\r\n\r\n    const propDatas = {\r\n        onClick,\r\n        onClickClose,\r\n        onClickMax,\r\n        onClickNormalSize,\r\n        onClickMin,\r\n        onMouseDown,\r\n        onMouseUp,\r\n        onMouseDown_Resize,\r\n        onMouseUp_Resize,\r\n        onClickItem,\r\n        onDoubleClickItem,\r\n        onClickLeft,\r\n        onClickRight,\r\n\r\n        boxRef,\r\n        isClose,\r\n        isMaxSize,\r\n        item,\r\n        selectedItem,\r\n        folderContents,\r\n    };\r\n    return <FolderComponent {...propDatas} />;\r\n};\r\n\r\nexport default React.memo(FolderContainer);\r\n"],"names":["open","styled","keyframes","FolderComponentBlock","props","zIndexCnt","isClose","onClick","onClickClose","onClickMax","onClickNormalSize","onClickMin","onMouseDown","onMouseUp","onMouseDown_Resize","onMouseUp_Resize","onClickItem","onDoubleClickItem","onClickLeft","onClickRight","boxRef","isMaxSize","item","selectedItem","folderContents","ref","className","src","icon","alt","key","width","height","map","idx","name","onDoubleClick","type","folderCnt","length","FolderContainer","status","setProgramList","useSetRecoilState","rc_program_programList","useRecoilState","rc_program_zIndexCnt","setZIndexCnt","temp_zIndexCnt","rc_program_activeProgram","activeProgram","setActiveProgram","useState","isMovable","setIsMovable","isResizable","setIsResizable","setIsClose","setIsMaxSize","contents","setFolderContents","folderHistory","setFolderHistory","setSelectedItem","prevPos","useRef","useCallback","current","style","transition","left","top","localStorage","setItem","getItem","prev","prevItem","opacity","setTimeout","filter","e","X","clientX","Y","clientY","onMouseMove","posX","posY","offsetLeft","offsetTop","newWidth","offsetWidth","newHeight","offsetHeight","console","log","useEffect","zIndex","document","addEventListener","removeEventListener","scale","some","someItem","removeItem","propDatas","React"],"sourceRoot":""}