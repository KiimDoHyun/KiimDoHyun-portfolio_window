{"version":3,"file":"static/js/453.5b9422ab.chunk.js","mappings":"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","sources":["Component/Program/FolderComponent.jsx","Component/Folder/TechStackFolder.jsx","Container/Program/FolderContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport folderFull from \"../../asset/images/icons/folder_full.png\";\r\nimport folderEmpty from \"../../asset/images/icons/folder_empty.png\";\r\nimport defaultImage from \"../../asset/images/icons/image_default.png\";\r\nimport leftArrow from \"../../asset/images/icons/left-arrow.png\";\r\nimport rightArrow from \"../../asset/images/icons/right-arrow.png\";\r\nimport TechStackFolder from \"../Folder/TechStackFolder\";\r\n\r\nconst DEFAULT_SIZE = 80;\r\n\r\nconst FolderComponent = ({\r\n    onClick,\r\n    onClickClose,\r\n    onClickMax,\r\n    onClickNormalSize,\r\n    onClickMin,\r\n    onMouseDown,\r\n    onMouseUp,\r\n    onMouseDown_Resize,\r\n    onMouseUp_Resize,\r\n    onClickItem,\r\n    onDoubleClickItem,\r\n    onClickLeft,\r\n    onClickRight,\r\n    setDisplayType,\r\n\r\n    boxRef,\r\n    isClose,\r\n    isMaxSize,\r\n    item,\r\n    selectedItem,\r\n    folderContents,\r\n    displayType,\r\n    displayList,\r\n}) => {\r\n    return (\r\n        <FolderComponentBlock\r\n            ref={boxRef}\r\n            isClose={isClose}\r\n            onMouseDown={onClick}\r\n            isMaxSize={isMaxSize}\r\n        >\r\n            <div\r\n                className=\"headerArea\"\r\n                onMouseDown={onMouseDown}\r\n                onMouseUp={onMouseUp}\r\n            >\r\n                <div className=\"infoArea\">\r\n                    <img src={item.icon} alt={item.key} />\r\n                    <div>{item.key}</div>\r\n                </div>\r\n                <div className=\"buttonArea\">\r\n                    <div className=\"min\" onClick={onClickMin}>\r\n                        <div />\r\n                    </div>\r\n                    {isMaxSize ? (\r\n                        <div className=\"normalSize\" onClick={onClickNormalSize}>\r\n                            <div />\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"max\" onClick={onClickMax}>\r\n                            <div />\r\n                        </div>\r\n                    )}\r\n                    <div className=\"close\" onClick={onClickClose}>\r\n                        <div />\r\n                        <div />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* 폴더형인지, 인터넷형인지에 따라 생김새가 달라질 헤더 영역 */}\r\n            <div className=\"headerArea2\">\r\n                <div className=\"arrowBox\">\r\n                    <img\r\n                        src={leftArrow}\r\n                        alt=\"leftArrow\"\r\n                        onClick={onClickLeft}\r\n                    />\r\n                    <img\r\n                        src={rightArrow}\r\n                        alt=\"rightArrow\"\r\n                        onClick={onClickRight}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <select\r\n                        value={displayType}\r\n                        onChange={(e) => setDisplayType(e.target.value)}\r\n                    >\r\n                        {displayList.map((item, idx) => (\r\n                            <option key={idx} value={item.value}>\r\n                                {item.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            {/* 내부 데이터가 들어올 영역 */}\r\n            <div className={`contentsArea_Cover`}>\r\n                {item.key === \"구글\" ? (\r\n                    <iframe\r\n                        src={\"https://www.google.com/webhp?igu=1\"}\r\n                        width={\"100%\"}\r\n                        height={\"100%\"}\r\n                    />\r\n                ) : (\r\n                    <div className={`${displayType} contentsArea_folder`}>\r\n                        {folderContents && folderContents.length > 0 ? (\r\n                            <>\r\n                                {displayType === \"DETAIL\" && (\r\n                                    <div className=\"detailHeader\">\r\n                                        <div className=\"name\">{\"이미지\"}</div>\r\n                                        <div className=\"name\">{\"이름\"}</div>\r\n                                        <div className=\"name\">{\"유형\"}</div>\r\n                                    </div>\r\n                                )}\r\n                                {folderContents.map((item, idx) => (\r\n                                    <div\r\n                                        className={`${\r\n                                            selectedItem === item.name\r\n                                                ? \"folder folder_selected\"\r\n                                                : \"folder\"\r\n                                        }`}\r\n                                        key={idx}\r\n                                        onClick={() => onClickItem(item.name)}\r\n                                        onDoubleClick={() =>\r\n                                            onDoubleClickItem(item)\r\n                                        }\r\n                                    >\r\n                                        {/*  폴더 */}\r\n                                        <div className=\"imgCover\">\r\n                                            {item.type === \"FOLDER\" ? (\r\n                                                <img\r\n                                                    src={\r\n                                                        item.folderCnt\r\n                                                            ? folderFull\r\n                                                            : folderEmpty\r\n                                                    }\r\n                                                    alt=\"folderEmpty\"\r\n                                                />\r\n                                            ) : (\r\n                                                <img\r\n                                                    src={\r\n                                                        item.icon ||\r\n                                                        defaultImage\r\n                                                    }\r\n                                                    alt={item.name}\r\n                                                />\r\n                                            )}\r\n                                        </div>\r\n\r\n                                        <div className=\"name\">{item.name}</div>\r\n\r\n                                        {displayType === \"DETAIL\" && (\r\n                                            <div className=\"name\">\r\n                                                {item.type}\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                ))}\r\n                            </>\r\n                        ) : (\r\n                            <div className=\"noContents\">비어있습니다.</div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* 폴더형 일때만 출력하도록. */}\r\n            {item.type === \"FOLDER\" && (\r\n                <div className=\"bottomArea\">{folderContents.length} 개항목</div>\r\n            )}\r\n\r\n            <div className=\"modiSize top_left\"></div>\r\n            <div className=\"modiSize top_right\"></div>\r\n            <div className=\"modiSize right\"></div>\r\n            <div className=\"modiSize bottom_left\"></div>\r\n            <div\r\n                className=\"modiSize bottom_right\"\r\n                onMouseDown={onMouseDown_Resize}\r\n                onMouseUp={onMouseUp_Resize}\r\n            ></div>\r\n        </FolderComponentBlock>\r\n    );\r\n};\r\nconst open = keyframes`\r\nfrom {\r\n    opacity: 0;\r\n    transform: scale(0.9);\r\n}\r\nto {\r\n    opacity: 1;\r\n    transform: scale(1);\r\n}\r\n`;\r\n\r\nconst FolderComponentBlock = styled.div`\r\n    left: calc(50% - 250px);\r\n    top: calc(50% - 250px);\r\n    height: 500px;\r\n    width: 500px;\r\n\r\n    box-shadow: 0px 0px 20px 3px #00000061;\r\n    position: absolute;\r\n\r\n    background-color: white;\r\n\r\n    z-index: ${(props) => props.zIndexCnt};\r\n\r\n    display: grid;\r\n    grid-template-rows: 32px 25px 1fr 20px;\r\n\r\n    .modiSize {\r\n        position: absolute;\r\n        width: 4px;\r\n        height: 4px;\r\n        cursor: pointer;\r\n\r\n        // background-color: red;\r\n    }\r\n\r\n    .top_left {\r\n        top: 0;\r\n        left: 0;\r\n        cursor: nw-resize;\r\n    }\r\n\r\n    .top_right {\r\n        top: 0;\r\n        right: 0;\r\n        cursor: ne-resize;\r\n    }\r\n\r\n    .bottom_left {\r\n        bottom: 0;\r\n        left: 0;\r\n        cursor: ne-resize;\r\n    }\r\n\r\n    .bottom_right {\r\n        bottom: 0;\r\n        right: 0;\r\n        cursor: nw-resize;\r\n    }\r\n\r\n    .infoArea {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 5px;\r\n        height: 100%;\r\n        margin-left: 10px;\r\n    }\r\n\r\n    .infoArea img {\r\n        width: 20px;\r\n        height: 20px;\r\n    }\r\n    .infoArea div {\r\n        font-size: 14px;\r\n    }\r\n\r\n    .headerArea {\r\n        width: 100%;\r\n        height: 32px;\r\n\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n\r\n        padding: 1px 1px 0 1px;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    .headerArea2 {\r\n        padding: 0 10px;\r\n        border-bottom: 1px solid #e3e3e3;\r\n\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n    }\r\n\r\n    .buttonArea {\r\n        height: 100%;\r\n        display: flex;\r\n        gap: 1px;\r\n    }\r\n\r\n    .min div {\r\n        width: 11px;\r\n        height: 1px;\r\n        background-color: black;\r\n    }\r\n\r\n    .max div {\r\n        width: 8px;\r\n        height: 8px;\r\n        border: 1px solid black;\r\n    }\r\n\r\n    .close div {\r\n        width: 14px;\r\n        height: 1px;\r\n        background-color: black;\r\n    }\r\n\r\n    .close div:nth-child(1) {\r\n        position: absolute;\r\n        rotate: 45deg;\r\n    }\r\n\r\n    .close div:nth-child(2) {\r\n        rotate: 135deg;\r\n    }\r\n\r\n    .buttonArea > div {\r\n        height: 100%;\r\n        width: 45px;\r\n        transition: 0.2s;\r\n\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    .buttonArea > div > img {\r\n        width: 10px;\r\n    }\r\n\r\n    .buttonArea .min:hover,\r\n    .buttonArea .normalSize:hover,\r\n    .buttonArea .max:hover {\r\n        background-color: #ddddddb3;\r\n    }\r\n\r\n    .buttonArea > .close:hover {\r\n        background-color: #ff1010;\r\n    }\r\n\r\n    animation: ${open} 0.25s 0s;\r\n\r\n    .contentsArea_Cover {\r\n        width: 100%;\r\n        height: 100%;\r\n        overflow: scroll;\r\n    }\r\n\r\n    // 폴더형 컨텐츠 영역\r\n    .contentsArea_folder {\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        padding: 10px;\r\n        box-sizing: border-box;\r\n\r\n        display: flex;\r\n        gap: 20px;\r\n        flex-wrap: wrap;\r\n\r\n        align-content: flex-start;\r\n    }\r\n\r\n    // 아주 큰 아이콘\r\n    .BIG_BIG_ICON .folder {\r\n        width: ${DEFAULT_SIZE * 2}px;\r\n    }\r\n\r\n    .BIG_BIG_ICON img {\r\n        width: ${DEFAULT_SIZE * 2}px;\r\n        height: ${DEFAULT_SIZE * 2}px;\r\n    }\r\n\r\n    // 큰 아이콘\r\n    .BIG_ICON .folder {\r\n        width: ${DEFAULT_SIZE * 1.5}px;\r\n    }\r\n\r\n    .BIG_ICON img {\r\n        width: ${DEFAULT_SIZE * 1.5}px;\r\n        height: ${DEFAULT_SIZE * 1.5}px;\r\n    }\r\n\r\n    // 보통 아이콘\r\n    .MEDIUM_ICON .folder {\r\n        width: ${DEFAULT_SIZE}px;\r\n    }\r\n\r\n    .MEDIUM_ICON img {\r\n        width: ${DEFAULT_SIZE}px;\r\n        height: ${DEFAULT_SIZE}px;\r\n    }\r\n\r\n    // 작은 아이콘\r\n    .SMALL_ICON .folder {\r\n        width: ${DEFAULT_SIZE * 0.5}px;\r\n    }\r\n\r\n    .SMALL_ICON img {\r\n        width: ${DEFAULT_SIZE * 0.5}px;\r\n        height: ${DEFAULT_SIZE * 0.5}px;\r\n    }\r\n\r\n    // 자세히\r\n    .DETAIL {\r\n        gap: 0px;\r\n    }\r\n\r\n    .DETAIL .folder {\r\n        width: 100%;\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n    }\r\n    .DETAIL .folder div {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    .DETAIL img {\r\n        width: ${DEFAULT_SIZE * 0.25}px;\r\n        height: ${DEFAULT_SIZE * 0.25}px;\r\n    }\r\n\r\n    .folder {\r\n        height: auto;\r\n        padding: 5px 10px;\r\n        border: 1px solid #ffffff00;\r\n    }\r\n\r\n    .folder_selected {\r\n        background-color: #cce8ff !important;\r\n        border: 1px solid #99d1ff;\r\n    }\r\n    .folder:hover {\r\n        background-color: #e5f3ff;\r\n    }\r\n    .folder .name {\r\n        word-break: break-all;\r\n        font-size: 12px;\r\n        cursor: default;\r\n    }\r\n\r\n    .detailHeader {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        width: 100%;\r\n        padding: 5px 10px;\r\n    }\r\n\r\n    .detailHeader .name {\r\n        font-size: 11px;\r\n        cursor: default;\r\n    }\r\n\r\n    .bottomArea {\r\n        width: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: flex-start;\r\n        font-size: 12px;\r\n        padding: 0 10px;\r\n    }\r\n\r\n    .arrowBox {\r\n        display: flex;\r\n        gap: 10px;\r\n    }\r\n    .arrowBox img {\r\n        width: 15px;\r\n        height: 100%;\r\n    }\r\n\r\n    .noContents {\r\n        width: 100%;\r\n        height: 100%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        color: gray;\r\n        font-size: 14px;\r\n        cursor: default;\r\n    }\r\n\r\n    ${(props) => props.isClose && ` opacity: 0; transform: scale(0.9)`}\r\n`;\r\nexport default FolderComponent;\r\n\r\n/*\r\n\r\n*/\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport folderEmpty from \"../../asset/images/icons/folder_empty.png\";\r\n\r\nconst TechStackFolder = () => {\r\n    return (\r\n        <TechStackFolderBlock className=\"contentsArea_folder\">\r\n            <div className=\"folder\">\r\n                <img src={folderEmpty} alt=\"folderEmpty\" />\r\n                <div className=\"name\">\r\n                    폴더 2asdfasdfasdfasdfasdfasdfasdfasdf번\r\n                </div>\r\n            </div>\r\n        </TechStackFolderBlock>\r\n    );\r\n};\r\n\r\nconst TechStackFolderBlock = styled.div``;\r\nexport default TechStackFolder;\r\n","import React, { useCallback, useEffect, useRef } from \"react\";\r\nimport FolderComponent from \"../../Component/Program/FolderComponent\";\r\nimport {\r\n    rc_program_activeProgram,\r\n    rc_program_programList,\r\n    rc_program_zIndexCnt,\r\n} from \"../../store/program\";\r\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\r\nimport { useState } from \"react\";\r\n\r\nconst displayList = [\r\n    { value: \"BIG_BIG_ICON\", name: \"아주 큰 아이콘\" },\r\n    { value: \"BIG_ICON\", name: \"큰 아이콘\" },\r\n    { value: \"MEDIUM_ICON\", name: \"보통 아이콘\" },\r\n    { value: \"SMALL_ICON\", name: \"작은 아이콘\" },\r\n    { value: \"DETAIL\", name: \"자세히\" },\r\n];\r\n\r\nconst FolderContainer = ({ item }) => {\r\n    console.log(\"item: \", item);\r\n    const { key, status } = item;\r\n    const setProgramList = useSetRecoilState(rc_program_programList);\r\n    const [zIndexCnt, setZIndexCnt] = useRecoilState(rc_program_zIndexCnt);\r\n    const temp_zIndexCnt = zIndexCnt;\r\n    const [activeProgram, setActiveProgram] = useRecoilState(\r\n        rc_program_activeProgram\r\n    );\r\n    const [isMovable, setIsMovable] = useState(false);\r\n    const [isResizable, setIsResizable] = useState(false);\r\n    const [isClose, setIsClose] = useState(false);\r\n    const [isMaxSize, setIsMaxSize] = useState(false);\r\n\r\n    const [folderContents, setFolderContents] = useState(item.contents || []);\r\n    const [folderHistory, setFolderHistory] = useState([item.contents]);\r\n\r\n    const [selectedItem, setSelectedItem] = useState(\"\"); // 클릭한 아이템\r\n\r\n    const [displayType, setDisplayType] = useState(displayList[2].value);\r\n\r\n    // 보기 유형\r\n    const prevPos = useRef();\r\n    const boxRef = useRef();\r\n\r\n    // 현재 창 클릭\r\n    const onClick = useCallback(() => {\r\n        setActiveProgram(key);\r\n    }, [setActiveProgram, key]);\r\n\r\n    // 최대화\r\n    const onClickMax = useCallback(() => {\r\n        // setProgramList((prev) =>\r\n        //     prev.map((prevItem) =>\r\n        //         prevItem.key === key\r\n        //             ? { ...prevItem, status: \"active_max\" }\r\n        //             : { ...prevItem }\r\n        //     )\r\n        // );\r\n\r\n        setIsMaxSize(true);\r\n        boxRef.current.style.transition = \"0.25s\";\r\n        boxRef.current.style.left = \"0\";\r\n        boxRef.current.style.top = \"0\";\r\n\r\n        localStorage.setItem(`${key}width`, \"100vw\");\r\n        localStorage.setItem(`${key}height`, \"calc(100vh - 50px)\");\r\n\r\n        boxRef.current.style.width = \"100vw\";\r\n        boxRef.current.style.height = \"calc(100vh - 50px)\";\r\n    }, [setIsMaxSize, setProgramList]);\r\n\r\n    // 기본 크기\r\n    const onClickNormalSize = useCallback(() => {\r\n        setIsMaxSize(false);\r\n        // setProgramList((prev) =>\r\n        //     prev.map((prevItem) =>\r\n        //         prevItem.key === key\r\n        //             ? { ...prevItem, status: \"active\" }\r\n        //             : { ...prevItem }\r\n        //     )\r\n        // );\r\n        const left = localStorage.getItem(`${key}Left`);\r\n        const top = localStorage.getItem(`${key}Top`);\r\n        boxRef.current.style.transition = \"0.25s\";\r\n\r\n        if (left && top) {\r\n            boxRef.current.style.left = left + \"px\";\r\n            boxRef.current.style.top = top + \"px\";\r\n        } else {\r\n            boxRef.current.style.left = \"calc(50vw - 250px)\";\r\n            boxRef.current.style.top = \"calc(50vh - 250px)\";\r\n        }\r\n        localStorage.setItem(`${key}width`, \"500px\");\r\n        localStorage.setItem(`${key}height`, \"500px\");\r\n\r\n        boxRef.current.style.width = \"500px\";\r\n        boxRef.current.style.height = \"500px\";\r\n    }, [setIsMaxSize, setProgramList]);\r\n\r\n    // 최소화\r\n    const onClickMin = useCallback(() => {\r\n        setProgramList((prev) =>\r\n            prev.map((prevItem) =>\r\n                prevItem.key === key\r\n                    ? { ...prevItem, status: \"min\" }\r\n                    : { ...prevItem }\r\n            )\r\n        );\r\n    }, [key, setProgramList]);\r\n\r\n    // 닫기\r\n    const onClickClose = useCallback(() => {\r\n        setIsClose(true);\r\n        boxRef.current.style.transition = \"0.25s\";\r\n        boxRef.current.style.opacity = \"0\";\r\n\r\n        setTimeout(() => {\r\n            setProgramList((prev) => prev.filter((item) => item.key !== key));\r\n        }, [300]);\r\n    }, [key, setProgramList]);\r\n\r\n    // 이동 활성화\r\n    const onMouseDown = useCallback(\r\n        (e) => {\r\n            setIsMovable(true);\r\n            prevPos.current = {\r\n                X: e.clientX,\r\n                Y: e.clientY,\r\n            };\r\n        },\r\n        [setIsMovable]\r\n    );\r\n\r\n    // 이동\r\n    const onMouseMove = useCallback(\r\n        (e) => {\r\n            // if (e.clientY <= 0) {\r\n            //     console.log(\"exit\");\r\n            //     return;\r\n            // }\r\n            // 이전 좌표와 현재 좌표 차이값\r\n            if (isMovable) {\r\n                const posX = prevPos.current.X - e.clientX;\r\n                const posY = prevPos.current.Y - e.clientY;\r\n\r\n                // 현재 좌표가 이전 좌표로 바뀜\r\n                prevPos.current = {\r\n                    X: e.clientX,\r\n                    Y: e.clientY,\r\n                };\r\n\r\n                // left, top으로 이동\r\n\r\n                boxRef.current.style.transition = \"0s\";\r\n\r\n                localStorage.setItem(\r\n                    `${key}Left`,\r\n                    boxRef.current.offsetLeft - posX\r\n                );\r\n                localStorage.setItem(\r\n                    `${key}Top`,\r\n                    boxRef.current.offsetTop - posY\r\n                );\r\n\r\n                boxRef.current.style.left =\r\n                    boxRef.current.offsetLeft - posX + \"px\";\r\n                boxRef.current.style.top =\r\n                    boxRef.current.offsetTop - posY + \"px\";\r\n            }\r\n\r\n            if (isResizable) {\r\n                /*\r\n                    posX 에 이전과 커서 위치 차이값이 들어있다.\r\n\r\n                    마우스가 움직이면서 이전 좌표값을 갱신한다\r\n\r\n                    차이값 만큼 width, height 값을 계산한다\r\n\r\n                    만약 최소값보다 큰 경우만 값을 갱신한다\r\n\r\n                    만약 최소값 이하로 내려가려한다면?\r\n\r\n                    커서값은 계속 갱신된다. (현재 위치좌표로)\r\n\r\n                    커서가 오른쪽으로 움직이는 순간\r\n\r\n                    좌표 값 차이만큼 width 값이 변한다\r\n                    이때 커서는 한참 왼쪽에있다.\r\n\r\n                    커서가 다시 원래 위치로 오고 나서 값 계산에 따른 너비를 갱신해야한다.\r\n\r\n                    원래위치는 최소 값에 도달한 위치를 말한다.\r\n\r\n                    크기 조정함수 공통화 필요\r\n                    \r\n                */\r\n\r\n                // 커서의 이전 위치를 기반으로 어느 방향으로 움직일지 체크\r\n                boxRef.current.style.transition = \"0s\";\r\n                const posX = prevPos.current.X - e.clientX;\r\n                const posY = prevPos.current.Y - e.clientY;\r\n\r\n                // 크기 값 갱신\r\n                const newWidth = boxRef.current.offsetWidth - posX;\r\n                const newHeight = boxRef.current.offsetHeight - posY;\r\n\r\n                // ====================\r\n                // 상\r\n                if (posX === 0 && posY > 0) {\r\n                    console.log(\"위쪽\");\r\n                    if (newHeight < 60) {\r\n                        console.log(\"최소 높이 보다 낮습니다.\");\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${key}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n                // 하\r\n                else if (posX === 0 && posY < 0) {\r\n                    if (prevPos.current.Y <= e.clientY) {\r\n                        console.log(\"아래쪽\");\r\n                        localStorage.setItem(\r\n                            `${key}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n                // 좌\r\n                else if (posX > 0 && posY === 0) {\r\n                    console.log(\"왼쪽\");\r\n                    if (newWidth < 300) {\r\n                        console.log(\"너비가 최소 크기보다 작습니다.\");\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${key}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                        //\r\n                    }\r\n                }\r\n                // 우\r\n                else if (posX < 0 && posY === 0) {\r\n                    console.log(\"오른쪽\");\r\n                    if (prevPos.current.X <= e.clientX) {\r\n                        localStorage.setItem(\r\n                            `${key}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n                        // 마우스 위치..\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                    }\r\n                }\r\n                // 왼쪽 위\r\n                else if (posX > 0 && posY > 0) {\r\n                    console.log(\"왼쪽 위\");\r\n                    if (newWidth < 300) {\r\n                        console.log(\"너비가 최소 크기보다 작습니다.\");\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${key}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                        //\r\n                    }\r\n\r\n                    if (newHeight < 60) {\r\n                        console.log(\"최소 높이 보다 낮습니다.\");\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${key}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n                // 오른쪽 위\r\n                else if (posX < 0 && posY > 0) {\r\n                    console.log(\"오른쪽 위\");\r\n                    if (prevPos.current.X <= e.clientX) {\r\n                        console.log(\"prevPos.current.X: \", prevPos.current.X);\r\n                        console.log(\"e.clientX: \", e.clientX);\r\n                        localStorage.setItem(\r\n                            `${key}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n                        // 마우스 위치..\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                    }\r\n\r\n                    if (newHeight < 60) {\r\n                        console.log(\"최소 높이 보다 낮습니다.\");\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${key}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n                // 왼쪽 아래\r\n                else if (posX > 0 && posY < 0) {\r\n                    console.log(\"왼쪽 아래\");\r\n                    if (newWidth < 300) {\r\n                        console.log(\"너비가 최소 크기보다 작습니다.\");\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${key}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                        //\r\n                    }\r\n\r\n                    if (prevPos.current.Y <= e.clientY) {\r\n                        localStorage.setItem(\r\n                            `${key}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n                // 오른쪽 아래\r\n                else if (posX < 0 && posY < 0) {\r\n                    console.log(\"오른쪽 아래\");\r\n                    if (prevPos.current.X <= e.clientX) {\r\n                        console.log(\"prevPos.current.X: \", prevPos.current.X);\r\n                        console.log(\"e.clientX: \", e.clientX);\r\n                        localStorage.setItem(\r\n                            `${key}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n                        // 마우스 위치..\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                    }\r\n\r\n                    if (prevPos.current.Y <= e.clientY) {\r\n                        localStorage.setItem(\r\n                            `${key}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        [isMovable, isResizable]\r\n    );\r\n\r\n    // 이동 종료\r\n    const onMouseUp = useCallback(() => {\r\n        setIsMovable(false);\r\n    }, []);\r\n\r\n    // 현재 창 맨 앞으로\r\n    useEffect(() => {\r\n        if (activeProgram === key) {\r\n            boxRef.current.style.zIndex = temp_zIndexCnt + 1;\r\n            setZIndexCnt((prev) => prev + 1);\r\n        }\r\n    }, [activeProgram, key, setZIndexCnt]);\r\n\r\n    // 이동 활성화\r\n    useEffect(() => {\r\n        document.addEventListener(\"mousemove\", onMouseMove);\r\n\r\n        // 마우스 클릭이 종료되는 경우 모든 이벤트 종료 처리 필요\r\n        document.addEventListener(\"mouseup\", () => setIsResizable(false));\r\n\r\n        return () => {\r\n            document.removeEventListener(\"mousemove\", onMouseMove);\r\n        };\r\n    }, [onMouseMove]);\r\n\r\n    useEffect(() => {\r\n        if (status === \"active\") {\r\n            if (isMaxSize) {\r\n                boxRef.current.style.left = \"0px\";\r\n                boxRef.current.style.top = \"0px\";\r\n            } else {\r\n                const left = localStorage.getItem(`${key}Left`);\r\n                const top = localStorage.getItem(`${key}Top`);\r\n\r\n                //\r\n                if (left && top) {\r\n                    boxRef.current.style.left = left + \"px\";\r\n                    boxRef.current.style.top = top + \"px\";\r\n                } else {\r\n                    boxRef.current.style.left = \"calc(50vw - 250px)\";\r\n                    boxRef.current.style.top = \"calc(50vh - 250px)\";\r\n                }\r\n            }\r\n        }\r\n    }, [status, isMaxSize, boxRef]);\r\n\r\n    useEffect(() => {\r\n        /*\r\n        min\r\n        active\r\n        */\r\n\r\n        // 활성화\r\n        if (status === \"active\") {\r\n            boxRef.current.style.transition = \"0.25s\";\r\n            boxRef.current.style.opacity = \"1\";\r\n\r\n            const height = localStorage.getItem(`${key}height`);\r\n            const width = localStorage.getItem(`${key}width`);\r\n\r\n            if (height && width) {\r\n                boxRef.current.style.height = height;\r\n                boxRef.current.style.width = width;\r\n            } else {\r\n                boxRef.current.style.width = \"500px\";\r\n                boxRef.current.style.height = \"500px\";\r\n            }\r\n\r\n            boxRef.current.style.scale = \"1\";\r\n        }\r\n        // 최소화\r\n        else if (status === \"min\") {\r\n            boxRef.current.style.transition = \"0.25s\";\r\n            boxRef.current.style.opacity = \"0\";\r\n            boxRef.current.style.left = \"80px\";\r\n            boxRef.current.style.top = \"60vh\";\r\n            boxRef.current.style.scale = \"0.6\";\r\n            boxRef.current.style.width = \"500px\";\r\n            boxRef.current.style.height = \"500px\";\r\n        }\r\n    }, [status]);\r\n\r\n    const onMouseDown_Resize = useCallback((e) => {\r\n        console.log(\"posX: \", e.clientX);\r\n        setIsResizable(true);\r\n        prevPos.current = {\r\n            X: e.clientX,\r\n            Y: e.clientY,\r\n        };\r\n    }, []);\r\n\r\n    const onMouseMove_Resize = useCallback(() => {\r\n        //\r\n    }, []);\r\n\r\n    const onMouseUp_Resize = useCallback(() => {\r\n        //\r\n        setIsResizable(false);\r\n    }, []);\r\n\r\n    // 특정 아이템 클릭\r\n    const onClickItem = useCallback((name) => {\r\n        setSelectedItem(name);\r\n    }, []);\r\n\r\n    // 특정 아이템 더블 클릭\r\n    const onDoubleClickItem = useCallback(\r\n        (item) => {\r\n            console.log(\"item: \", item);\r\n            if (item.type === \"FOLDER\") {\r\n                // 이동 기록에 없는 경우만 추가한다.\r\n                if (\r\n                    !folderHistory.some(\r\n                        (someItem) => someItem.name === item.name\r\n                    )\r\n                ) {\r\n                    setFolderHistory((prev) => [...prev, item.contents]);\r\n                }\r\n                setFolderContents(item.contents);\r\n            }\r\n        },\r\n        [folderHistory]\r\n    );\r\n\r\n    const onClickLeft = useCallback(() => {\r\n        setFolderContents(folderHistory[0]);\r\n        //\r\n    }, []);\r\n\r\n    const onClickRight = useCallback(() => {\r\n        // setFolderContents(folderHistory[folderHistory.length - 1]);\r\n        //\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            localStorage.removeItem(`${key}Left`);\r\n            localStorage.removeItem(`${key}Top`);\r\n            localStorage.removeItem(`${key}width`);\r\n            localStorage.removeItem(`${key}height`);\r\n        };\r\n    }, []);\r\n\r\n    const propDatas = {\r\n        onClick,\r\n        onClickClose,\r\n        onClickMax,\r\n        onClickNormalSize,\r\n        onClickMin,\r\n        onMouseDown,\r\n        onMouseUp,\r\n        onMouseDown_Resize,\r\n        onMouseUp_Resize,\r\n        onClickItem,\r\n        onDoubleClickItem,\r\n        onClickLeft,\r\n        onClickRight,\r\n        setDisplayType,\r\n\r\n        boxRef,\r\n        isClose,\r\n        isMaxSize,\r\n        item,\r\n        selectedItem,\r\n        folderContents,\r\n        displayType,\r\n        displayList,\r\n    };\r\n    return <FolderComponent {...propDatas} />;\r\n};\r\n\r\nexport default React.memo(FolderContainer);\r\n"],"names":["DEFAULT_SIZE","styled","open","keyframes","FolderComponentBlock","props","zIndexCnt","isClose","onClick","onClickClose","onClickMax","onClickNormalSize","onClickMin","onMouseDown","onMouseUp","onMouseDown_Resize","onMouseUp_Resize","onClickItem","onDoubleClickItem","onClickLeft","onClickRight","setDisplayType","boxRef","isMaxSize","item","selectedItem","folderContents","displayType","displayList","ref","className","src","icon","alt","key","value","onChange","e","target","map","idx","name","width","height","length","onDoubleClick","type","folderCnt","FolderContainer","console","log","status","setProgramList","useSetRecoilState","rc_program_programList","useRecoilState","rc_program_zIndexCnt","setZIndexCnt","temp_zIndexCnt","rc_program_activeProgram","activeProgram","setActiveProgram","useState","isMovable","setIsMovable","isResizable","setIsResizable","setIsClose","setIsMaxSize","contents","setFolderContents","folderHistory","setFolderHistory","setSelectedItem","prevPos","useRef","useCallback","current","style","transition","left","top","localStorage","setItem","getItem","prev","prevItem","opacity","setTimeout","filter","X","clientX","Y","clientY","onMouseMove","posX","posY","offsetLeft","offsetTop","newWidth","offsetWidth","newHeight","offsetHeight","useEffect","zIndex","document","addEventListener","removeEventListener","scale","some","someItem","removeItem","propDatas","React"],"sourceRoot":""}