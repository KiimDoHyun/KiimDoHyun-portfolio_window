{"version":3,"file":"static/js/899.22878765.chunk.js","mappings":"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","sources":["Component/Program/ImageProgramComponent.jsx","Container/Program/ImageProgramContainer.jsx","Component/Program/FolderProgramComponent.jsx","Container/Program/FolderProgramContainer.jsx","Component/Program/DOCProgramComponent.jsx","Container/Program/DOCProgramContainer.jsx","Component/Program/INFOProgramComponent.jsx","Container/Program/INFOProgramContainer.jsx","Component/Program/ProgramComponent.jsx","Container/Program/ProgramContainer.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nimport plus from \"../../asset/images/icons/plus_line.png\";\r\nimport minus from \"../../asset/images/icons/minus_line.png\";\r\nimport rotate_left from \"../../asset/images/icons/rotate_left_line.png\";\r\nimport rotate_right from \"../../asset/images/icons/rotate_right_line.png\";\r\nimport image_defaultSize from \"../../asset/images/icons/image_defaultSize_line.png\";\r\n\r\nimport collapseArrowLeft from \"../../asset/images/icons/collapse-arrow-left-white.png\";\r\nimport collapseArrowRight from \"../../asset/images/icons/collapse-arrow-right-white.png\";\r\n\r\nconst ImageProgramComponent = ({\r\n    type,\r\n    imageArr,\r\n    refImage,\r\n    curImageIdx,\r\n    currentImage_sizeRate,\r\n\r\n    onClickM_Image_ScaleUp,\r\n    onClickM_Image_ScaleDown,\r\n    onClickM_Image_Rotate_Right,\r\n    onClickM_Image_Rotate_Left,\r\n    onClickM_Image_Default,\r\n    IMG_onClickLeft,\r\n    IMG_onClickRight,\r\n}) => {\r\n    return (\r\n        <>\r\n            <div className={`headerArea2 headerArea2_${type}`}>\r\n                <div\r\n                    className=\"image_header_controller_btn\"\r\n                    onClick={onClickM_Image_ScaleUp}\r\n                    title=\"이미지 확대\"\r\n                >\r\n                    <img src={plus} alt=\"확대\" />\r\n                </div>\r\n                <div\r\n                    className=\"image_header_controller_btn\"\r\n                    onClick={onClickM_Image_ScaleDown}\r\n                    title=\"이미지 축소\"\r\n                >\r\n                    <img src={minus} alt=\"축소\" />\r\n                </div>\r\n                <div\r\n                    className=\"image_header_controller_btn\"\r\n                    onClick={onClickM_Image_Rotate_Right}\r\n                    title=\"왼쪽으로 회전\"\r\n                >\r\n                    <img src={rotate_left} alt=\"회전_좌\" />\r\n                </div>\r\n                <div\r\n                    className=\"image_header_controller_btn\"\r\n                    onClick={onClickM_Image_Rotate_Left}\r\n                    title=\"오른쪽으로 회전\"\r\n                >\r\n                    <img src={rotate_right} alt=\"회전_우\" />\r\n                </div>\r\n                <div\r\n                    className=\"image_header_controller_btn\"\r\n                    onClick={onClickM_Image_Default}\r\n                    title=\"기본 설정으로\"\r\n                >\r\n                    <img src={image_defaultSize} alt=\"화면맞춤\" />\r\n                </div>\r\n                <div className=\"image_haeder_controller_number\">\r\n                    {Math.round(currentImage_sizeRate * 100)} %\r\n                </div>\r\n            </div>\r\n            <div className={`contentsArea_Cover`}>\r\n                <div className=\"contentsArea_image\">\r\n                    <div\r\n                        className=\"image_arrow image_arrowLeft\"\r\n                        title=\"이전\"\r\n                        onClick={IMG_onClickLeft}\r\n                    >\r\n                        <img src={collapseArrowLeft} alt=\"collapseArrowLeft\" />\r\n                    </div>\r\n                    <div\r\n                        className=\"image_arrow image_arrowRight\"\r\n                        title=\"다음\"\r\n                        onClick={IMG_onClickRight}\r\n                    >\r\n                        <img\r\n                            src={collapseArrowRight}\r\n                            alt=\"collapseArrowRight\"\r\n                        />\r\n                    </div>\r\n\r\n                    {imageArr.length > 0 && (\r\n                        <img\r\n                            className=\"imageContent\"\r\n                            ref={refImage}\r\n                            // src={item.icon}\r\n                            src={imageArr[curImageIdx].icon}\r\n                            alt={imageArr[curImageIdx].name}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className=\"bottomArea\">\r\n                {curImageIdx + 1} / {imageArr.length}{\" \"}\r\n                {imageArr[curImageIdx] && imageArr[curImageIdx].name}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default React.memo(ImageProgramComponent);\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport ImageProgramComponent from \"../../Component/Program/ImageProgramComponent\";\r\nimport { rc_global_Directory_Tree } from \"../../store/global\";\r\n\r\n// 이미지\r\nconst ImageProgramContainer = ({ type, parent, name }) => {\r\n    const Directory_Tree = useRecoilValue(rc_global_Directory_Tree);\r\n\r\n    // 현재 아이템의 부모의 모든 아이템중 이미지형 프로그램\r\n    const [imageArr, setImageArr] = useState([]);\r\n    const imageArrLength = useRef(0);\r\n\r\n    // 현재 아이템의 인덱스\r\n    const [curImageIdx, setCurImageIdx] = useState(0);\r\n\r\n    // 이미지 크기 배율\r\n    const [currentImage_sizeRate, setCurrentImage_sizeRate] = useState(1);\r\n\r\n    // 이미지 회전 각\r\n    const [currentImage_rotate, setCurrentImage_rotate] = useState(0);\r\n\r\n    // 이미지 Ref\r\n    const refImage = useRef(null);\r\n\r\n    // 왼쪽으로 이동\r\n    const IMG_onClickLeft = useCallback(() => {\r\n        // 나의 부모의 자식들을 알고 있어야 좌우 이동이 가능하다.\r\n        setCurImageIdx((prev) => (prev - 1 >= 0 ? prev - 1 : 0));\r\n        setCurrentImage_sizeRate(1);\r\n    }, []);\r\n\r\n    // 오른쪽으로 이동\r\n    const IMG_onClickRight = useCallback(() => {\r\n        setCurImageIdx((prev) =>\r\n            prev + 1 < imageArrLength.current\r\n                ? prev + 1\r\n                : imageArrLength.current - 1\r\n        );\r\n        setCurrentImage_sizeRate(1);\r\n    }, []);\r\n\r\n    // 이미지 확대\r\n    const onClickM_Image_ScaleUp = useCallback(() => {\r\n        setCurrentImage_sizeRate((prev) => prev + 0.2);\r\n    }, [setCurrentImage_sizeRate]);\r\n\r\n    // 이미지 축소\r\n    const onClickM_Image_ScaleDown = useCallback(() => {\r\n        setCurrentImage_sizeRate((prev) => (prev - 0.2 > 0 ? prev - 0.2 : 0));\r\n    }, [setCurrentImage_sizeRate]);\r\n\r\n    // 이미지 회전_왼쪽\r\n    const onClickM_Image_Rotate_Right = useCallback(() => {\r\n        setCurrentImage_rotate((prev) => (prev + 90) % 360);\r\n    }, [setCurrentImage_sizeRate]);\r\n\r\n    // 이미지 회전_오른쪽\r\n    const onClickM_Image_Rotate_Left = useCallback(() => {\r\n        setCurrentImage_rotate((prev) => (prev - 90) % 360);\r\n    }, [setCurrentImage_sizeRate]);\r\n\r\n    // 이미지 기본 설정으로 변경\r\n    const onClickM_Image_Default = useCallback(() => {\r\n        setCurrentImage_rotate(0);\r\n        setCurrentImage_sizeRate(1);\r\n    }, [setCurrentImage_sizeRate]);\r\n\r\n    // 이미지 회전\r\n    useEffect(() => {\r\n        if (refImage.current) {\r\n            refImage.current.style.rotate = `${currentImage_rotate}deg`;\r\n        }\r\n    }, [currentImage_rotate]);\r\n\r\n    // 이미지 크기\r\n    useEffect(() => {\r\n        if (refImage.current) {\r\n            refImage.current.style.scale = currentImage_sizeRate;\r\n        }\r\n    }, [currentImage_sizeRate]);\r\n\r\n    useEffect(() => {\r\n        // 부모의 아이템\r\n        const parentContents = Directory_Tree[parent] || [];\r\n\r\n        // 가공된 아이템\r\n        const calculated_parentContents = parentContents.filter(\r\n            (filterItem) => filterItem.type === \"IMAGE\"\r\n        );\r\n        imageArrLength.current = calculated_parentContents.length;\r\n\r\n        setImageArr(calculated_parentContents);\r\n\r\n        setCurImageIdx(\r\n            calculated_parentContents.findIndex(\r\n                (fintItem) => fintItem.name === name\r\n            )\r\n        );\r\n    }, [Directory_Tree, parent, name]);\r\n\r\n    const propDats = {\r\n        type,\r\n        imageArr,\r\n        refImage,\r\n        curImageIdx,\r\n        currentImage_sizeRate,\r\n\r\n        onClickM_Image_ScaleUp,\r\n        onClickM_Image_ScaleDown,\r\n        onClickM_Image_Rotate_Right,\r\n        onClickM_Image_Rotate_Left,\r\n        onClickM_Image_Default,\r\n        IMG_onClickLeft,\r\n        IMG_onClickRight,\r\n    };\r\n    return <ImageProgramComponent {...propDats} />;\r\n};\r\n\r\nexport default React.memo(ImageProgramContainer);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport leftArrow from \"../../asset/images/icons/left-arrow.png\";\r\nimport folderFull from \"../../asset/images/icons/folder_full.png\";\r\nimport folderEmpty from \"../../asset/images/icons/folder_empty.png\";\r\nimport defaultImage from \"../../asset/images/icons/image_default.png\";\r\nconst FolderProgramComponent = ({\r\n    type,\r\n    displayList,\r\n    currentFolder,\r\n    displayType,\r\n    folderContents,\r\n    Directory_Tree,\r\n    selectedItem,\r\n\r\n    onClickLeft,\r\n    setDisplayType,\r\n    onClickItem,\r\n    onDoubleClickItem,\r\n}) => {\r\n    return (\r\n        <>\r\n            <div className={`headerArea2 headerArea2_${type}`}>\r\n                <div className=\"arrowBox\">\r\n                    <img\r\n                        src={leftArrow}\r\n                        alt=\"leftArrow\"\r\n                        onClick={onClickLeft}\r\n                    />\r\n                    {/*  뒤로 가기 임시 제거 */}\r\n                    {/* <img\r\n                        src={rightArrow}\r\n                        alt=\"rightArrow\"\r\n                        onClick={onClickRight}\r\n                    /> */}\r\n                </div>\r\n                <div className=\"routeBox\">\r\n                    <input\r\n                        value={currentFolder.route || \"/ [error]\"}\r\n                        readOnly\r\n                    />\r\n                </div>\r\n                <div className=\"selectDisplayType\">\r\n                    <select\r\n                        value={displayType}\r\n                        onChange={(e) => setDisplayType(e.target.value)}\r\n                    >\r\n                        {displayList.map((mapItem, idx) => (\r\n                            <option key={idx} value={mapItem.value}>\r\n                                {mapItem.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div className={`contentsArea_Cover`}>\r\n                <div className=\"sideFolderArea\"></div>\r\n                <div className={`${displayType} contentsArea_folder`}>\r\n                    {folderContents && folderContents.length > 0 ? (\r\n                        <>\r\n                            {displayType === \"DETAIL\" && (\r\n                                <div className=\"detailHeader\">\r\n                                    <div className=\"name\">{\"이미지\"}</div>\r\n                                    <div className=\"name\">{\"이름\"}</div>\r\n                                    <div className=\"name\">{\"유형\"}</div>\r\n                                </div>\r\n                            )}\r\n                            {folderContents.map((mapItem, idx) => (\r\n                                <div\r\n                                    className={`${\r\n                                        selectedItem === mapItem.name\r\n                                            ? \"folder folder_selected\"\r\n                                            : \"folder\"\r\n                                    }`}\r\n                                    key={idx}\r\n                                    onClick={() => onClickItem(mapItem.name)}\r\n                                    onDoubleClick={() =>\r\n                                        onDoubleClickItem(mapItem)\r\n                                    }\r\n                                >\r\n                                    {/*  폴더 */}\r\n                                    <div className=\"imgCover\">\r\n                                        {mapItem.type === \"FOLDER\" ? (\r\n                                            <img\r\n                                                src={\r\n                                                    Directory_Tree[\r\n                                                        mapItem.name\r\n                                                    ] &&\r\n                                                    Directory_Tree[mapItem.name]\r\n                                                        .length > 0\r\n                                                        ? // item.folderCnt\r\n                                                          folderFull\r\n                                                        : folderEmpty\r\n                                                }\r\n                                                alt=\"folderEmpty\"\r\n                                            />\r\n                                        ) : (\r\n                                            <img\r\n                                                src={\r\n                                                    mapItem.icon || defaultImage\r\n                                                }\r\n                                                alt={mapItem.name}\r\n                                            />\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    <div className=\"name\">{mapItem.name}</div>\r\n\r\n                                    {displayType === \"DETAIL\" && (\r\n                                        <div className=\"name\">\r\n                                            {mapItem.type}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            ))}\r\n                        </>\r\n                    ) : (\r\n                        <div className=\"noContents\">비어있습니다.</div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst FolderProgramComponentBlock = styled.div``;\r\nexport default FolderProgramComponent;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport useActiveProgram from \"../../hooks/useActiveProgram\";\r\nimport {\r\n    rc_global_Directory_List,\r\n    rc_global_Directory_Tree,\r\n} from \"../../store/global\";\r\nimport FolderProgramComponent from \"../../Component/Program/FolderProgramComponent\";\r\n\r\nconst displayList = [\r\n    { value: \"BIG_BIG_ICON\", name: \"아주 큰 아이콘\" },\r\n    { value: \"BIG_ICON\", name: \"큰 아이콘\" },\r\n    { value: \"MEDIUM_ICON\", name: \"보통 아이콘\" },\r\n    { value: \"SMALL_ICON\", name: \"작은 아이콘\" },\r\n    { value: \"DETAIL\", name: \"자세히\" },\r\n];\r\n\r\nconst FolderProgramContainer = ({ name, type }) => {\r\n    const directory = useRecoilValue(rc_global_Directory_List);\r\n    const Directory_Tree = useRecoilValue(rc_global_Directory_Tree);\r\n    const [selectedItem, setSelectedItem] = useState(\"\"); // 클릭한 아이템\r\n\r\n    // 아이콘 더블클릭 (활성화)\r\n    const onDoubleClickIcon = useActiveProgram();\r\n\r\n    // 현재 폴더에서 보여줄 컨텐츠 (초기엔 바탕화면에서 클릭한 아이템의 컨텐츠)\r\n    const [folderContents, setFolderContents] = useState(\r\n        Directory_Tree[name] || []\r\n    );\r\n\r\n    // 현재 폴더 정보 (초기엔 바탕화면에서 클릭한 아이템.)\r\n    const [currentFolder, setCurrentFolder] = useState(\r\n        directory.find((findItem) => name === findItem.name)\r\n    );\r\n\r\n    const [displayType, setDisplayType] = useState(displayList[2].value);\r\n\r\n    // 특정 아이템 클릭\r\n    const onClickItem = useCallback((name) => {\r\n        setSelectedItem(name);\r\n    }, []);\r\n\r\n    // 뒤로 가기\r\n    /*\r\n    현재 위치를 현재 아이템의 부모로 변경한다.\r\n    */\r\n    const onClickLeft = useCallback(() => {\r\n        if (!currentFolder.parent) return;\r\n\r\n        setFolderContents(Directory_Tree[currentFolder.parent]);\r\n        if (currentFolder.parent === \"KDH\") {\r\n            setCurrentFolder({\r\n                route: \"/ KDH\",\r\n            });\r\n        } else {\r\n            setCurrentFolder(\r\n                directory.find((item) => item.name === currentFolder.parent)\r\n            );\r\n        }\r\n    }, [setFolderContents, currentFolder, Directory_Tree]);\r\n\r\n    // 특정 아이템 더블 클릭\r\n    const onDoubleClickItem = useCallback(\r\n        (clickedItem) => {\r\n            // 폴더인 경우 현재 위치를 해당 폴더 위치로 변경한다.\r\n            if (clickedItem.type === \"FOLDER\") {\r\n                setCurrentFolder(\r\n                    directory.find(\r\n                        (findItem) => clickedItem.name === findItem.name\r\n                    )\r\n                );\r\n                setFolderContents(Directory_Tree[clickedItem.name] || []);\r\n            }\r\n            // DOC, IMAGE 인 경우\r\n            // 해당하는 창을 띄운다\r\n            else {\r\n                onDoubleClickIcon(clickedItem);\r\n            }\r\n        },\r\n        [onDoubleClickIcon, Directory_Tree, directory]\r\n    );\r\n\r\n    const propDatas = {\r\n        type,\r\n        displayList,\r\n        currentFolder,\r\n        displayType,\r\n        folderContents,\r\n        Directory_Tree,\r\n        selectedItem,\r\n\r\n        onClickLeft,\r\n        setDisplayType,\r\n        onClickItem,\r\n        onDoubleClickItem,\r\n    };\r\n\r\n    return <FolderProgramComponent {...propDatas} />;\r\n};\r\n\r\nexport default FolderProgramContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DOCProgramComponent = ({ type, DOCData }) => {\r\n    return (\r\n        <>\r\n            <div className={`headerArea2 headerArea2_${type}`}></div>\r\n            <div className={`contentsArea_Cover`}>\r\n                <div className=\"contentsArea_doc\">\r\n                    <div className=\"doc_imageArea\">\r\n                        {DOCData.data.projectImages &&\r\n                        DOCData.data.projectImages.length > 0 ? (\r\n                            <>\r\n                                {DOCData.data.projectImages.map(\r\n                                    (imageItem, idx) => (\r\n                                        <div\r\n                                            key={idx}\r\n                                            className=\"projectImageItem\"\r\n                                        >\r\n                                            <img\r\n                                                src={imageItem}\r\n                                                alt={`${imageItem}${idx + 1}`}\r\n                                            />\r\n                                        </div>\r\n                                    )\r\n                                )}\r\n                            </>\r\n                        ) : (\r\n                            <div className=\"noProjectImage\">\r\n                                프로젝트 이미지가 없습니다.\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"doc_contentsArea\">\r\n                        <div className=\"doc_card\">\r\n                            <div className=\"cardTitle\">프로젝트 명</div>\r\n                            <div className=\"cardContent\">\r\n                                {DOCData.data.projectName}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"doc_card\">\r\n                            <div className=\"cardTitle\">프로젝트 설명</div>\r\n                            <div className=\"cardContent\">\r\n                                {DOCData.data.projectDesc}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"doc_card\">\r\n                            <div className=\"cardTitle\">프로젝트 성과</div>\r\n                            <div className=\"cardContent doc_reulst\">\r\n                                {DOCData.data.projectReulst &&\r\n                                    DOCData.data.projectReulst.map(\r\n                                        (resultItem, idx) => (\r\n                                            <div\r\n                                                key={idx}\r\n                                                className=\"cardResult\"\r\n                                            >\r\n                                                <div className=\"resultTitle\">\r\n                                                    {`${idx + 1}. `}{\" \"}\r\n                                                    {resultItem.title}\r\n                                                </div>\r\n                                                <div className=\"resultContent\">\r\n                                                    {resultItem.content}\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    )}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"doc_card\">\r\n                            <div className=\"cardTitle\">프로젝트 기간</div>\r\n                            <div className=\"cardContent\">\r\n                                {DOCData.data.projectTerm.map(\r\n                                    (termItem, idx) => (\r\n                                        <div key={idx}>{termItem}</div>\r\n                                    )\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"doc_card\">\r\n                            <div className=\"cardTitle\">프로젝트 성격</div>\r\n                            <div className=\"cardContent\">\r\n                                {DOCData.data.projectType}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"doc_card\">\r\n                            <div className=\"cardTitle\">담당 역할</div>\r\n                            <div className=\"cardContent\">\r\n                                {DOCData.data.role.map((roleItem, idx) => (\r\n                                    <div key={idx}>\r\n                                        {`${idx + 1}. `}\r\n                                        {roleItem}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"doc_card\">\r\n                            <div className=\"cardTitle\">개발부서</div>\r\n                            <div className=\"cardContent\">\r\n                                {DOCData.data.department}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"doc_card\">\r\n                            <div className=\"cardTitle\">사용한 기술 스택</div>\r\n                            <div className=\"cardContent doc_stack\">\r\n                                {DOCData.data.stack.map((stackItem, idx) => (\r\n                                    <div className=\"stackItem\" key={idx}>\r\n                                        <div className=\"stackItem_name\">\r\n                                            {stackItem.name}\r\n                                        </div>\r\n                                        <div className=\"stackItem_Image\">\r\n                                            <img\r\n                                                src={stackItem.img}\r\n                                                alt=\"stackImage\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"doc_card\">\r\n                            <div className=\"cardTitle\">url</div>\r\n                            <div className=\"cardContent\">\r\n                                {DOCData.data.url || \"공개된 URL 없음\"}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst DOCProgramComponentBlock = styled.div``;\r\nexport default DOCProgramComponent;\r\n","import React, { useMemo } from \"react\";\r\nimport { projectDatas } from \"../../Common/data\";\r\nimport DOCProgramComponent from \"../../Component/Program/DOCProgramComponent\";\r\n\r\nconst DOCProgramContainer = ({ type, name }) => {\r\n    /*\r\n    문서형\r\n\r\n    현재 프로그램이 문서형이라면\r\n\r\n    문서 정보를 가져온다.\r\n\r\n    문서정보는 변경되지 않는다.\r\n    */\r\n    const DOCData = useMemo(() => {\r\n        if (type !== \"DOC\") return null;\r\n\r\n        const target = projectDatas.find(\r\n            (findItem) => findItem.projectName === name\r\n        );\r\n        console.log(\"target\", target);\r\n        return { data: target, keys: Object.keys(target) || [] };\r\n    }, [projectDatas, type, name]);\r\n\r\n    const propDatas = {\r\n        type,\r\n        DOCData,\r\n    };\r\n    return <DOCProgramComponent {...propDatas} />;\r\n};\r\n\r\nexport default DOCProgramContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport KDH from \"../../asset/images/김도현.jpg\";\r\nimport blogLine from \"../../asset/images/icons/blog_line.png\";\r\nimport githubLine from \"../../asset/images/icons/github_line.png\";\r\nimport companyLine from \"../../asset/images/icons/company_line.png\";\r\nimport linkedin from \"../../asset/images/icons/linkedin_line.png\";\r\n\r\nimport campus from \"../../asset/images/icons/campus_line_blue.png\";\r\nimport book from \"../../asset/images/icons/book_line_blue.png\";\r\nimport coding from \"../../asset/images/icons/coding_line_blue.png\";\r\nimport business from \"../../asset/images/icons/business_line_blue.png\";\r\nimport gear from \"../../asset/images/icons/gear_line_blue.png\";\r\nimport web from \"../../asset/images/icons/web_line_blue.png\";\r\nimport companyBlue from \"../../asset/images/icons/company_line_blue.png\";\r\n\r\nconst INFOProgramComponent = ({ type }) => {\r\n    return (\r\n        <>\r\n            <div className={`headerArea2 headerArea2_${type}`}></div>\r\n            <div className={`contentsArea_Cover`}>\r\n                <div className=\"contentsArea_info\">\r\n                    <div className=\"top\">\r\n                        <div className=\"info1\">\r\n                            <div className=\"myImageArea\">\r\n                                <img src={KDH} alt=\"김도현\" />\r\n                            </div>\r\n                            <div className=\"myInfoArea\">\r\n                                <h1>김도현</h1>\r\n                                <p style={{ userSelect: \"text\" }}>\r\n                                    bzidol@naver.com\r\n                                </p>\r\n                                <p>010-7793-5630</p>\r\n                                <p>{\"남자 / 27 세\"}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"info2\">\r\n                            <div className=\"infoItem\">\r\n                                <div className=\"myImageArea\">\r\n                                    <img src={githubLine} alt=\"Git\" />\r\n                                </div>\r\n                                <div className=\"myInfoArea\">\r\n                                    <p>Git</p>\r\n                                    <a\r\n                                        target={\"_blank\"}\r\n                                        href=\"https://github.com/KiimDoHyun\"\r\n                                    >\r\n                                        이동하기\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"infoItem\">\r\n                                <div className=\"myImageArea\">\r\n                                    <img src={blogLine} alt=\"Blog\" />\r\n                                </div>\r\n                                <div className=\"myInfoArea\">\r\n                                    <p>Blog</p>\r\n                                    <a\r\n                                        target={\"_blank\"}\r\n                                        href=\"https://velog.io/@kdh123\"\r\n                                    >\r\n                                        이동하기\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"infoItem\">\r\n                                <div className=\"myImageArea\">\r\n                                    <img src={companyLine} alt=\"Company\" />\r\n                                </div>\r\n                                <div className=\"myInfoArea\">\r\n                                    <p>Company</p>\r\n                                    <a\r\n                                        target={\"_blank\"}\r\n                                        href=\"https://araonsoft.com/\"\r\n                                    >\r\n                                        이동하기\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"infoItem\">\r\n                                <div className=\"myImageArea\">\r\n                                    <img src={linkedin} alt=\"linkedin\" />\r\n                                </div>\r\n                                <div className=\"myInfoArea\">\r\n                                    <p>linkedin</p>\r\n                                    <a\r\n                                        target={\"_blank\"}\r\n                                        href=\"https://www.linkedin.com/in/%EB%8F%84%ED%98%84-%EA%B9%80-b4a477252/\"\r\n                                    >\r\n                                        이동하기\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"body\">\r\n                        <div className=\"infoItem\">\r\n                            <div className=\"myImageArea\">\r\n                                <img src={campus} alt=\"campus\" />\r\n                            </div>\r\n                            <div className=\"myInfoArea\">\r\n                                <p className=\"title\">대학교</p>\r\n                                <p className=\"desc\">금오공과대학교</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"infoItem\">\r\n                            <div className=\"myImageArea\">\r\n                                <img src={book} alt=\"book\" />\r\n                            </div>\r\n                            <div className=\"myInfoArea\">\r\n                                <p className=\"title\">학과</p>\r\n                                <p className=\"desc\">컴퓨터공학과</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"infoItem\">\r\n                            <div className=\"myImageArea\">\r\n                                <img src={business} alt=\"business\" />\r\n                            </div>\r\n                            <div className=\"myInfoArea\">\r\n                                <p className=\"title\">경력</p>\r\n                                <p className=\"desc\">{\"1 년(주니어)\"}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"infoItem\">\r\n                            <div className=\"myImageArea\">\r\n                                <img src={web} alt=\"web\" />\r\n                            </div>\r\n                            <div className=\"myInfoArea\">\r\n                                <p className=\"title\">분야</p>\r\n                                <p className=\"desc\">Front-end</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"infoItem\">\r\n                            <div className=\"myImageArea\">\r\n                                <img src={companyBlue} alt=\"Company\" />\r\n                            </div>\r\n                            <div className=\"myInfoArea\">\r\n                                <p className=\"title\">회사</p>\r\n                                <p className=\"desc\">{\"(주)아라온소프트\"}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"infoItem\">\r\n                            <div className=\"myImageArea\">\r\n                                <img src={gear} alt=\"gear\" />\r\n                            </div>\r\n                            <div className=\"myInfoArea\">\r\n                                <p className=\"title\">주 스택</p>\r\n                                <p className=\"desc\">React</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"infoItem\">\r\n                            <div className=\"myImageArea\">\r\n                                <img src={coding} alt=\"coding\" />\r\n                            </div>\r\n                            <div className=\"myInfoArea\">\r\n                                <p className=\"title\">주 언어</p>\r\n                                <p className=\"desc\">자바스크립트</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst INFOProgramComponentBlock = styled.div``;\r\nexport default INFOProgramComponent;\r\n","import React from \"react\";\r\nimport INFOProgramComponent from \"../../Component/Program/INFOProgramComponent\";\r\n\r\nconst INFOProgramContainer = ({ type }) => {\r\n    const propDatas = { type };\r\n    return <INFOProgramComponent {...propDatas} />;\r\n};\r\n\r\nexport default INFOProgramContainer;\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport folderEmpty from \"../../asset/images/icons/folder_empty.png\";\r\nimport defaultImage from \"../../asset/images/icons/image_default.png\";\r\nimport monitor from \"../../asset/images/icons/monitor.png\";\r\n\r\nimport close from \"../../asset/images/icons/close.png\";\r\nimport horizontalLine from \"../../asset/images/icons/horizontal-line.png\";\r\nimport maximize from \"../../asset/images/icons/maximize.png\";\r\nimport minimize from \"../../asset/images/icons/minimize.png\";\r\n\r\nimport defaultDocumentImage from \"../../asset/images/icons/document_default.png\";\r\n\r\nimport ImageProgramContainer from \"../../Container/Program/ImageProgramContainer\";\r\nimport FolderProgramContainer from \"../../Container/Program/FolderProgramContainer\";\r\nimport DOCProgramContainer from \"../../Container/Program/DOCProgramContainer\";\r\nimport INFOProgramContainer from \"../../Container/Program/INFOProgramContainer\";\r\n\r\nconst DEFAULT_SIZE = 80;\r\n\r\nconst FolderComponent = ({\r\n    onClick,\r\n    onClickClose,\r\n    onClickMax,\r\n    onClickNormalSize,\r\n    onClickMin,\r\n    onMouseDown,\r\n    onMouseUp,\r\n    onMouseDown_Resize,\r\n    onMouseUp_Resize,\r\n\r\n    boxRef,\r\n    isClose,\r\n    isMaxSize,\r\n    item,\r\n}) => {\r\n    return (\r\n        <ProgramComponent\r\n            className=\"folderComponent\"\r\n            ref={boxRef}\r\n            isClose={isClose}\r\n            onMouseDown={onClick}\r\n            isMaxSize={isMaxSize}\r\n        >\r\n            {/* 공통 */}\r\n            <div\r\n                className=\"headerArea\"\r\n                onMouseDown={onMouseDown}\r\n                onMouseUp={onMouseUp}\r\n            >\r\n                <div className=\"infoArea\">\r\n                    {/* 폴더, 브라우저는 프로그램명이 동적으로 변하지 않음. */}\r\n                    {(item.type === \"FOLDER\" || item.type === \"BROWSER\") && (\r\n                        // ||\r\n                        // item.type === \"INFO\"\r\n                        <>\r\n                            <img\r\n                                src={item.icon || folderEmpty}\r\n                                alt={item.name}\r\n                            />\r\n                            <div className=\"programTitle\">{item.name}</div>\r\n                        </>\r\n                    )}\r\n                    {/* 이미지는 프로그램명이 동적으로 변함. */}\r\n                    {item.type === \"IMAGE\" && (\r\n                        // {item.type === \"IMAGE\" && imageArr.length > 0 && (\r\n                        <>\r\n                            <img src={defaultImage} alt={\"이미지\"} />\r\n                            <div className=\"programTitle\">\r\n                                {\"이미지\"}\r\n                                {/* {imageArr[curImageIdx].name} */}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n\r\n                    {item.type === \"DOC\" && (\r\n                        <>\r\n                            <img src={defaultDocumentImage} alt={\"이미지\"} />\r\n                            <div className=\"programTitle\">{item.name}</div>\r\n                        </>\r\n                    )}\r\n\r\n                    {item.type === \"INFO\" && (\r\n                        <>\r\n                            <img src={monitor} alt={\"이미지\"} />\r\n                            <div className=\"programTitle\">{item.name}</div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <div className=\"buttonArea\">\r\n                    <div className=\"buttonIcon\" onClick={onClickMin}>\r\n                        <img src={horizontalLine} alt=\"horizontalLine\" />\r\n                    </div>\r\n                    {isMaxSize ? (\r\n                        <div className=\"buttonIcon\" onClick={onClickNormalSize}>\r\n                            <img src={minimize} alt=\"horizontalLine\" />\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"buttonIcon\" onClick={onClickMax}>\r\n                            <img src={maximize} alt=\"horizontalLine\" />\r\n                        </div>\r\n                    )}\r\n                    <div className=\"buttonIcon close\" onClick={onClickClose}>\r\n                        <img src={close} alt=\"horizontalLine\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* 브라우저 */}\r\n            {item.type === \"BROWSER\" && (\r\n                <>\r\n                    <div\r\n                        className={`headerArea2 headerArea2_${item.type}`}\r\n                    ></div>\r\n                    <div className={`contentsArea_Cover`}>\r\n                        {item.type === \"BROWSER\" && (\r\n                            <iframe\r\n                                src={\"https://www.google.com/webhp?igu=1\"}\r\n                                width={\"100%\"}\r\n                                height={\"100%\"}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            {/* 폴더 */}\r\n            {item.type === \"FOLDER\" && (\r\n                <FolderProgramContainer type={item.type} name={item.name} />\r\n            )}\r\n\r\n            {/* 이미지 */}\r\n            {item.type === \"IMAGE\" && (\r\n                <ImageProgramContainer\r\n                    type={item.type}\r\n                    parent={item.parent}\r\n                    name={item.name}\r\n                />\r\n            )}\r\n\r\n            {/* 문서 */}\r\n            {item.type === \"DOC\" && (\r\n                <DOCProgramContainer type={item.type} name={item.name} />\r\n            )}\r\n\r\n            {/* 내정보 */}\r\n            {item.type === \"INFO\" && (\r\n                <INFOProgramContainer type={item.type} name={item.name} />\r\n            )}\r\n            {/* 설정 */}\r\n            {item.type === \"SETTING\" && <></>}\r\n            {/* 공통 */}\r\n            <div className=\"modiSize top_left\"></div>\r\n            <div className=\"modiSize top_right\"></div>\r\n            <div className=\"modiSize right\"></div>\r\n            <div className=\"modiSize bottom_left\"></div>\r\n            <div\r\n                className=\"modiSize bottom_right\"\r\n                onMouseDown={onMouseDown_Resize}\r\n                onMouseUp={onMouseUp_Resize}\r\n            ></div>\r\n        </ProgramComponent>\r\n    );\r\n};\r\n\r\nconst open = keyframes`\r\nfrom {\r\n    opacity: 0;\r\n    transform: scale(0.9);\r\n}\r\nto {\r\n    opacity: 1;\r\n    transform: scale(1);\r\n}\r\n`;\r\n\r\nconst ProgramComponent = styled.div`\r\n    left: calc(50% - 250px);\r\n    top: calc(50% - 250px);\r\n    height: 500px;\r\n    width: 500px;\r\n\r\n    box-shadow: 0px 0px 20px 3px #00000061;\r\n    position: absolute;\r\n\r\n    border: 1px solid black;\r\n    box-sizing: border-box;\r\n\r\n    background-color: white;\r\n\r\n    z-index: ${(props) => props.zIndexCnt};\r\n\r\n    display: grid;\r\n    grid-template-rows: 32px 25px 1fr 20px;\r\n\r\n    .modiSize {\r\n        position: absolute;\r\n        width: 4px;\r\n        height: 4px;\r\n        cursor: pointer;\r\n\r\n        // background-color: red;\r\n    }\r\n\r\n    .top_left {\r\n        top: 0;\r\n        left: 0;\r\n        cursor: nw-resize;\r\n    }\r\n\r\n    .top_right {\r\n        top: 0;\r\n        right: 0;\r\n        cursor: ne-resize;\r\n    }\r\n\r\n    .bottom_left {\r\n        bottom: 0;\r\n        left: 0;\r\n        cursor: ne-resize;\r\n    }\r\n\r\n    .bottom_right {\r\n        bottom: 0;\r\n        right: 0;\r\n        cursor: nw-resize;\r\n    }\r\n\r\n    .infoArea {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 5px;\r\n        height: 100%;\r\n        margin-left: 10px;\r\n    }\r\n\r\n    .infoArea img {\r\n        width: 20px;\r\n        height: 20px;\r\n    }\r\n    .infoArea div {\r\n        font-size: 14px;\r\n    }\r\n\r\n    .headerArea {\r\n        width: 100%;\r\n        height: 32px;\r\n\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n\r\n        padding: 1px 1px 0 1px;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    .headerArea2 {\r\n        gap: 10px;\r\n        padding: 0 10px;\r\n\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n    }\r\n\r\n    .arrowBox {\r\n        display: flex;\r\n        gap: 10px;\r\n    }\r\n    .arrowBox img {\r\n        width: 15px;\r\n        height: 100%;\r\n    }\r\n    .programTitle {\r\n    }\r\n\r\n    .routeBox {\r\n        flex: 1;\r\n\r\n        text-align: left;\r\n        padding: 0 10px;\r\n        font-size: 12px;\r\n        cursor: default;\r\n\r\n        display: flex;\r\n        align-items: center;\r\n        border: 1px solid #e3e3e3;\r\n        height: 100%;\r\n    }\r\n    .routeBox input {\r\n        width: 100%;\r\n        height: 100%;\r\n        margin: 0;\r\n        padding: 0;\r\n        border: none;\r\n        outline: none;\r\n    }\r\n\r\n    .selectDisplayType {\r\n        height: 100%;\r\n    }\r\n\r\n    .buttonArea {\r\n        height: 100%;\r\n        display: flex;\r\n        gap: 1px;\r\n    }\r\n\r\n    .min div {\r\n        width: 11px;\r\n        height: 1px;\r\n        background-color: black;\r\n    }\r\n\r\n    .max div {\r\n        width: 8px;\r\n        height: 8px;\r\n        border: 1px solid black;\r\n    }\r\n\r\n    .close div {\r\n        width: 14px;\r\n        height: 1px;\r\n        background-color: black;\r\n    }\r\n\r\n    .close div:nth-child(1) {\r\n        position: absolute;\r\n        rotate: 45deg;\r\n    }\r\n\r\n    .close div:nth-child(2) {\r\n        rotate: 135deg;\r\n    }\r\n\r\n    .buttonArea > div {\r\n        height: 100%;\r\n        width: 45px;\r\n        transition: 0.2s;\r\n\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    .buttonArea > div > img {\r\n        width: 14px;\r\n    }\r\n\r\n    .buttonArea .buttonIcon:hover {\r\n        background-color: #ddddddb3;\r\n    }\r\n\r\n    .buttonArea > .close:hover {\r\n        background-color: #ff1010;\r\n    }\r\n\r\n    animation: ${open} 0.25s 0s;\r\n\r\n    .contentsArea_Cover {\r\n        width: 100%;\r\n        height: 100%;\r\n        overflow: scroll;\r\n        position: relative;\r\n    }\r\n\r\n    // 문서 컨텐츠 영역\r\n    // 850 px 이상인 경우  처리 필요함.\r\n    .contentsArea_doc {\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        display: flex;\r\n        gap: 20px;\r\n        flex-wrap: wrap;\r\n        align-content: flex-start;\r\n        box-sizing: border-box;\r\n        padding: 10px;\r\n\r\n        // overflow: hidden;\r\n    }\r\n\r\n    .doc_imageArea {\r\n        width: 100%;\r\n        height: auto;\r\n        min-height: 200px;\r\n        background-color: #e7e7e7;\r\n        display: inline-box;\r\n        overflow: scroll;\r\n\r\n        flex-grow: 1;\r\n        flex-basis: 500px;\r\n    }\r\n\r\n    .noProjectImage {\r\n        width: 100%;\r\n        height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n\r\n        color: #a2a1a1;\r\n        font-size: 14px;\r\n    }\r\n\r\n    .projectImageItem {\r\n        height: 100%;\r\n\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    .projectImageItem img {\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        object-fit: contain;\r\n    }\r\n\r\n    .doc_contentsArea {\r\n        flex: 1;\r\n\r\n        overflow: scroll;\r\n        height: 100%;\r\n        width: 100%;\r\n        flex-grow: 1;\r\n        flex-basis: 500px;\r\n    }\r\n\r\n    .doc_card {\r\n        text-align: left;\r\n\r\n        box-sizing: border-box;\r\n        padding: 20px 0;\r\n        border-bottom: 1px solid gray;\r\n    }\r\n\r\n    .cardTitle {\r\n        font-weight: bold;\r\n        margin-bottom: 10px;\r\n    }\r\n    .cardContent {\r\n        font-size: 12px;\r\n        color: #4b4b4b;\r\n    }\r\n\r\n    .doc_stack {\r\n        display: flex;\r\n        gap: 10px;\r\n        flex-wrap: wrap;\r\n    }\r\n    .stackItem {\r\n        border: 1px solid gray;\r\n        padding: 5px 10px;\r\n        border-radius: 5px;\r\n        width: fit-content;\r\n        position: relative;\r\n        cursor: pointer;\r\n        transition: 0.2s;\r\n    }\r\n\r\n    .stackItem:hover {\r\n        color: white;\r\n        background-color: gray;\r\n    }\r\n    .stackItem:hover .stackItem_Image {\r\n        bottom: -45px;\r\n        opacity: 1;\r\n\r\n        box-shadow: 0px 0px 10px 2px #a1a1a1;\r\n        scale: 1;\r\n    }\r\n\r\n    .stackItem_Image {\r\n        position: absolute;\r\n\r\n        left: calc(50% - 20px);\r\n        width: 40px;\r\n        height: 40px;\r\n        bottom: -35px;\r\n\r\n        background-color: white;\r\n        opacity: 0;\r\n        transition: 0.2s;\r\n\r\n        box-sizing: border-box;\r\n        padding: 5px;\r\n\r\n        scale: 0.4;\r\n    }\r\n\r\n    .doc_reulst {\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 20px;\r\n    }\r\n    .stackItem_Image img {\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        object-fit: contain;\r\n    }\r\n\r\n    .resultTitle {\r\n        margin-bottom: 5px;\r\n        font-weight: bold;\r\n    }\r\n\r\n    // 내정보\r\n    .contentsArea_info {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    .contentsArea_info .top {\r\n        min-height: 200px;\r\n        background-color: #f3f3f3;\r\n\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n\r\n        padding: 50px 10px;\r\n        box-sizing: border-box;\r\n\r\n        row-gap: 50px;\r\n    }\r\n    .contentsArea_info .body {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 50px;\r\n\r\n        padding: 20px 10px;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    .info1 {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 50px;\r\n\r\n        flex-grow: 1;\r\n        flex-basis: 500px;\r\n\r\n        justify-content: center;\r\n    }\r\n\r\n    .info1 .myImageArea {\r\n        width: 180px;\r\n        height: 180px;\r\n\r\n        padding: 10px;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    .info1 .myImageArea img {\r\n        width: 100%;\r\n        height: 100%;\r\n        border-radius: 100%;\r\n        object-fit: cover;\r\n    }\r\n\r\n    .info1 .myInfoArea {\r\n        text-align: left;\r\n    }\r\n\r\n    .info1 .myInfoArea h1 {\r\n        margin: 0 0 10px 0;\r\n    }\r\n\r\n    .info1 .myInfoArea p {\r\n        color: gray;\r\n        margin: 0 0 5px 0;\r\n    }\r\n\r\n    .info2 {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n\r\n        column-gap: 100px;\r\n        row-gap: 30px;\r\n\r\n        flex-grow: 1;\r\n        flex-basis: 500px;\r\n    }\r\n    .info2 .infoItem {\r\n        width: 180px;\r\n    }\r\n\r\n    .infoItem {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 30px;\r\n    }\r\n\r\n    .infoItem .myImageArea {\r\n        width: 75px;\r\n        height: 75px;\r\n\r\n        box-sizing: border-box;\r\n        padding: 10px;\r\n    }\r\n\r\n    .infoItem .myImageArea img {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    .body .myInfoArea,\r\n    .info2 .myInfoArea {\r\n        text-align: left;\r\n    }\r\n\r\n    .myInfoArea .desc {\r\n        margin: 0;\r\n        font-size: 14px;\r\n        color: #202020;\r\n    }\r\n\r\n    .body .infoItem {\r\n        box-sizing: border-box;\r\n        padding: 0 10px;\r\n        width: 230px;\r\n        border: 2px solid #ffffff00;\r\n        transition: 0.2s;\r\n\r\n        gap: 20px;\r\n    }\r\n    .body .infoItem:hover {\r\n        border-color: #dfdfdf;\r\n    }\r\n\r\n    .body .infoItem .title,\r\n    .info2 .myInfoArea p {\r\n        margin: 5px 0;\r\n        font-weight: bold;\r\n    }\r\n    .body .myInfoArea a,\r\n    .info2 .myInfoArea a {\r\n        text-decoration: none;\r\n        color: #76b3e4;\r\n\r\n        font-size: 14px;\r\n    }\r\n\r\n    // 이미지 컨텐츠 영역\r\n    .contentsArea_image {\r\n        width: 100%;\r\n        height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n\r\n        background-color: #20343b;\r\n    }\r\n\r\n    .image_arrow {\r\n        position: absolute;\r\n        height: 100%;\r\n        width: 100px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        opacity: 0;\r\n        transition: 0.2s;\r\n    }\r\n\r\n    .image_arrow img {\r\n        width: 15px;\r\n        height: 15px;\r\n    }\r\n\r\n    .image_arrow:hover {\r\n        opacity: 1;\r\n    }\r\n\r\n    .image_arrowLeft {\r\n        background: linear-gradient(to right, #00000029, #ffffff00);\r\n        left: 0;\r\n    }\r\n\r\n    .image_arrowRight {\r\n        background: linear-gradient(to right, #ffffff00, #00000029);\r\n        right: 0;\r\n    }\r\n\r\n    .imageContent {\r\n        width: 96px;\r\n        height: 96px;\r\n    }\r\n\r\n    .image_header_controller_btn {\r\n        width: 20px;\r\n        height: 20px;\r\n\r\n        padding: 1px;\r\n        box-sizing: border-box;\r\n\r\n        transition: 0.2s;\r\n    }\r\n\r\n    .headerArea2_IMAGE {\r\n        justify-content: flex-start;\r\n    }\r\n    .image_header_controller_btn:hover {\r\n        background-color: #e6e6e6;\r\n    }\r\n\r\n    .image_header_controller_btn img {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: contain;\r\n    }\r\n\r\n    // 폴더형 컨텐츠 영역\r\n    .contentsArea_folder {\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        padding: 10px;\r\n        box-sizing: border-box;\r\n\r\n        display: flex;\r\n        gap: 20px;\r\n        flex-wrap: wrap;\r\n\r\n        align-content: flex-start;\r\n    }\r\n\r\n    // 아주 큰 아이콘\r\n    .BIG_BIG_ICON .folder {\r\n        width: ${DEFAULT_SIZE * 2}px;\r\n    }\r\n\r\n    .BIG_BIG_ICON img {\r\n        width: ${DEFAULT_SIZE * 2}px;\r\n        height: ${DEFAULT_SIZE * 2}px;\r\n    }\r\n\r\n    // 큰 아이콘\r\n    .BIG_ICON .folder {\r\n        width: ${DEFAULT_SIZE * 1.5}px;\r\n    }\r\n\r\n    .BIG_ICON img {\r\n        width: ${DEFAULT_SIZE * 1.5}px;\r\n        height: ${DEFAULT_SIZE * 1.5}px;\r\n    }\r\n\r\n    // 보통 아이콘\r\n    .MEDIUM_ICON .folder {\r\n        width: ${DEFAULT_SIZE}px;\r\n    }\r\n\r\n    .MEDIUM_ICON img {\r\n        width: ${DEFAULT_SIZE}px;\r\n        height: ${DEFAULT_SIZE}px;\r\n    }\r\n\r\n    // 작은 아이콘\r\n    .SMALL_ICON .folder {\r\n        width: ${DEFAULT_SIZE * 0.5}px;\r\n    }\r\n\r\n    .SMALL_ICON img {\r\n        width: ${DEFAULT_SIZE * 0.5}px;\r\n        height: ${DEFAULT_SIZE * 0.5}px;\r\n    }\r\n\r\n    // 자세히\r\n    .DETAIL {\r\n        gap: 0px;\r\n    }\r\n\r\n    .DETAIL .folder {\r\n        width: 100%;\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n    }\r\n    .DETAIL .folder div {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    .DETAIL img {\r\n        width: ${DEFAULT_SIZE * 0.25}px;\r\n        height: ${DEFAULT_SIZE * 0.25}px;\r\n    }\r\n\r\n    .folder {\r\n        height: auto;\r\n        padding: 5px 10px;\r\n        border: 1px solid #ffffff00;\r\n    }\r\n\r\n    .folder_selected {\r\n        background-color: #cce8ff !important;\r\n        border: 1px solid #99d1ff;\r\n    }\r\n    .folder:hover {\r\n        background-color: #e5f3ff;\r\n    }\r\n    .folder .name {\r\n        word-break: break-all;\r\n        font-size: 12px;\r\n        cursor: default;\r\n    }\r\n\r\n    .detailHeader {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        width: 100%;\r\n        padding: 5px 10px;\r\n    }\r\n\r\n    .detailHeader .name {\r\n        font-size: 11px;\r\n        cursor: default;\r\n    }\r\n\r\n    .bottomArea {\r\n        width: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: flex-start;\r\n        font-size: 12px;\r\n        padding: 0 10px;\r\n    }\r\n\r\n    .noContents {\r\n        width: 100%;\r\n        height: 100%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        color: gray;\r\n        font-size: 14px;\r\n        cursor: default;\r\n    }\r\n\r\n    ${(props) => props.isClose && ` opacity: 0; transform: scale(0.9)`}\r\n`;\r\nexport default FolderComponent;\r\n\r\n/*\r\n\r\n*/\r\n","import React, { useCallback, useEffect, useRef } from \"react\";\r\nimport ProgramComponent from \"../../Component/Program/ProgramComponent\";\r\nimport {\r\n    rc_program_activeProgram,\r\n    rc_program_programList,\r\n    rc_program_zIndexCnt,\r\n} from \"../../store/program\";\r\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\r\nimport { useState } from \"react\";\r\n\r\nconst ProgramContainer = ({\r\n    item: { name, type, parent, status, contents },\r\n}) => {\r\n    // 프로그램 리스트의 현재 아이템의 상태가 변함.\r\n    // props 가 변하고 item으로 받는 status가 변경됨.\r\n    // name은 변하지 않음. (고유값.)\r\n    // const { name, status } = item;\r\n    const setProgramList = useSetRecoilState(rc_program_programList);\r\n\r\n    const [zIndexCnt, setZIndexCnt] = useRecoilState(rc_program_zIndexCnt);\r\n    const temp_zIndexCnt = zIndexCnt;\r\n\r\n    const [activeProgram, setActiveProgram] = useRecoilState(\r\n        rc_program_activeProgram\r\n    );\r\n    const [isMovable, setIsMovable] = useState(false);\r\n    const [isResizable, setIsResizable] = useState(false);\r\n    const [isClose, setIsClose] = useState(false);\r\n    const [isMaxSize, setIsMaxSize] = useState(false);\r\n\r\n    // 보기 유형\r\n    const prevPos = useRef();\r\n    const boxRef = useRef();\r\n\r\n    // 현재 창 클릭\r\n    const onClick = useCallback(() => {\r\n        setActiveProgram(name);\r\n    }, [setActiveProgram, name]);\r\n\r\n    // 최대화\r\n    const onClickMax = useCallback(() => {\r\n        // setProgramList((prev) =>\r\n        //     prev.map((prevItem) =>\r\n        //         prevItem.name === name\r\n        //             ? { ...prevItem, status: \"active_max\" }\r\n        //             : { ...prevItem }\r\n        //     )\r\n        // );\r\n\r\n        setIsMaxSize(true);\r\n        boxRef.current.style.transition = \"0.25s\";\r\n        boxRef.current.style.left = \"0\";\r\n        boxRef.current.style.top = \"0\";\r\n\r\n        localStorage.setItem(`${name}width`, \"100vw\");\r\n        localStorage.setItem(`${name}height`, \"calc(100vh - 50px)\");\r\n\r\n        boxRef.current.style.width = \"100vw\";\r\n        boxRef.current.style.height = \"calc(100vh - 50px)\";\r\n    }, [setIsMaxSize, setProgramList]);\r\n\r\n    // 기본 크기\r\n    const onClickNormalSize = useCallback(() => {\r\n        setIsMaxSize(false);\r\n        // setProgramList((prev) =>\r\n        //     prev.map((prevItem) =>\r\n        //         prevItem.name === name\r\n        //             ? { ...prevItem, status: \"active\" }\r\n        //             : { ...prevItem }\r\n        //     )\r\n        // );\r\n        const left = localStorage.getItem(`${name}Left`);\r\n        const top = localStorage.getItem(`${name}Top`);\r\n        boxRef.current.style.transition = \"0.25s\";\r\n\r\n        if (left && top) {\r\n            boxRef.current.style.left = left + \"px\";\r\n            boxRef.current.style.top = top + \"px\";\r\n        } else {\r\n            boxRef.current.style.left = \"calc(50vw - 250px)\";\r\n            boxRef.current.style.top = \"calc(50vh - 250px)\";\r\n        }\r\n        localStorage.setItem(`${name}width`, \"500px\");\r\n        localStorage.setItem(`${name}height`, \"500px\");\r\n\r\n        boxRef.current.style.width = \"500px\";\r\n        boxRef.current.style.height = \"500px\";\r\n    }, [setIsMaxSize, setProgramList]);\r\n\r\n    // 최소화\r\n    const onClickMin = useCallback(() => {\r\n        console.log(\"?\");\r\n        setProgramList((prev) =>\r\n            prev.map((prevItem) =>\r\n                prevItem.name === name\r\n                    ? { ...prevItem, status: \"min\" }\r\n                    : { ...prevItem }\r\n            )\r\n        );\r\n    }, [name, setProgramList]);\r\n\r\n    // 닫기\r\n    const onClickClose = useCallback(() => {\r\n        setIsClose(true);\r\n        boxRef.current.style.transition = \"0.25s\";\r\n        boxRef.current.style.opacity = \"0\";\r\n\r\n        setTimeout(() => {\r\n            setProgramList((prev) =>\r\n                prev.filter((filterItem) => filterItem.name !== name)\r\n            );\r\n        }, [300]);\r\n    }, [name, setProgramList]);\r\n\r\n    // 이동 활성화\r\n    const onMouseDown = useCallback(\r\n        (e) => {\r\n            setIsMovable(true);\r\n            prevPos.current = {\r\n                X: e.clientX,\r\n                Y: e.clientY,\r\n            };\r\n        },\r\n        [setIsMovable]\r\n    );\r\n\r\n    // 이동\r\n    const onMouseMove = useCallback(\r\n        (e) => {\r\n            // if (e.clientY <= 0) {\r\n            //     console.log(\"exit\");\r\n            //     return;\r\n            // }\r\n            // 이전 좌표와 현재 좌표 차이값\r\n            if (isMovable) {\r\n                const posX = prevPos.current.X - e.clientX;\r\n                const posY = prevPos.current.Y - e.clientY;\r\n\r\n                // 현재 좌표가 이전 좌표로 바뀜\r\n                prevPos.current = {\r\n                    X: e.clientX,\r\n                    Y: e.clientY,\r\n                };\r\n\r\n                // left, top으로 이동\r\n\r\n                boxRef.current.style.transition = \"0s\";\r\n\r\n                localStorage.setItem(\r\n                    `${name}Left`,\r\n                    boxRef.current.offsetLeft - posX\r\n                );\r\n                localStorage.setItem(\r\n                    `${name}Top`,\r\n                    boxRef.current.offsetTop - posY\r\n                );\r\n\r\n                boxRef.current.style.left =\r\n                    boxRef.current.offsetLeft - posX + \"px\";\r\n                boxRef.current.style.top =\r\n                    boxRef.current.offsetTop - posY + \"px\";\r\n            }\r\n\r\n            if (isResizable) {\r\n                /*\r\n                    posX 에 이전과 커서 위치 차이값이 들어있다.\r\n\r\n                    마우스가 움직이면서 이전 좌표값을 갱신한다\r\n\r\n                    차이값 만큼 width, height 값을 계산한다\r\n\r\n                    만약 최소값보다 큰 경우만 값을 갱신한다\r\n\r\n                    만약 최소값 이하로 내려가려한다면?\r\n\r\n                    커서값은 계속 갱신된다. (현재 위치좌표로)\r\n\r\n                    커서가 오른쪽으로 움직이는 순간\r\n\r\n                    좌표 값 차이만큼 width 값이 변한다\r\n                    이때 커서는 한참 왼쪽에있다.\r\n\r\n                    커서가 다시 원래 위치로 오고 나서 값 계산에 따른 너비를 갱신해야한다.\r\n\r\n                    원래위치는 최소 값에 도달한 위치를 말한다.\r\n\r\n                    크기 조정함수 공통화 필요\r\n                    \r\n                */\r\n\r\n                // 커서의 이전 위치를 기반으로 어느 방향으로 움직일지 체크\r\n                boxRef.current.style.transition = \"0s\";\r\n                const posX = prevPos.current.X - e.clientX;\r\n                const posY = prevPos.current.Y - e.clientY;\r\n\r\n                // 크기 값 갱신\r\n                const newWidth = boxRef.current.offsetWidth - posX;\r\n                const newHeight = boxRef.current.offsetHeight - posY;\r\n\r\n                // ====================\r\n                // 상\r\n                if (posX === 0 && posY > 0) {\r\n                    if (newHeight < 60) {\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${name}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n                // 하\r\n                else if (posX === 0 && posY < 0) {\r\n                    if (prevPos.current.Y <= e.clientY) {\r\n                        localStorage.setItem(\r\n                            `${name}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n                // 좌\r\n                else if (posX > 0 && posY === 0) {\r\n                    if (newWidth < 300) {\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${name}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                        //\r\n                    }\r\n                }\r\n                // 우\r\n                else if (posX < 0 && posY === 0) {\r\n                    if (prevPos.current.X <= e.clientX) {\r\n                        localStorage.setItem(\r\n                            `${name}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n                        // 마우스 위치..\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                    }\r\n                }\r\n                // 왼쪽 위\r\n                else if (posX > 0 && posY > 0) {\r\n                    if (newWidth < 300) {\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${name}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                        //\r\n                    }\r\n\r\n                    if (newHeight < 60) {\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${name}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n                // 오른쪽 위\r\n                else if (posX < 0 && posY > 0) {\r\n                    if (prevPos.current.X <= e.clientX) {\r\n                        localStorage.setItem(\r\n                            `${name}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n                        // 마우스 위치..\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                    }\r\n\r\n                    if (newHeight < 60) {\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${name}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n                // 왼쪽 아래\r\n                else if (posX > 0 && posY < 0) {\r\n                    if (newWidth < 300) {\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${name}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                        //\r\n                    }\r\n\r\n                    if (prevPos.current.Y <= e.clientY) {\r\n                        localStorage.setItem(\r\n                            `${name}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n                // 오른쪽 아래\r\n                else if (posX < 0 && posY < 0) {\r\n                    if (prevPos.current.X <= e.clientX) {\r\n                        localStorage.setItem(\r\n                            `${name}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n                        // 마우스 위치..\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                    }\r\n\r\n                    if (prevPos.current.Y <= e.clientY) {\r\n                        localStorage.setItem(\r\n                            `${name}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        [isMovable, isResizable]\r\n    );\r\n\r\n    // 이동 종료\r\n    const onMouseUp = useCallback(() => {\r\n        setIsMovable(false);\r\n    }, []);\r\n\r\n    // 현재 창 맨 앞으로\r\n    useEffect(() => {\r\n        if (activeProgram === name) {\r\n            boxRef.current.style.zIndex = temp_zIndexCnt + 1;\r\n            setZIndexCnt((prev) => prev + 1);\r\n        }\r\n    }, [activeProgram, name, setZIndexCnt]);\r\n\r\n    // 이동 활성화\r\n    useEffect(() => {\r\n        document.addEventListener(\"mousemove\", onMouseMove);\r\n\r\n        // 마우스 클릭이 종료되는 경우 모든 이벤트 종료 처리 필요\r\n        document.addEventListener(\"mouseup\", () => setIsResizable(false));\r\n\r\n        return () => {\r\n            document.removeEventListener(\"mousemove\", onMouseMove);\r\n        };\r\n    }, [onMouseMove]);\r\n\r\n    useEffect(() => {\r\n        if (status === \"active\") {\r\n            if (isMaxSize) {\r\n                boxRef.current.style.left = \"0px\";\r\n                boxRef.current.style.top = \"0px\";\r\n            } else {\r\n                const left = localStorage.getItem(`${name}Left`);\r\n                const top = localStorage.getItem(`${name}Top`);\r\n\r\n                //\r\n                if (left && top) {\r\n                    boxRef.current.style.left = left + \"px\";\r\n                    boxRef.current.style.top = top + \"px\";\r\n                } else {\r\n                    boxRef.current.style.left = \"calc(50vw - 250px)\";\r\n                    boxRef.current.style.top = \"calc(50vh - 250px)\";\r\n                }\r\n            }\r\n        }\r\n    }, [status, isMaxSize, boxRef]);\r\n\r\n    useEffect(() => {\r\n        /*\r\n        min\r\n        active\r\n        */\r\n\r\n        // 활성화\r\n        if (status === \"active\") {\r\n            boxRef.current.style.transition = \"0.25s\";\r\n            boxRef.current.style.opacity = \"1\";\r\n\r\n            const height = localStorage.getItem(`${name}height`);\r\n            const width = localStorage.getItem(`${name}width`);\r\n\r\n            if (height && width) {\r\n                boxRef.current.style.height = height;\r\n                boxRef.current.style.width = width;\r\n            } else {\r\n                boxRef.current.style.width = \"500px\";\r\n                boxRef.current.style.height = \"500px\";\r\n            }\r\n\r\n            boxRef.current.style.scale = \"1\";\r\n        }\r\n        // 최소화\r\n        else if (status === \"min\") {\r\n            boxRef.current.style.transition = \"0.25s\";\r\n            boxRef.current.style.opacity = \"0\";\r\n            boxRef.current.style.left = \"80px\";\r\n            boxRef.current.style.top = \"60vh\";\r\n            boxRef.current.style.scale = \"0.6\";\r\n            boxRef.current.style.width = \"500px\";\r\n            boxRef.current.style.height = \"500px\";\r\n        }\r\n    }, [status]);\r\n\r\n    const onMouseDown_Resize = useCallback((e) => {\r\n        setIsResizable(true);\r\n        prevPos.current = {\r\n            X: e.clientX,\r\n            Y: e.clientY,\r\n        };\r\n    }, []);\r\n\r\n    const onMouseMove_Resize = useCallback(() => {\r\n        //\r\n    }, []);\r\n\r\n    const onMouseUp_Resize = useCallback(() => {\r\n        //\r\n        setIsResizable(false);\r\n    }, []);\r\n\r\n    /*\r\n    이미지형\r\n\r\n    1. 현재 아이템의 부모의 모든 아이템중 이미지형 프로그램을 배열로 가지고 있는다.\r\n\r\n    2. 현재 아이템은 해당 배열의 몇번째 인덱스인지 저장한다.\r\n\r\n    3. 좌,우 버튼을 누르면 현재 인덱스를 +-1 해준다.\r\n\r\n    4. 화면에 출력될 이미지는 해당 배열에서 특정된 인덱스에 해당하는 이미지를 가지게 된다.\r\n    */\r\n\r\n    // 현재 아이템의 부모의 모든 아이템중 이미지형 프로그램\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            localStorage.removeItem(`${name}Left`);\r\n            localStorage.removeItem(`${name}Top`);\r\n            localStorage.removeItem(`${name}width`);\r\n            localStorage.removeItem(`${name}height`);\r\n        };\r\n    }, []);\r\n\r\n    const propDatas = {\r\n        onClick,\r\n        onClickClose,\r\n        onClickMax,\r\n        onClickNormalSize,\r\n        onClickMin,\r\n        onMouseDown,\r\n        onMouseUp,\r\n        onMouseDown_Resize,\r\n        onMouseUp_Resize,\r\n\r\n        boxRef,\r\n        isClose,\r\n        isMaxSize,\r\n        item: { name, type, parent, status, contents },\r\n    };\r\n    return <ProgramComponent {...propDatas} />;\r\n};\r\n\r\nexport default React.memo(ProgramContainer);\r\n"],"names":["ImageProgramComponent","type","imageArr","refImage","curImageIdx","currentImage_sizeRate","onClickM_Image_ScaleUp","onClickM_Image_ScaleDown","onClickM_Image_Rotate_Right","onClickM_Image_Rotate_Left","onClickM_Image_Default","IMG_onClickLeft","IMG_onClickRight","className","onClick","title","src","alt","Math","round","length","ref","icon","name","React","ImageProgramContainer","parent","Directory_Tree","useRecoilValue","rc_global_Directory_Tree","useState","setImageArr","imageArrLength","useRef","setCurImageIdx","setCurrentImage_sizeRate","currentImage_rotate","setCurrentImage_rotate","useCallback","prev","current","useEffect","style","rotate","scale","calculated_parentContents","filter","filterItem","findIndex","fintItem","propDats","styled","displayList","currentFolder","displayType","folderContents","selectedItem","onClickLeft","setDisplayType","onClickItem","onDoubleClickItem","value","route","readOnly","onChange","e","target","map","mapItem","idx","onDoubleClick","folderEmpty","defaultImage","directory","rc_global_Directory_List","setSelectedItem","onDoubleClickIcon","useActiveProgram","setFolderContents","find","findItem","setCurrentFolder","item","clickedItem","propDatas","DOCData","data","projectImages","imageItem","projectName","projectDesc","projectReulst","resultItem","content","projectTerm","termItem","projectType","role","roleItem","department","stack","stackItem","img","url","useMemo","projectDatas","console","log","keys","Object","KDH","userSelect","href","DEFAULT_SIZE","open","keyframes","ProgramComponent","props","zIndexCnt","isClose","onClickClose","onClickMax","onClickNormalSize","onClickMin","onMouseDown","onMouseUp","onMouseDown_Resize","onMouseUp_Resize","boxRef","isMaxSize","defaultDocumentImage","monitor","width","height","ProgramContainer","status","contents","setProgramList","useSetRecoilState","rc_program_programList","useRecoilState","rc_program_zIndexCnt","setZIndexCnt","temp_zIndexCnt","rc_program_activeProgram","activeProgram","setActiveProgram","isMovable","setIsMovable","isResizable","setIsResizable","setIsClose","setIsMaxSize","prevPos","transition","left","top","localStorage","setItem","getItem","prevItem","opacity","setTimeout","X","clientX","Y","clientY","onMouseMove","posX","posY","offsetLeft","offsetTop","newWidth","offsetWidth","newHeight","offsetHeight","zIndex","document","addEventListener","removeEventListener","removeItem"],"sourceRoot":""}