{"version":3,"file":"static/js/654.33a5fb6f.chunk.js","mappings":"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","sources":["Component/Program/FolderComponent.jsx","Container/Program/FolderContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport folderFull from \"../../asset/images/icons/folder_full.png\";\r\nimport folderEmpty from \"../../asset/images/icons/folder_empty.png\";\r\nimport defaultImage from \"../../asset/images/icons/image_default.png\";\r\nimport leftArrow from \"../../asset/images/icons/left-arrow.png\";\r\n\r\nimport close from \"../../asset/images/icons/close.png\";\r\nimport horizontalLine from \"../../asset/images/icons/horizontal-line.png\";\r\nimport maximize from \"../../asset/images/icons/maximize.png\";\r\nimport minimize from \"../../asset/images/icons/minimize.png\";\r\n\r\nimport defaultDocumentImage from \"../../asset/images/icons/document_default.png\";\r\n\r\nimport collapseArrowLeft from \"../../asset/images/icons/collapse-arrow-left-white.png\";\r\nimport collapseArrowRight from \"../../asset/images/icons/collapse-arrow-right-white.png\";\r\n\r\nconst DEFAULT_SIZE = 80;\r\n\r\nconst FolderComponent = ({\r\n    onClick,\r\n    onClickClose,\r\n    onClickMax,\r\n    onClickNormalSize,\r\n    onClickMin,\r\n    onMouseDown,\r\n    onMouseUp,\r\n    onMouseDown_Resize,\r\n    onMouseUp_Resize,\r\n    onClickItem,\r\n    onDoubleClickItem,\r\n    onClickLeft,\r\n    onClickRight,\r\n    setDisplayType,\r\n\r\n    boxRef,\r\n    isClose,\r\n    isMaxSize,\r\n    item,\r\n    selectedItem,\r\n    folderContents,\r\n    displayType,\r\n    displayList,\r\n    currentFolder,\r\n\r\n    // IMAGE\r\n    IMG_onClickLeft,\r\n    IMG_onClickRight,\r\n    imageArr,\r\n    curImageIdx,\r\n\r\n    // DOC\r\n    DOCData,\r\n}) => {\r\n    return (\r\n        <FolderComponentBlock\r\n            className=\"folderComponent\"\r\n            ref={boxRef}\r\n            isClose={isClose}\r\n            onMouseDown={onClick}\r\n            isMaxSize={isMaxSize}\r\n        >\r\n            <div\r\n                className=\"headerArea\"\r\n                onMouseDown={onMouseDown}\r\n                onMouseUp={onMouseUp}\r\n            >\r\n                <div className=\"infoArea\">\r\n                    {/* 폴더, 브라우저는 프로그램명이 동적으로 변하지 않음. */}\r\n                    {(item.type === \"FOLDER\" || item.type === \"BROWSER\") && (\r\n                        <>\r\n                            <img\r\n                                src={item.icon || folderEmpty}\r\n                                alt={item.name}\r\n                            />\r\n                            <div className=\"programTitle\">{item.name}</div>\r\n                        </>\r\n                    )}\r\n                    {/* 이미지는 프로그램명이 동적으로 변함. */}\r\n                    {item.type === \"IMAGE\" && imageArr.length > 0 && (\r\n                        <>\r\n                            <img src={defaultImage} alt={\"이미지\"} />\r\n                            <div className=\"programTitle\">\r\n                                {imageArr[curImageIdx].name}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n\r\n                    {item.type === \"DOC\" && (\r\n                        <>\r\n                            <img src={defaultDocumentImage} alt={\"이미지\"} />\r\n                            <div className=\"programTitle\">{item.name}</div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <div className=\"buttonArea\">\r\n                    <div className=\"buttonIcon\" onClick={onClickMin}>\r\n                        <img src={horizontalLine} alt=\"horizontalLine\" />\r\n                    </div>\r\n                    {isMaxSize ? (\r\n                        <div className=\"buttonIcon\" onClick={onClickNormalSize}>\r\n                            <img src={minimize} alt=\"horizontalLine\" />\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"buttonIcon\" onClick={onClickMax}>\r\n                            <img src={maximize} alt=\"horizontalLine\" />\r\n                        </div>\r\n                    )}\r\n                    <div className=\"buttonIcon close\" onClick={onClickClose}>\r\n                        <img src={close} alt=\"horizontalLine\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"headerArea2\">\r\n                {/* 폴더형 전용 헤더 */}\r\n                {item.type === \"FOLDER\" && (\r\n                    <>\r\n                        <div className=\"arrowBox\">\r\n                            <img\r\n                                src={leftArrow}\r\n                                alt=\"leftArrow\"\r\n                                onClick={onClickLeft}\r\n                            />\r\n                            {/*  뒤로 가기 임시 제거 */}\r\n                            {/* <img\r\n                        src={rightArrow}\r\n                        alt=\"rightArrow\"\r\n                        onClick={onClickRight}\r\n                    /> */}\r\n                        </div>\r\n                        <div className=\"routeBox\">\r\n                            <input\r\n                                value={currentFolder.route || \"/ [error]\"}\r\n                                readOnly\r\n                            />\r\n                        </div>\r\n                        <div className=\"selectDisplayType\">\r\n                            <select\r\n                                value={displayType}\r\n                                onChange={(e) => setDisplayType(e.target.value)}\r\n                            >\r\n                                {displayList.map((item, idx) => (\r\n                                    <option key={idx} value={item.value}>\r\n                                        {item.name}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n\r\n            {/* 내부 데이터가 들어올 영역 */}\r\n            <div className={`contentsArea_Cover`}>\r\n                {/* 브라우저 */}\r\n                {item.type === \"BROWSER\" && (\r\n                    <iframe\r\n                        src={\"https://www.google.com/webhp?igu=1\"}\r\n                        width={\"100%\"}\r\n                        height={\"100%\"}\r\n                    />\r\n                )}\r\n                {/* 폴더 */}\r\n                {item.type === \"FOLDER\" && (\r\n                    <>\r\n                        <div className=\"sideFolderArea\"></div>\r\n                        <div className={`${displayType} contentsArea_folder`}>\r\n                            {folderContents && folderContents.length > 0 ? (\r\n                                <>\r\n                                    {displayType === \"DETAIL\" && (\r\n                                        <div className=\"detailHeader\">\r\n                                            <div className=\"name\">\r\n                                                {\"이미지\"}\r\n                                            </div>\r\n                                            <div className=\"name\">{\"이름\"}</div>\r\n                                            <div className=\"name\">{\"유형\"}</div>\r\n                                        </div>\r\n                                    )}\r\n                                    {folderContents.map((item, idx) => (\r\n                                        <div\r\n                                            className={`${\r\n                                                selectedItem === item.name\r\n                                                    ? \"folder folder_selected\"\r\n                                                    : \"folder\"\r\n                                            }`}\r\n                                            key={idx}\r\n                                            onClick={() =>\r\n                                                onClickItem(item.name)\r\n                                            }\r\n                                            onDoubleClick={() =>\r\n                                                onDoubleClickItem(item)\r\n                                            }\r\n                                        >\r\n                                            {/*  폴더 */}\r\n                                            <div className=\"imgCover\">\r\n                                                {item.type === \"FOLDER\" ? (\r\n                                                    <img\r\n                                                        src={\r\n                                                            item.folderCnt\r\n                                                                ? folderFull\r\n                                                                : folderEmpty\r\n                                                        }\r\n                                                        alt=\"folderEmpty\"\r\n                                                    />\r\n                                                ) : (\r\n                                                    <img\r\n                                                        src={\r\n                                                            item.icon ||\r\n                                                            defaultImage\r\n                                                        }\r\n                                                        alt={item.name}\r\n                                                    />\r\n                                                )}\r\n                                            </div>\r\n\r\n                                            <div className=\"name\">\r\n                                                {item.name}\r\n                                            </div>\r\n\r\n                                            {displayType === \"DETAIL\" && (\r\n                                                <div className=\"name\">\r\n                                                    {item.type}\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    ))}\r\n                                </>\r\n                            ) : (\r\n                                <div className=\"noContents\">비어있습니다.</div>\r\n                            )}\r\n                        </div>\r\n                    </>\r\n                )}\r\n                {/* 이미지 */}\r\n                {/* 좌우 이동 버튼 정중앙 이미지(원래 크기) */}\r\n                {item.type === \"IMAGE\" && (\r\n                    <div className=\"contentsArea_image\">\r\n                        <div\r\n                            className=\"image_arrow image_arrowLeft\"\r\n                            title=\"이전\"\r\n                            onClick={IMG_onClickLeft}\r\n                        >\r\n                            <img\r\n                                src={collapseArrowLeft}\r\n                                alt=\"collapseArrowLeft\"\r\n                            />\r\n                        </div>\r\n                        <div\r\n                            className=\"image_arrow image_arrowRight\"\r\n                            title=\"다음\"\r\n                            onClick={IMG_onClickRight}\r\n                        >\r\n                            <img\r\n                                src={collapseArrowRight}\r\n                                alt=\"collapseArrowRight\"\r\n                            />\r\n                        </div>\r\n\r\n                        {imageArr.length > 0 && (\r\n                            <img\r\n                                className=\"imageContent\"\r\n                                // src={item.icon}\r\n                                src={imageArr[curImageIdx].icon}\r\n                                alt={imageArr[curImageIdx].name}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                )}\r\n                {/* 문서 */}\r\n                {item.type === \"DOC\" && (\r\n                    <div className=\"contentsArea_doc\">\r\n                        <div className=\"doc_imageArea\">\r\n                            {DOCData.data.projectImages &&\r\n                            DOCData.data.projectImages.length > 0 ? (\r\n                                <>\r\n                                    {DOCData.data.projectImages.map(\r\n                                        (imageItem, idx) => (\r\n                                            <div\r\n                                                key={idx}\r\n                                                className=\"projectImageItem\"\r\n                                            >\r\n                                                <img\r\n                                                    src={imageItem}\r\n                                                    alt={`${imageItem}${\r\n                                                        idx + 1\r\n                                                    }`}\r\n                                                />\r\n                                            </div>\r\n                                        )\r\n                                    )}\r\n                                </>\r\n                            ) : (\r\n                                <div className=\"noProjectImage\">\r\n                                    프로젝트 이미지가 없습니다.\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"doc_contentsArea\">\r\n                            <div className=\"doc_card\">\r\n                                <div className=\"cardTitle\">프로젝트 명</div>\r\n                                <div className=\"cardContent\">\r\n                                    {DOCData.data.projectName}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"doc_card\">\r\n                                <div className=\"cardTitle\">프로젝트 설명</div>\r\n                                <div className=\"cardContent\">\r\n                                    {DOCData.data.projectDesc}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"doc_card\">\r\n                                <div className=\"cardTitle\">프로젝트 성과</div>\r\n                                <div className=\"cardContent doc_reulst\">\r\n                                    {DOCData.data.projectReulst &&\r\n                                        DOCData.data.projectReulst.map(\r\n                                            (resultItem, idx) => (\r\n                                                <div\r\n                                                    key={idx}\r\n                                                    className=\"cardResult\"\r\n                                                >\r\n                                                    <div className=\"resultTitle\">\r\n                                                        {`${idx + 1}. `}{\" \"}\r\n                                                        {resultItem.title}\r\n                                                    </div>\r\n                                                    <div className=\"resultContent\">\r\n                                                        {resultItem.content}\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"doc_card\">\r\n                                <div className=\"cardTitle\">프로젝트 기간</div>\r\n                                <div className=\"cardContent\">\r\n                                    {DOCData.data.projectTerm.map(\r\n                                        (termItem, idx) => (\r\n                                            <div key={idx}>{termItem}</div>\r\n                                        )\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"doc_card\">\r\n                                <div className=\"cardTitle\">프로젝트 성격</div>\r\n                                <div className=\"cardContent\">\r\n                                    {DOCData.data.projectType}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"doc_card\">\r\n                                <div className=\"cardTitle\">담당 역할</div>\r\n                                <div className=\"cardContent\">\r\n                                    {DOCData.data.role.map((roleItem, idx) => (\r\n                                        <div key={idx}>\r\n                                            {`${idx + 1}. `}\r\n                                            {roleItem}\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"doc_card\">\r\n                                <div className=\"cardTitle\">개발부서</div>\r\n                                <div className=\"cardContent\">\r\n                                    {DOCData.data.department}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"doc_card\">\r\n                                <div className=\"cardTitle\">\r\n                                    사용한 기술 스택\r\n                                </div>\r\n                                <div className=\"cardContent doc_stack\">\r\n                                    {DOCData.data.stack.map(\r\n                                        (stackItem, idx) => (\r\n                                            <div\r\n                                                className=\"stackItem\"\r\n                                                key={idx}\r\n                                            >\r\n                                                <div className=\"stackItem_name\">\r\n                                                    {stackItem.name}\r\n                                                </div>\r\n                                                <div className=\"stackItem_Image\">\r\n                                                    <img\r\n                                                        src={stackItem.img}\r\n                                                        alt=\"stackImage\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"doc_card\">\r\n                                <div className=\"cardTitle\">url</div>\r\n                                <div className=\"cardContent\">\r\n                                    {DOCData.data.url || \"공개된 URL 없음\"}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* 현재 폴더에 존재하는 프로그램 개수 (폴더일때만 출력) */}\r\n            {item.type === \"FOLDER\" && (\r\n                <div className=\"bottomArea\">{folderContents.length} 개항목</div>\r\n            )}\r\n            {item.type === \"IMAGE\" && (\r\n                <div className=\"bottomArea\">\r\n                    {curImageIdx + 1} / {imageArr.length}\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"modiSize top_left\"></div>\r\n            <div className=\"modiSize top_right\"></div>\r\n            <div className=\"modiSize right\"></div>\r\n            <div className=\"modiSize bottom_left\"></div>\r\n            <div\r\n                className=\"modiSize bottom_right\"\r\n                onMouseDown={onMouseDown_Resize}\r\n                onMouseUp={onMouseUp_Resize}\r\n            ></div>\r\n        </FolderComponentBlock>\r\n    );\r\n};\r\nconst open = keyframes`\r\nfrom {\r\n    opacity: 0;\r\n    transform: scale(0.9);\r\n}\r\nto {\r\n    opacity: 1;\r\n    transform: scale(1);\r\n}\r\n`;\r\n\r\nconst FolderComponentBlock = styled.div`\r\n    left: calc(50% - 250px);\r\n    top: calc(50% - 250px);\r\n    height: 500px;\r\n    width: 500px;\r\n\r\n    box-shadow: 0px 0px 20px 3px #00000061;\r\n    position: absolute;\r\n\r\n    background-color: white;\r\n\r\n    z-index: ${(props) => props.zIndexCnt};\r\n\r\n    display: grid;\r\n    grid-template-rows: 32px 25px 1fr 20px;\r\n\r\n    .modiSize {\r\n        position: absolute;\r\n        width: 4px;\r\n        height: 4px;\r\n        cursor: pointer;\r\n\r\n        // background-color: red;\r\n    }\r\n\r\n    .top_left {\r\n        top: 0;\r\n        left: 0;\r\n        cursor: nw-resize;\r\n    }\r\n\r\n    .top_right {\r\n        top: 0;\r\n        right: 0;\r\n        cursor: ne-resize;\r\n    }\r\n\r\n    .bottom_left {\r\n        bottom: 0;\r\n        left: 0;\r\n        cursor: ne-resize;\r\n    }\r\n\r\n    .bottom_right {\r\n        bottom: 0;\r\n        right: 0;\r\n        cursor: nw-resize;\r\n    }\r\n\r\n    .infoArea {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 5px;\r\n        height: 100%;\r\n        margin-left: 10px;\r\n    }\r\n\r\n    .infoArea img {\r\n        width: 20px;\r\n        height: 20px;\r\n    }\r\n    .infoArea div {\r\n        font-size: 14px;\r\n    }\r\n\r\n    .headerArea {\r\n        width: 100%;\r\n        height: 32px;\r\n\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n\r\n        padding: 1px 1px 0 1px;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    .headerArea2 {\r\n        gap: 10px;\r\n        padding: 0 10px;\r\n\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n    }\r\n\r\n    .arrowBox {\r\n        display: flex;\r\n        gap: 10px;\r\n    }\r\n    .arrowBox img {\r\n        width: 15px;\r\n        height: 100%;\r\n    }\r\n    .programTitle {\r\n    }\r\n\r\n    .routeBox {\r\n        flex: 1;\r\n\r\n        text-align: left;\r\n        padding: 0 10px;\r\n        font-size: 12px;\r\n        cursor: default;\r\n\r\n        display: flex;\r\n        align-items: center;\r\n        border: 1px solid #e3e3e3;\r\n        height: 100%;\r\n    }\r\n    .routeBox input {\r\n        width: 100%;\r\n        height: 100%;\r\n        margin: 0;\r\n        padding: 0;\r\n        border: none;\r\n        outline: none;\r\n    }\r\n\r\n    .selectDisplayType {\r\n        height: 100%;\r\n    }\r\n\r\n    .buttonArea {\r\n        height: 100%;\r\n        display: flex;\r\n        gap: 1px;\r\n    }\r\n\r\n    .min div {\r\n        width: 11px;\r\n        height: 1px;\r\n        background-color: black;\r\n    }\r\n\r\n    .max div {\r\n        width: 8px;\r\n        height: 8px;\r\n        border: 1px solid black;\r\n    }\r\n\r\n    .close div {\r\n        width: 14px;\r\n        height: 1px;\r\n        background-color: black;\r\n    }\r\n\r\n    .close div:nth-child(1) {\r\n        position: absolute;\r\n        rotate: 45deg;\r\n    }\r\n\r\n    .close div:nth-child(2) {\r\n        rotate: 135deg;\r\n    }\r\n\r\n    .buttonArea > div {\r\n        height: 100%;\r\n        width: 45px;\r\n        transition: 0.2s;\r\n\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    .buttonArea > div > img {\r\n        width: 14px;\r\n    }\r\n\r\n    .buttonArea .buttonIcon:hover {\r\n        background-color: #ddddddb3;\r\n    }\r\n\r\n    .buttonArea > .close:hover {\r\n        background-color: #ff1010;\r\n    }\r\n\r\n    animation: ${open} 0.25s 0s;\r\n\r\n    .contentsArea_Cover {\r\n        width: 100%;\r\n        height: 100%;\r\n        overflow: scroll;\r\n        position: relative;\r\n    }\r\n\r\n    // 문서 컨텐츠 영역\r\n    // 850 px 이상인 경우  처리 필요함.\r\n    .contentsArea_doc {\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        display: flex;\r\n        gap: 20px;\r\n        flex-wrap: wrap;\r\n        align-content: flex-start;\r\n        box-sizing: border-box;\r\n        padding: 10px;\r\n\r\n        // overflow: hidden;\r\n    }\r\n\r\n    .doc_imageArea {\r\n        width: 100%;\r\n        height: auto;\r\n        min-height: 200px;\r\n        background-color: #e7e7e7;\r\n        display: inline-box;\r\n        overflow: scroll;\r\n\r\n        flex-grow: 1;\r\n        flex-basis: 500px;\r\n    }\r\n\r\n    .noProjectImage {\r\n        width: 100%;\r\n        height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n\r\n        color: #a2a1a1;\r\n        font-size: 14px;\r\n    }\r\n\r\n    .projectImageItem {\r\n        height: 100%;\r\n\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    .projectImageItem img {\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        object-fit: contain;\r\n    }\r\n\r\n    .doc_contentsArea {\r\n        flex: 1;\r\n\r\n        overflow: scroll;\r\n        height: 100%;\r\n        width: 100%;\r\n        flex-grow: 1;\r\n        flex-basis: 500px;\r\n    }\r\n\r\n    .doc_card {\r\n        text-align: left;\r\n\r\n        box-sizing: border-box;\r\n        padding: 20px 0;\r\n        border-bottom: 1px solid gray;\r\n    }\r\n\r\n    .cardTitle {\r\n        font-weight: bold;\r\n        margin-bottom: 10px;\r\n    }\r\n    .cardContent {\r\n        font-size: 12px;\r\n        color: #4b4b4b;\r\n    }\r\n\r\n    .doc_stack {\r\n        display: flex;\r\n        gap: 10px;\r\n        flex-wrap: wrap;\r\n    }\r\n    .stackItem {\r\n        border: 1px solid gray;\r\n        padding: 5px 10px;\r\n        border-radius: 5px;\r\n        width: fit-content;\r\n        position: relative;\r\n        cursor: pointer;\r\n        transition: 0.2s;\r\n    }\r\n\r\n    .stackItem:hover {\r\n        color: white;\r\n        background-color: gray;\r\n    }\r\n    .stackItem:hover .stackItem_Image {\r\n        bottom: -45px;\r\n        opacity: 1;\r\n\r\n        box-shadow: 0px 0px 10px 2px #a1a1a1;\r\n        scale: 1;\r\n    }\r\n\r\n    .stackItem_Image {\r\n        position: absolute;\r\n\r\n        left: calc(50% - 20px);\r\n        width: 40px;\r\n        height: 40px;\r\n        bottom: -35px;\r\n\r\n        background-color: white;\r\n        opacity: 0;\r\n        transition: 0.2s;\r\n\r\n        box-sizing: border-box;\r\n        padding: 5px;\r\n\r\n        scale: 0.4;\r\n    }\r\n\r\n    .doc_reulst {\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 20px;\r\n    }\r\n    .stackItem_Image img {\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        object-fit: contain;\r\n    }\r\n\r\n    .resultTitle {\r\n        margin-bottom: 5px;\r\n        font-weight: bold;\r\n    }\r\n\r\n    // 이미지 컨텐츠 영역\r\n    .contentsArea_image {\r\n        width: 100%;\r\n        height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n\r\n        background-color: #20343b;\r\n    }\r\n\r\n    .image_arrow {\r\n        position: absolute;\r\n        height: 100%;\r\n        width: 100px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        opacity: 0;\r\n        transition: 0.2s;\r\n    }\r\n\r\n    .image_arrow img {\r\n        width: 15px;\r\n        height: 15px;\r\n    }\r\n\r\n    .image_arrow:hover {\r\n        opacity: 1;\r\n    }\r\n\r\n    .image_arrowLeft {\r\n        background: linear-gradient(to right, #00000029, #ffffff00);\r\n        left: 0;\r\n    }\r\n\r\n    .image_arrowRight {\r\n        background: linear-gradient(to right, #ffffff00, #00000029);\r\n        right: 0;\r\n    }\r\n\r\n    // 폴더형 컨텐츠 영역\r\n    .contentsArea_folder {\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        padding: 10px;\r\n        box-sizing: border-box;\r\n\r\n        display: flex;\r\n        gap: 20px;\r\n        flex-wrap: wrap;\r\n\r\n        align-content: flex-start;\r\n    }\r\n\r\n    // 아주 큰 아이콘\r\n    .BIG_BIG_ICON .folder {\r\n        width: ${DEFAULT_SIZE * 2}px;\r\n    }\r\n\r\n    .BIG_BIG_ICON img {\r\n        width: ${DEFAULT_SIZE * 2}px;\r\n        height: ${DEFAULT_SIZE * 2}px;\r\n    }\r\n\r\n    // 큰 아이콘\r\n    .BIG_ICON .folder {\r\n        width: ${DEFAULT_SIZE * 1.5}px;\r\n    }\r\n\r\n    .BIG_ICON img {\r\n        width: ${DEFAULT_SIZE * 1.5}px;\r\n        height: ${DEFAULT_SIZE * 1.5}px;\r\n    }\r\n\r\n    // 보통 아이콘\r\n    .MEDIUM_ICON .folder {\r\n        width: ${DEFAULT_SIZE}px;\r\n    }\r\n\r\n    .MEDIUM_ICON img {\r\n        width: ${DEFAULT_SIZE}px;\r\n        height: ${DEFAULT_SIZE}px;\r\n    }\r\n\r\n    // 작은 아이콘\r\n    .SMALL_ICON .folder {\r\n        width: ${DEFAULT_SIZE * 0.5}px;\r\n    }\r\n\r\n    .SMALL_ICON img {\r\n        width: ${DEFAULT_SIZE * 0.5}px;\r\n        height: ${DEFAULT_SIZE * 0.5}px;\r\n    }\r\n\r\n    // 자세히\r\n    .DETAIL {\r\n        gap: 0px;\r\n    }\r\n\r\n    .DETAIL .folder {\r\n        width: 100%;\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n    }\r\n    .DETAIL .folder div {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    .DETAIL img {\r\n        width: ${DEFAULT_SIZE * 0.25}px;\r\n        height: ${DEFAULT_SIZE * 0.25}px;\r\n    }\r\n\r\n    .folder {\r\n        height: auto;\r\n        padding: 5px 10px;\r\n        border: 1px solid #ffffff00;\r\n    }\r\n\r\n    .folder_selected {\r\n        background-color: #cce8ff !important;\r\n        border: 1px solid #99d1ff;\r\n    }\r\n    .folder:hover {\r\n        background-color: #e5f3ff;\r\n    }\r\n    .folder .name {\r\n        word-break: break-all;\r\n        font-size: 12px;\r\n        cursor: default;\r\n    }\r\n\r\n    .detailHeader {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        width: 100%;\r\n        padding: 5px 10px;\r\n    }\r\n\r\n    .detailHeader .name {\r\n        font-size: 11px;\r\n        cursor: default;\r\n    }\r\n\r\n    .bottomArea {\r\n        width: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: flex-start;\r\n        font-size: 12px;\r\n        padding: 0 10px;\r\n    }\r\n\r\n    .noContents {\r\n        width: 100%;\r\n        height: 100%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        color: gray;\r\n        font-size: 14px;\r\n        cursor: default;\r\n    }\r\n\r\n    ${(props) => props.isClose && ` opacity: 0; transform: scale(0.9)`}\r\n`;\r\nexport default FolderComponent;\r\n\r\n/*\r\n\r\n*/\r\n","import React, { useCallback, useEffect, useMemo, useRef } from \"react\";\r\nimport FolderComponent from \"../../Component/Program/FolderComponent\";\r\nimport {\r\n    rc_program_activeProgram,\r\n    rc_program_programList,\r\n    rc_program_zIndexCnt,\r\n} from \"../../store/program\";\r\nimport { useSetRecoilState, useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { useState } from \"react\";\r\nimport {\r\n    rc_global_Directory_List,\r\n    rc_global_Directory_Tree,\r\n} from \"../../store/global\";\r\nimport useActiveProgram from \"../../hooks/useActiveProgram\";\r\nimport { projectDatas } from \"../../Common/data\";\r\nconst displayList = [\r\n    { value: \"BIG_BIG_ICON\", name: \"아주 큰 아이콘\" },\r\n    { value: \"BIG_ICON\", name: \"큰 아이콘\" },\r\n    { value: \"MEDIUM_ICON\", name: \"보통 아이콘\" },\r\n    { value: \"SMALL_ICON\", name: \"작은 아이콘\" },\r\n    { value: \"DETAIL\", name: \"자세히\" },\r\n];\r\n\r\nconst FolderContainer = ({ item }) => {\r\n    // 프로그램 리스트의 현재 아이템의 상태가 변함.\r\n    // props 가 변하고 item으로 받는 status가 변경됨.\r\n    // name은 변하지 않음. (고유값.)\r\n    const { name, status } = item;\r\n\r\n    const Directory_Tree = useRecoilValue(rc_global_Directory_Tree);\r\n    const directory = useRecoilValue(rc_global_Directory_List);\r\n\r\n    const setProgramList = useSetRecoilState(rc_program_programList);\r\n\r\n    const [zIndexCnt, setZIndexCnt] = useRecoilState(rc_program_zIndexCnt);\r\n    const temp_zIndexCnt = zIndexCnt;\r\n\r\n    const [activeProgram, setActiveProgram] = useRecoilState(\r\n        rc_program_activeProgram\r\n    );\r\n    const [isMovable, setIsMovable] = useState(false);\r\n    const [isResizable, setIsResizable] = useState(false);\r\n    const [isClose, setIsClose] = useState(false);\r\n    const [isMaxSize, setIsMaxSize] = useState(false);\r\n\r\n    // 현재 폴더 정보 (초기엔 바탕화면에서 클릭한 아이템.)\r\n    const [currentFolder, setCurrentFolder] = useState(\r\n        directory.find((findItem) => item.name === findItem.name)\r\n    );\r\n\r\n    // 현재 폴더에서 보여줄 컨텐츠 (초기엔 바탕화면에서 클릭한 아이템의 컨텐츠)\r\n    const [folderContents, setFolderContents] = useState(\r\n        Directory_Tree[item.name] || []\r\n    );\r\n    const [folderHistory, setFolderHistory] = useState([item.contents]);\r\n\r\n    const [selectedItem, setSelectedItem] = useState(\"\"); // 클릭한 아이템\r\n\r\n    const [displayType, setDisplayType] = useState(displayList[2].value);\r\n\r\n    // 아이콘 더블클릭 (활성화)\r\n    const onDoubleClickIcon = useActiveProgram();\r\n\r\n    // 보기 유형\r\n    const prevPos = useRef();\r\n    const boxRef = useRef();\r\n\r\n    // 현재 창 클릭\r\n    const onClick = useCallback(() => {\r\n        setActiveProgram(name);\r\n    }, [setActiveProgram, name]);\r\n\r\n    // 최대화\r\n    const onClickMax = useCallback(() => {\r\n        // setProgramList((prev) =>\r\n        //     prev.map((prevItem) =>\r\n        //         prevItem.name === name\r\n        //             ? { ...prevItem, status: \"active_max\" }\r\n        //             : { ...prevItem }\r\n        //     )\r\n        // );\r\n\r\n        setIsMaxSize(true);\r\n        boxRef.current.style.transition = \"0.25s\";\r\n        boxRef.current.style.left = \"0\";\r\n        boxRef.current.style.top = \"0\";\r\n\r\n        localStorage.setItem(`${name}width`, \"100vw\");\r\n        localStorage.setItem(`${name}height`, \"calc(100vh - 50px)\");\r\n\r\n        boxRef.current.style.width = \"100vw\";\r\n        boxRef.current.style.height = \"calc(100vh - 50px)\";\r\n    }, [setIsMaxSize, setProgramList]);\r\n\r\n    // 기본 크기\r\n    const onClickNormalSize = useCallback(() => {\r\n        setIsMaxSize(false);\r\n        // setProgramList((prev) =>\r\n        //     prev.map((prevItem) =>\r\n        //         prevItem.name === name\r\n        //             ? { ...prevItem, status: \"active\" }\r\n        //             : { ...prevItem }\r\n        //     )\r\n        // );\r\n        const left = localStorage.getItem(`${name}Left`);\r\n        const top = localStorage.getItem(`${name}Top`);\r\n        boxRef.current.style.transition = \"0.25s\";\r\n\r\n        if (left && top) {\r\n            boxRef.current.style.left = left + \"px\";\r\n            boxRef.current.style.top = top + \"px\";\r\n        } else {\r\n            boxRef.current.style.left = \"calc(50vw - 250px)\";\r\n            boxRef.current.style.top = \"calc(50vh - 250px)\";\r\n        }\r\n        localStorage.setItem(`${name}width`, \"500px\");\r\n        localStorage.setItem(`${name}height`, \"500px\");\r\n\r\n        boxRef.current.style.width = \"500px\";\r\n        boxRef.current.style.height = \"500px\";\r\n    }, [setIsMaxSize, setProgramList]);\r\n\r\n    // 최소화\r\n    const onClickMin = useCallback(() => {\r\n        setProgramList((prev) =>\r\n            prev.map((prevItem) =>\r\n                prevItem.name === name\r\n                    ? { ...prevItem, status: \"min\" }\r\n                    : { ...prevItem }\r\n            )\r\n        );\r\n    }, [name, setProgramList]);\r\n\r\n    // 닫기\r\n    const onClickClose = useCallback(() => {\r\n        setIsClose(true);\r\n        boxRef.current.style.transition = \"0.25s\";\r\n        boxRef.current.style.opacity = \"0\";\r\n\r\n        setTimeout(() => {\r\n            setProgramList((prev) => prev.filter((item) => item.name !== name));\r\n        }, [300]);\r\n    }, [name, setProgramList]);\r\n\r\n    // 이동 활성화\r\n    const onMouseDown = useCallback(\r\n        (e) => {\r\n            setIsMovable(true);\r\n            prevPos.current = {\r\n                X: e.clientX,\r\n                Y: e.clientY,\r\n            };\r\n        },\r\n        [setIsMovable]\r\n    );\r\n\r\n    // 이동\r\n    const onMouseMove = useCallback(\r\n        (e) => {\r\n            // if (e.clientY <= 0) {\r\n            //     console.log(\"exit\");\r\n            //     return;\r\n            // }\r\n            // 이전 좌표와 현재 좌표 차이값\r\n            if (isMovable) {\r\n                const posX = prevPos.current.X - e.clientX;\r\n                const posY = prevPos.current.Y - e.clientY;\r\n\r\n                // 현재 좌표가 이전 좌표로 바뀜\r\n                prevPos.current = {\r\n                    X: e.clientX,\r\n                    Y: e.clientY,\r\n                };\r\n\r\n                // left, top으로 이동\r\n\r\n                boxRef.current.style.transition = \"0s\";\r\n\r\n                localStorage.setItem(\r\n                    `${name}Left`,\r\n                    boxRef.current.offsetLeft - posX\r\n                );\r\n                localStorage.setItem(\r\n                    `${name}Top`,\r\n                    boxRef.current.offsetTop - posY\r\n                );\r\n\r\n                boxRef.current.style.left =\r\n                    boxRef.current.offsetLeft - posX + \"px\";\r\n                boxRef.current.style.top =\r\n                    boxRef.current.offsetTop - posY + \"px\";\r\n            }\r\n\r\n            if (isResizable) {\r\n                /*\r\n                    posX 에 이전과 커서 위치 차이값이 들어있다.\r\n\r\n                    마우스가 움직이면서 이전 좌표값을 갱신한다\r\n\r\n                    차이값 만큼 width, height 값을 계산한다\r\n\r\n                    만약 최소값보다 큰 경우만 값을 갱신한다\r\n\r\n                    만약 최소값 이하로 내려가려한다면?\r\n\r\n                    커서값은 계속 갱신된다. (현재 위치좌표로)\r\n\r\n                    커서가 오른쪽으로 움직이는 순간\r\n\r\n                    좌표 값 차이만큼 width 값이 변한다\r\n                    이때 커서는 한참 왼쪽에있다.\r\n\r\n                    커서가 다시 원래 위치로 오고 나서 값 계산에 따른 너비를 갱신해야한다.\r\n\r\n                    원래위치는 최소 값에 도달한 위치를 말한다.\r\n\r\n                    크기 조정함수 공통화 필요\r\n                    \r\n                */\r\n\r\n                // 커서의 이전 위치를 기반으로 어느 방향으로 움직일지 체크\r\n                boxRef.current.style.transition = \"0s\";\r\n                const posX = prevPos.current.X - e.clientX;\r\n                const posY = prevPos.current.Y - e.clientY;\r\n\r\n                // 크기 값 갱신\r\n                const newWidth = boxRef.current.offsetWidth - posX;\r\n                const newHeight = boxRef.current.offsetHeight - posY;\r\n\r\n                // ====================\r\n                // 상\r\n                if (posX === 0 && posY > 0) {\r\n                    if (newHeight < 60) {\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${name}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n                // 하\r\n                else if (posX === 0 && posY < 0) {\r\n                    if (prevPos.current.Y <= e.clientY) {\r\n                        localStorage.setItem(\r\n                            `${name}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n                // 좌\r\n                else if (posX > 0 && posY === 0) {\r\n                    if (newWidth < 300) {\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${name}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                        //\r\n                    }\r\n                }\r\n                // 우\r\n                else if (posX < 0 && posY === 0) {\r\n                    if (prevPos.current.X <= e.clientX) {\r\n                        localStorage.setItem(\r\n                            `${name}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n                        // 마우스 위치..\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                    }\r\n                }\r\n                // 왼쪽 위\r\n                else if (posX > 0 && posY > 0) {\r\n                    if (newWidth < 300) {\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${name}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                        //\r\n                    }\r\n\r\n                    if (newHeight < 60) {\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${name}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n                // 오른쪽 위\r\n                else if (posX < 0 && posY > 0) {\r\n                    if (prevPos.current.X <= e.clientX) {\r\n                        localStorage.setItem(\r\n                            `${name}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n                        // 마우스 위치..\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                    }\r\n\r\n                    if (newHeight < 60) {\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${name}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n                // 왼쪽 아래\r\n                else if (posX > 0 && posY < 0) {\r\n                    if (newWidth < 300) {\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${name}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                        //\r\n                    }\r\n\r\n                    if (prevPos.current.Y <= e.clientY) {\r\n                        localStorage.setItem(\r\n                            `${name}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n                // 오른쪽 아래\r\n                else if (posX < 0 && posY < 0) {\r\n                    if (prevPos.current.X <= e.clientX) {\r\n                        localStorage.setItem(\r\n                            `${name}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n                        // 마우스 위치..\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                    }\r\n\r\n                    if (prevPos.current.Y <= e.clientY) {\r\n                        localStorage.setItem(\r\n                            `${name}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        [isMovable, isResizable]\r\n    );\r\n\r\n    // 이동 종료\r\n    const onMouseUp = useCallback(() => {\r\n        setIsMovable(false);\r\n    }, []);\r\n\r\n    // 현재 창 맨 앞으로\r\n    useEffect(() => {\r\n        if (activeProgram === name) {\r\n            boxRef.current.style.zIndex = temp_zIndexCnt + 1;\r\n            setZIndexCnt((prev) => prev + 1);\r\n        }\r\n    }, [activeProgram, name, setZIndexCnt]);\r\n\r\n    // 이동 활성화\r\n    useEffect(() => {\r\n        document.addEventListener(\"mousemove\", onMouseMove);\r\n\r\n        // 마우스 클릭이 종료되는 경우 모든 이벤트 종료 처리 필요\r\n        document.addEventListener(\"mouseup\", () => setIsResizable(false));\r\n\r\n        return () => {\r\n            document.removeEventListener(\"mousemove\", onMouseMove);\r\n        };\r\n    }, [onMouseMove]);\r\n\r\n    useEffect(() => {\r\n        if (status === \"active\") {\r\n            if (isMaxSize) {\r\n                boxRef.current.style.left = \"0px\";\r\n                boxRef.current.style.top = \"0px\";\r\n            } else {\r\n                const left = localStorage.getItem(`${name}Left`);\r\n                const top = localStorage.getItem(`${name}Top`);\r\n\r\n                //\r\n                if (left && top) {\r\n                    boxRef.current.style.left = left + \"px\";\r\n                    boxRef.current.style.top = top + \"px\";\r\n                } else {\r\n                    boxRef.current.style.left = \"calc(50vw - 250px)\";\r\n                    boxRef.current.style.top = \"calc(50vh - 250px)\";\r\n                }\r\n            }\r\n        }\r\n    }, [status, isMaxSize, boxRef]);\r\n\r\n    useEffect(() => {\r\n        /*\r\n        min\r\n        active\r\n        */\r\n\r\n        // 활성화\r\n        if (status === \"active\") {\r\n            boxRef.current.style.transition = \"0.25s\";\r\n            boxRef.current.style.opacity = \"1\";\r\n\r\n            const height = localStorage.getItem(`${name}height`);\r\n            const width = localStorage.getItem(`${name}width`);\r\n\r\n            if (height && width) {\r\n                boxRef.current.style.height = height;\r\n                boxRef.current.style.width = width;\r\n            } else {\r\n                boxRef.current.style.width = \"500px\";\r\n                boxRef.current.style.height = \"500px\";\r\n            }\r\n\r\n            boxRef.current.style.scale = \"1\";\r\n        }\r\n        // 최소화\r\n        else if (status === \"min\") {\r\n            boxRef.current.style.transition = \"0.25s\";\r\n            boxRef.current.style.opacity = \"0\";\r\n            boxRef.current.style.left = \"80px\";\r\n            boxRef.current.style.top = \"60vh\";\r\n            boxRef.current.style.scale = \"0.6\";\r\n            boxRef.current.style.width = \"500px\";\r\n            boxRef.current.style.height = \"500px\";\r\n        }\r\n    }, [status]);\r\n\r\n    const onMouseDown_Resize = useCallback((e) => {\r\n        setIsResizable(true);\r\n        prevPos.current = {\r\n            X: e.clientX,\r\n            Y: e.clientY,\r\n        };\r\n    }, []);\r\n\r\n    const onMouseMove_Resize = useCallback(() => {\r\n        //\r\n    }, []);\r\n\r\n    const onMouseUp_Resize = useCallback(() => {\r\n        //\r\n        setIsResizable(false);\r\n    }, []);\r\n\r\n    // 특정 아이템 클릭\r\n    const onClickItem = useCallback((name) => {\r\n        setSelectedItem(name);\r\n    }, []);\r\n\r\n    // 특정 아이템 더블 클릭\r\n    /*\r\n    \r\n    */\r\n    const onDoubleClickItem = useCallback(\r\n        (item) => {\r\n            // 폴더인 경우 현재 위치를 해당 폴더 위치로 변경한다.\r\n            if (item.type === \"FOLDER\") {\r\n                setCurrentFolder(\r\n                    directory.find((findItem) => item.name === findItem.name)\r\n                );\r\n                setFolderContents(Directory_Tree[item.name] || []);\r\n            }\r\n            // DOC, IMAGE 인 경우\r\n            // 해당하는 창을 띄운다\r\n            else {\r\n                onDoubleClickIcon(item);\r\n            }\r\n        },\r\n        [Directory_Tree, folderHistory, directory]\r\n    );\r\n\r\n    // 뒤로 가기\r\n    /*\r\n    현재 위치를 현재 아이템의 부모로 변경한다.\r\n    */\r\n    const onClickLeft = useCallback(() => {\r\n        if (!currentFolder.parent) return;\r\n\r\n        setFolderContents(Directory_Tree[currentFolder.parent]);\r\n        if (currentFolder.parent === \"KDH\") {\r\n            setCurrentFolder({\r\n                route: \"/ KDH\",\r\n            });\r\n        } else {\r\n            setCurrentFolder(\r\n                directory.find((item) => item.name === currentFolder.parent)\r\n            );\r\n        }\r\n    }, [setFolderContents, currentFolder, Directory_Tree]);\r\n\r\n    // 미구현\r\n    const onClickRight = useCallback(() => {\r\n        // setFolderContents(folderHistory[folderHistory.length - 1]);\r\n        //\r\n    }, []);\r\n\r\n    /*\r\n    이미지형\r\n\r\n    1. 현재 아이템의 부모의 모든 아이템중 이미지형 프로그램을 배열로 가지고 있는다.\r\n\r\n    2. 현재 아이템은 해당 배열의 몇번째 인덱스인지 저장한다.\r\n\r\n    3. 좌,우 버튼을 누르면 현재 인덱스를 +-1 해준다.\r\n\r\n    4. 화면에 출력될 이미지는 해당 배열에서 특정된 인덱스에 해당하는 이미지를 가지게 된다.\r\n    */\r\n\r\n    // 현재 아이템의 부모의 모든 아이템중 이미지형 프로그램\r\n    const [imageArr, setImageArr] = useState([]);\r\n    const imageArrLength = useRef(0);\r\n\r\n    // 현재 아이템의 인덱스\r\n    const [curImageIdx, setCurImageIdx] = useState(0);\r\n\r\n    // 이미지형 프로그램의 경우 수행\r\n    useEffect(() => {\r\n        if (item.type === \"IMAGE\") {\r\n            // 부모의 아이템\r\n            const parentContents = Directory_Tree[item.parent] || [];\r\n\r\n            // 가공된 아이템\r\n            const calculated_parentContents = parentContents.filter(\r\n                (filterItem) => filterItem.type === \"IMAGE\"\r\n            );\r\n            imageArrLength.current = calculated_parentContents.length;\r\n\r\n            setImageArr(calculated_parentContents);\r\n\r\n            setCurImageIdx(\r\n                calculated_parentContents.findIndex(\r\n                    (fintItem) => fintItem.name === item.name\r\n                )\r\n            );\r\n        }\r\n    }, [Directory_Tree, item]);\r\n\r\n    const IMG_onClickLeft = useCallback(() => {\r\n        // 나의 부모의 자식들을 알고 있어야 좌우 이동이 가능하다.\r\n        setCurImageIdx((prev) => (prev - 1 >= 0 ? prev - 1 : 0));\r\n    }, []);\r\n\r\n    const IMG_onClickRight = useCallback(() => {\r\n        setCurImageIdx((prev) =>\r\n            prev + 1 < imageArrLength.current\r\n                ? prev + 1\r\n                : imageArrLength.current - 1\r\n        );\r\n    }, []);\r\n\r\n    /*\r\n    문서형\r\n\r\n    현재 프로그램이 문서형이라면\r\n\r\n    문서 정보를 가져온다.\r\n\r\n    문서정보는 변경되지 않는다.\r\n    */\r\n    const DOCData = useMemo(() => {\r\n        if (item.type !== \"DOC\") return null;\r\n\r\n        console.log(\"item.name: \", item.name);\r\n\r\n        console.log(\"projectDatas: \", projectDatas);\r\n        const target = projectDatas.find(\r\n            (findItem) => findItem.projectName === item.name\r\n        );\r\n        console.log(\"target\", target);\r\n        return { data: target, keys: Object.keys(target) || [] };\r\n    }, [projectDatas, item]);\r\n\r\n    // useEffect(() => {\r\n    //     console.log(\"DOCData\", DOCData);\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            localStorage.removeItem(`${name}Left`);\r\n            localStorage.removeItem(`${name}Top`);\r\n            localStorage.removeItem(`${name}width`);\r\n            localStorage.removeItem(`${name}height`);\r\n        };\r\n    }, []);\r\n\r\n    const propDatas = {\r\n        onClick,\r\n        onClickClose,\r\n        onClickMax,\r\n        onClickNormalSize,\r\n        onClickMin,\r\n        onMouseDown,\r\n        onMouseUp,\r\n        onMouseDown_Resize,\r\n        onMouseUp_Resize,\r\n        onClickItem,\r\n        onDoubleClickItem,\r\n        onClickLeft,\r\n        onClickRight,\r\n        setDisplayType,\r\n\r\n        boxRef,\r\n        isClose,\r\n        isMaxSize,\r\n        item,\r\n        selectedItem,\r\n        folderContents,\r\n        displayType,\r\n        displayList,\r\n        currentFolder,\r\n\r\n        // IMAGE\r\n        IMG_onClickLeft,\r\n        IMG_onClickRight,\r\n        imageArr,\r\n        curImageIdx,\r\n\r\n        // DOC\r\n        DOCData,\r\n    };\r\n    return <FolderComponent {...propDatas} />;\r\n};\r\n\r\nexport default React.memo(FolderContainer);\r\n"],"names":["DEFAULT_SIZE","open","keyframes","FolderComponentBlock","styled","props","zIndexCnt","isClose","onClick","onClickClose","onClickMax","onClickNormalSize","onClickMin","onMouseDown","onMouseUp","onMouseDown_Resize","onMouseUp_Resize","onClickItem","onDoubleClickItem","onClickLeft","setDisplayType","onClickRight","boxRef","isMaxSize","item","selectedItem","folderContents","displayType","displayList","currentFolder","IMG_onClickLeft","IMG_onClickRight","imageArr","curImageIdx","DOCData","className","ref","type","src","icon","folderEmpty","alt","name","length","defaultImage","defaultDocumentImage","value","route","readOnly","onChange","e","target","map","idx","width","height","onDoubleClick","folderCnt","title","data","projectImages","imageItem","projectName","projectDesc","projectReulst","resultItem","content","projectTerm","termItem","projectType","role","roleItem","department","stack","stackItem","img","url","FolderContainer","status","Directory_Tree","useRecoilValue","rc_global_Directory_Tree","directory","rc_global_Directory_List","setProgramList","useSetRecoilState","rc_program_programList","useRecoilState","rc_program_zIndexCnt","setZIndexCnt","temp_zIndexCnt","rc_program_activeProgram","activeProgram","setActiveProgram","useState","isMovable","setIsMovable","isResizable","setIsResizable","setIsClose","setIsMaxSize","find","findItem","setCurrentFolder","setFolderContents","contents","folderHistory","setSelectedItem","onDoubleClickIcon","useActiveProgram","prevPos","useRef","useCallback","current","style","transition","left","top","localStorage","setItem","getItem","prev","prevItem","opacity","setTimeout","filter","X","clientX","Y","clientY","onMouseMove","posX","posY","offsetLeft","offsetTop","newWidth","offsetWidth","newHeight","offsetHeight","useEffect","zIndex","document","addEventListener","removeEventListener","scale","parent","setImageArr","imageArrLength","setCurImageIdx","calculated_parentContents","filterItem","findIndex","fintItem","useMemo","console","log","projectDatas","keys","Object","removeItem","propDatas","React"],"sourceRoot":""}