{"version":3,"file":"static/js/552.30caff57.chunk.js","mappings":"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","sources":["Component/Program/FolderComponent.jsx","Container/Program/FolderContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport folderFull from \"../../asset/images/icons/folder_full.png\";\r\nimport folderEmpty from \"../../asset/images/icons/folder_empty.png\";\r\nimport defaultImage from \"../../asset/images/icons/image_default.png\";\r\nimport leftArrow from \"../../asset/images/icons/left-arrow.png\";\r\n\r\nconst DEFAULT_SIZE = 80;\r\n\r\nconst FolderComponent = ({\r\n    onClick,\r\n    onClickClose,\r\n    onClickMax,\r\n    onClickNormalSize,\r\n    onClickMin,\r\n    onMouseDown,\r\n    onMouseUp,\r\n    onMouseDown_Resize,\r\n    onMouseUp_Resize,\r\n    onClickItem,\r\n    onDoubleClickItem,\r\n    onClickLeft,\r\n    onClickRight,\r\n    setDisplayType,\r\n\r\n    boxRef,\r\n    isClose,\r\n    isMaxSize,\r\n    item,\r\n    selectedItem,\r\n    folderContents,\r\n    displayType,\r\n    displayList,\r\n    currentFolder,\r\n}) => {\r\n    return (\r\n        <FolderComponentBlock\r\n            ref={boxRef}\r\n            isClose={isClose}\r\n            onMouseDown={onClick}\r\n            isMaxSize={isMaxSize}\r\n        >\r\n            <div\r\n                className=\"headerArea\"\r\n                onMouseDown={onMouseDown}\r\n                onMouseUp={onMouseUp}\r\n            >\r\n                <div className=\"infoArea\">\r\n                    <img src={item.icon || folderEmpty} alt={item.name} />\r\n                    <div>{item.name}</div>\r\n                </div>\r\n                <div className=\"buttonArea\">\r\n                    <div className=\"min\" onClick={onClickMin}>\r\n                        <div />\r\n                    </div>\r\n                    {isMaxSize ? (\r\n                        <div className=\"normalSize\" onClick={onClickNormalSize}>\r\n                            <div />\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"max\" onClick={onClickMax}>\r\n                            <div />\r\n                        </div>\r\n                    )}\r\n                    <div className=\"close\" onClick={onClickClose}>\r\n                        <div />\r\n                        <div />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* 폴더형인지, 인터넷형인지에 따라 생김새가 달라질 헤더 영역 */}\r\n            <div className=\"headerArea2\">\r\n                <div className=\"arrowBox\">\r\n                    <img\r\n                        src={leftArrow}\r\n                        alt=\"leftArrow\"\r\n                        onClick={onClickLeft}\r\n                    />\r\n                    {/*  뒤로 가기 임시 제거 */}\r\n                    {/* <img\r\n                        src={rightArrow}\r\n                        alt=\"rightArrow\"\r\n                        onClick={onClickRight}\r\n                    /> */}\r\n                </div>\r\n                <div className=\"routeBox\">\r\n                    <input\r\n                        value={currentFolder.route || \"/ [error]\"}\r\n                        readOnly\r\n                    />\r\n                </div>\r\n                <div className=\"selectDisplayType\">\r\n                    <select\r\n                        value={displayType}\r\n                        onChange={(e) => setDisplayType(e.target.value)}\r\n                    >\r\n                        {displayList.map((item, idx) => (\r\n                            <option key={idx} value={item.value}>\r\n                                {item.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            {/* 내부 데이터가 들어올 영역 */}\r\n            <div className={`contentsArea_Cover`}>\r\n                {item.name === \"구글\" ? (\r\n                    <iframe\r\n                        src={\"https://www.google.com/webhp?igu=1\"}\r\n                        width={\"100%\"}\r\n                        height={\"100%\"}\r\n                    />\r\n                ) : (\r\n                    <>\r\n                        <div className=\"sideFolderArea\"></div>\r\n                        <div className={`${displayType} contentsArea_folder`}>\r\n                            {folderContents && folderContents.length > 0 ? (\r\n                                <>\r\n                                    {displayType === \"DETAIL\" && (\r\n                                        <div className=\"detailHeader\">\r\n                                            <div className=\"name\">\r\n                                                {\"이미지\"}\r\n                                            </div>\r\n                                            <div className=\"name\">{\"이름\"}</div>\r\n                                            <div className=\"name\">{\"유형\"}</div>\r\n                                        </div>\r\n                                    )}\r\n                                    {folderContents.map((item, idx) => (\r\n                                        <div\r\n                                            className={`${\r\n                                                selectedItem === item.name\r\n                                                    ? \"folder folder_selected\"\r\n                                                    : \"folder\"\r\n                                            }`}\r\n                                            key={idx}\r\n                                            onClick={() =>\r\n                                                onClickItem(item.name)\r\n                                            }\r\n                                            onDoubleClick={() =>\r\n                                                onDoubleClickItem(item)\r\n                                            }\r\n                                        >\r\n                                            {/*  폴더 */}\r\n                                            <div className=\"imgCover\">\r\n                                                {item.type === \"FOLDER\" ? (\r\n                                                    <img\r\n                                                        src={\r\n                                                            item.folderCnt\r\n                                                                ? folderFull\r\n                                                                : folderEmpty\r\n                                                        }\r\n                                                        alt=\"folderEmpty\"\r\n                                                    />\r\n                                                ) : (\r\n                                                    <img\r\n                                                        src={\r\n                                                            item.icon ||\r\n                                                            defaultImage\r\n                                                        }\r\n                                                        alt={item.name}\r\n                                                    />\r\n                                                )}\r\n                                            </div>\r\n\r\n                                            <div className=\"name\">\r\n                                                {item.name}\r\n                                            </div>\r\n\r\n                                            {displayType === \"DETAIL\" && (\r\n                                                <div className=\"name\">\r\n                                                    {item.type}\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    ))}\r\n                                </>\r\n                            ) : (\r\n                                <div className=\"noContents\">비어있습니다.</div>\r\n                            )}\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n\r\n            {/* 폴더형 일때만 출력하도록. */}\r\n            {item.type === \"FOLDER\" && (\r\n                <></>\r\n                // <div className=\"bottomArea\">{folderContents.length} 개항목</div>\r\n            )}\r\n\r\n            <div className=\"modiSize top_left\"></div>\r\n            <div className=\"modiSize top_right\"></div>\r\n            <div className=\"modiSize right\"></div>\r\n            <div className=\"modiSize bottom_left\"></div>\r\n            <div\r\n                className=\"modiSize bottom_right\"\r\n                onMouseDown={onMouseDown_Resize}\r\n                onMouseUp={onMouseUp_Resize}\r\n            ></div>\r\n        </FolderComponentBlock>\r\n    );\r\n};\r\nconst open = keyframes`\r\nfrom {\r\n    opacity: 0;\r\n    transform: scale(0.9);\r\n}\r\nto {\r\n    opacity: 1;\r\n    transform: scale(1);\r\n}\r\n`;\r\n\r\nconst FolderComponentBlock = styled.div`\r\n    left: calc(50% - 250px);\r\n    top: calc(50% - 250px);\r\n    height: 500px;\r\n    width: 500px;\r\n\r\n    box-shadow: 0px 0px 20px 3px #00000061;\r\n    position: absolute;\r\n\r\n    background-color: white;\r\n\r\n    z-index: ${(props) => props.zIndexCnt};\r\n\r\n    display: grid;\r\n    grid-template-rows: 32px 25px 1fr 20px;\r\n\r\n    .modiSize {\r\n        position: absolute;\r\n        width: 4px;\r\n        height: 4px;\r\n        cursor: pointer;\r\n\r\n        // background-color: red;\r\n    }\r\n\r\n    .top_left {\r\n        top: 0;\r\n        left: 0;\r\n        cursor: nw-resize;\r\n    }\r\n\r\n    .top_right {\r\n        top: 0;\r\n        right: 0;\r\n        cursor: ne-resize;\r\n    }\r\n\r\n    .bottom_left {\r\n        bottom: 0;\r\n        left: 0;\r\n        cursor: ne-resize;\r\n    }\r\n\r\n    .bottom_right {\r\n        bottom: 0;\r\n        right: 0;\r\n        cursor: nw-resize;\r\n    }\r\n\r\n    .infoArea {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 5px;\r\n        height: 100%;\r\n        margin-left: 10px;\r\n    }\r\n\r\n    .infoArea img {\r\n        width: 20px;\r\n        height: 20px;\r\n    }\r\n    .infoArea div {\r\n        font-size: 14px;\r\n    }\r\n\r\n    .headerArea {\r\n        width: 100%;\r\n        height: 32px;\r\n\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n\r\n        padding: 1px 1px 0 1px;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    .headerArea2 {\r\n        gap: 10px;\r\n        padding: 0 10px;\r\n\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n    }\r\n\r\n    .arrowBox {\r\n        display: flex;\r\n        gap: 10px;\r\n    }\r\n    .arrowBox img {\r\n        width: 15px;\r\n        height: 100%;\r\n    }\r\n\r\n    .routeBox {\r\n        flex: 1;\r\n\r\n        text-align: left;\r\n        padding: 0 10px;\r\n        font-size: 12px;\r\n        cursor: default;\r\n\r\n        display: flex;\r\n        align-items: center;\r\n        border: 1px solid #e3e3e3;\r\n        height: 100%;\r\n    }\r\n    .routeBox input {\r\n        width: 100%;\r\n        height: 100%;\r\n        margin: 0;\r\n        padding: 0;\r\n        border: none;\r\n        outline: none;\r\n    }\r\n\r\n    .selectDisplayType {\r\n        height: 100%;\r\n    }\r\n\r\n    .buttonArea {\r\n        height: 100%;\r\n        display: flex;\r\n        gap: 1px;\r\n    }\r\n\r\n    .min div {\r\n        width: 11px;\r\n        height: 1px;\r\n        background-color: black;\r\n    }\r\n\r\n    .max div {\r\n        width: 8px;\r\n        height: 8px;\r\n        border: 1px solid black;\r\n    }\r\n\r\n    .close div {\r\n        width: 14px;\r\n        height: 1px;\r\n        background-color: black;\r\n    }\r\n\r\n    .close div:nth-child(1) {\r\n        position: absolute;\r\n        rotate: 45deg;\r\n    }\r\n\r\n    .close div:nth-child(2) {\r\n        rotate: 135deg;\r\n    }\r\n\r\n    .buttonArea > div {\r\n        height: 100%;\r\n        width: 45px;\r\n        transition: 0.2s;\r\n\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    .buttonArea > div > img {\r\n        width: 10px;\r\n    }\r\n\r\n    .buttonArea .min:hover,\r\n    .buttonArea .normalSize:hover,\r\n    .buttonArea .max:hover {\r\n        background-color: #ddddddb3;\r\n    }\r\n\r\n    .buttonArea > .close:hover {\r\n        background-color: #ff1010;\r\n    }\r\n\r\n    animation: ${open} 0.25s 0s;\r\n\r\n    .contentsArea_Cover {\r\n        width: 100%;\r\n        height: 100%;\r\n        overflow: scroll;\r\n    }\r\n\r\n    // 폴더형 컨텐츠 영역\r\n    .contentsArea_folder {\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        padding: 10px;\r\n        box-sizing: border-box;\r\n\r\n        display: flex;\r\n        gap: 20px;\r\n        flex-wrap: wrap;\r\n\r\n        align-content: flex-start;\r\n    }\r\n\r\n    // 아주 큰 아이콘\r\n    .BIG_BIG_ICON .folder {\r\n        width: ${DEFAULT_SIZE * 2}px;\r\n    }\r\n\r\n    .BIG_BIG_ICON img {\r\n        width: ${DEFAULT_SIZE * 2}px;\r\n        height: ${DEFAULT_SIZE * 2}px;\r\n    }\r\n\r\n    // 큰 아이콘\r\n    .BIG_ICON .folder {\r\n        width: ${DEFAULT_SIZE * 1.5}px;\r\n    }\r\n\r\n    .BIG_ICON img {\r\n        width: ${DEFAULT_SIZE * 1.5}px;\r\n        height: ${DEFAULT_SIZE * 1.5}px;\r\n    }\r\n\r\n    // 보통 아이콘\r\n    .MEDIUM_ICON .folder {\r\n        width: ${DEFAULT_SIZE}px;\r\n    }\r\n\r\n    .MEDIUM_ICON img {\r\n        width: ${DEFAULT_SIZE}px;\r\n        height: ${DEFAULT_SIZE}px;\r\n    }\r\n\r\n    // 작은 아이콘\r\n    .SMALL_ICON .folder {\r\n        width: ${DEFAULT_SIZE * 0.5}px;\r\n    }\r\n\r\n    .SMALL_ICON img {\r\n        width: ${DEFAULT_SIZE * 0.5}px;\r\n        height: ${DEFAULT_SIZE * 0.5}px;\r\n    }\r\n\r\n    // 자세히\r\n    .DETAIL {\r\n        gap: 0px;\r\n    }\r\n\r\n    .DETAIL .folder {\r\n        width: 100%;\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n    }\r\n    .DETAIL .folder div {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    .DETAIL img {\r\n        width: ${DEFAULT_SIZE * 0.25}px;\r\n        height: ${DEFAULT_SIZE * 0.25}px;\r\n    }\r\n\r\n    .folder {\r\n        height: auto;\r\n        padding: 5px 10px;\r\n        border: 1px solid #ffffff00;\r\n    }\r\n\r\n    .folder_selected {\r\n        background-color: #cce8ff !important;\r\n        border: 1px solid #99d1ff;\r\n    }\r\n    .folder:hover {\r\n        background-color: #e5f3ff;\r\n    }\r\n    .folder .name {\r\n        word-break: break-all;\r\n        font-size: 12px;\r\n        cursor: default;\r\n    }\r\n\r\n    .detailHeader {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        width: 100%;\r\n        padding: 5px 10px;\r\n    }\r\n\r\n    .detailHeader .name {\r\n        font-size: 11px;\r\n        cursor: default;\r\n    }\r\n\r\n    .bottomArea {\r\n        width: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: flex-start;\r\n        font-size: 12px;\r\n        padding: 0 10px;\r\n    }\r\n\r\n    .noContents {\r\n        width: 100%;\r\n        height: 100%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        color: gray;\r\n        font-size: 14px;\r\n        cursor: default;\r\n    }\r\n\r\n    ${(props) => props.isClose && ` opacity: 0; transform: scale(0.9)`}\r\n`;\r\nexport default FolderComponent;\r\n\r\n/*\r\n\r\n*/\r\n","import React, { useCallback, useEffect, useRef } from \"react\";\r\nimport FolderComponent from \"../../Component/Program/FolderComponent\";\r\nimport {\r\n    rc_program_activeProgram,\r\n    rc_program_programList,\r\n    rc_program_zIndexCnt,\r\n} from \"../../store/program\";\r\nimport { useSetRecoilState, useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { useState } from \"react\";\r\nimport {\r\n    rc_global_Directory_List,\r\n    rc_global_Directory_Tree,\r\n} from \"../../store/global\";\r\nconst displayList = [\r\n    { value: \"BIG_BIG_ICON\", name: \"아주 큰 아이콘\" },\r\n    { value: \"BIG_ICON\", name: \"큰 아이콘\" },\r\n    { value: \"MEDIUM_ICON\", name: \"보통 아이콘\" },\r\n    { value: \"SMALL_ICON\", name: \"작은 아이콘\" },\r\n    { value: \"DETAIL\", name: \"자세히\" },\r\n];\r\n\r\nconst FolderContainer = ({ item }) => {\r\n    // 프로그램 리스트의 현재 아이템의 상태가 변함.\r\n    // props 가 변하고 item으로 받는 status가 변경됨.\r\n    // name은 변하지 않음. (고유값.)\r\n    const { name, status } = item;\r\n    const Directory_Tree = useRecoilValue(rc_global_Directory_Tree);\r\n    const directory = useRecoilValue(rc_global_Directory_List);\r\n\r\n    const setProgramList = useSetRecoilState(rc_program_programList);\r\n\r\n    const [zIndexCnt, setZIndexCnt] = useRecoilState(rc_program_zIndexCnt);\r\n    const temp_zIndexCnt = zIndexCnt;\r\n\r\n    const [activeProgram, setActiveProgram] = useRecoilState(\r\n        rc_program_activeProgram\r\n    );\r\n    const [isMovable, setIsMovable] = useState(false);\r\n    const [isResizable, setIsResizable] = useState(false);\r\n    const [isClose, setIsClose] = useState(false);\r\n    const [isMaxSize, setIsMaxSize] = useState(false);\r\n\r\n    // 현재 폴더 정보 (초기엔 바탕화면에서 클릭한 아이템.)\r\n    const [currentFolder, setCurrentFolder] = useState(\r\n        directory.find((findItem) => item.name === findItem.name)\r\n    );\r\n\r\n    // 현재 폴더에서 보여줄 컨텐츠 (초기엔 바탕화면에서 클릭한 아이템의 컨텐츠)\r\n    const [folderContents, setFolderContents] = useState(\r\n        Directory_Tree[item.name] || []\r\n    );\r\n    const [folderHistory, setFolderHistory] = useState([item.contents]);\r\n\r\n    const [selectedItem, setSelectedItem] = useState(\"\"); // 클릭한 아이템\r\n\r\n    const [displayType, setDisplayType] = useState(displayList[2].value);\r\n\r\n    // 보기 유형\r\n    const prevPos = useRef();\r\n    const boxRef = useRef();\r\n\r\n    // 현재 창 클릭\r\n    const onClick = useCallback(() => {\r\n        setActiveProgram(name);\r\n    }, [setActiveProgram, name]);\r\n\r\n    // 최대화\r\n    const onClickMax = useCallback(() => {\r\n        // setProgramList((prev) =>\r\n        //     prev.map((prevItem) =>\r\n        //         prevItem.name === name\r\n        //             ? { ...prevItem, status: \"active_max\" }\r\n        //             : { ...prevItem }\r\n        //     )\r\n        // );\r\n\r\n        setIsMaxSize(true);\r\n        boxRef.current.style.transition = \"0.25s\";\r\n        boxRef.current.style.left = \"0\";\r\n        boxRef.current.style.top = \"0\";\r\n\r\n        localStorage.setItem(`${name}width`, \"100vw\");\r\n        localStorage.setItem(`${name}height`, \"calc(100vh - 50px)\");\r\n\r\n        boxRef.current.style.width = \"100vw\";\r\n        boxRef.current.style.height = \"calc(100vh - 50px)\";\r\n    }, [setIsMaxSize, setProgramList]);\r\n\r\n    // 기본 크기\r\n    const onClickNormalSize = useCallback(() => {\r\n        setIsMaxSize(false);\r\n        // setProgramList((prev) =>\r\n        //     prev.map((prevItem) =>\r\n        //         prevItem.name === name\r\n        //             ? { ...prevItem, status: \"active\" }\r\n        //             : { ...prevItem }\r\n        //     )\r\n        // );\r\n        const left = localStorage.getItem(`${name}Left`);\r\n        const top = localStorage.getItem(`${name}Top`);\r\n        boxRef.current.style.transition = \"0.25s\";\r\n\r\n        if (left && top) {\r\n            boxRef.current.style.left = left + \"px\";\r\n            boxRef.current.style.top = top + \"px\";\r\n        } else {\r\n            boxRef.current.style.left = \"calc(50vw - 250px)\";\r\n            boxRef.current.style.top = \"calc(50vh - 250px)\";\r\n        }\r\n        localStorage.setItem(`${name}width`, \"500px\");\r\n        localStorage.setItem(`${name}height`, \"500px\");\r\n\r\n        boxRef.current.style.width = \"500px\";\r\n        boxRef.current.style.height = \"500px\";\r\n    }, [setIsMaxSize, setProgramList]);\r\n\r\n    // 최소화\r\n    const onClickMin = useCallback(() => {\r\n        setProgramList((prev) =>\r\n            prev.map((prevItem) =>\r\n                prevItem.name === name\r\n                    ? { ...prevItem, status: \"min\" }\r\n                    : { ...prevItem }\r\n            )\r\n        );\r\n    }, [name, setProgramList]);\r\n\r\n    // 닫기\r\n    const onClickClose = useCallback(() => {\r\n        setIsClose(true);\r\n        boxRef.current.style.transition = \"0.25s\";\r\n        boxRef.current.style.opacity = \"0\";\r\n\r\n        setTimeout(() => {\r\n            setProgramList((prev) => prev.filter((item) => item.name !== name));\r\n        }, [300]);\r\n    }, [name, setProgramList]);\r\n\r\n    // 이동 활성화\r\n    const onMouseDown = useCallback(\r\n        (e) => {\r\n            setIsMovable(true);\r\n            prevPos.current = {\r\n                X: e.clientX,\r\n                Y: e.clientY,\r\n            };\r\n        },\r\n        [setIsMovable]\r\n    );\r\n\r\n    // 이동\r\n    const onMouseMove = useCallback(\r\n        (e) => {\r\n            // if (e.clientY <= 0) {\r\n            //     console.log(\"exit\");\r\n            //     return;\r\n            // }\r\n            // 이전 좌표와 현재 좌표 차이값\r\n            if (isMovable) {\r\n                const posX = prevPos.current.X - e.clientX;\r\n                const posY = prevPos.current.Y - e.clientY;\r\n\r\n                // 현재 좌표가 이전 좌표로 바뀜\r\n                prevPos.current = {\r\n                    X: e.clientX,\r\n                    Y: e.clientY,\r\n                };\r\n\r\n                // left, top으로 이동\r\n\r\n                boxRef.current.style.transition = \"0s\";\r\n\r\n                localStorage.setItem(\r\n                    `${name}Left`,\r\n                    boxRef.current.offsetLeft - posX\r\n                );\r\n                localStorage.setItem(\r\n                    `${name}Top`,\r\n                    boxRef.current.offsetTop - posY\r\n                );\r\n\r\n                boxRef.current.style.left =\r\n                    boxRef.current.offsetLeft - posX + \"px\";\r\n                boxRef.current.style.top =\r\n                    boxRef.current.offsetTop - posY + \"px\";\r\n            }\r\n\r\n            if (isResizable) {\r\n                /*\r\n                    posX 에 이전과 커서 위치 차이값이 들어있다.\r\n\r\n                    마우스가 움직이면서 이전 좌표값을 갱신한다\r\n\r\n                    차이값 만큼 width, height 값을 계산한다\r\n\r\n                    만약 최소값보다 큰 경우만 값을 갱신한다\r\n\r\n                    만약 최소값 이하로 내려가려한다면?\r\n\r\n                    커서값은 계속 갱신된다. (현재 위치좌표로)\r\n\r\n                    커서가 오른쪽으로 움직이는 순간\r\n\r\n                    좌표 값 차이만큼 width 값이 변한다\r\n                    이때 커서는 한참 왼쪽에있다.\r\n\r\n                    커서가 다시 원래 위치로 오고 나서 값 계산에 따른 너비를 갱신해야한다.\r\n\r\n                    원래위치는 최소 값에 도달한 위치를 말한다.\r\n\r\n                    크기 조정함수 공통화 필요\r\n                    \r\n                */\r\n\r\n                // 커서의 이전 위치를 기반으로 어느 방향으로 움직일지 체크\r\n                boxRef.current.style.transition = \"0s\";\r\n                const posX = prevPos.current.X - e.clientX;\r\n                const posY = prevPos.current.Y - e.clientY;\r\n\r\n                // 크기 값 갱신\r\n                const newWidth = boxRef.current.offsetWidth - posX;\r\n                const newHeight = boxRef.current.offsetHeight - posY;\r\n\r\n                // ====================\r\n                // 상\r\n                if (posX === 0 && posY > 0) {\r\n                    if (newHeight < 60) {\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${name}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n                // 하\r\n                else if (posX === 0 && posY < 0) {\r\n                    if (prevPos.current.Y <= e.clientY) {\r\n                        localStorage.setItem(\r\n                            `${name}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n                // 좌\r\n                else if (posX > 0 && posY === 0) {\r\n                    if (newWidth < 300) {\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${name}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                        //\r\n                    }\r\n                }\r\n                // 우\r\n                else if (posX < 0 && posY === 0) {\r\n                    if (prevPos.current.X <= e.clientX) {\r\n                        localStorage.setItem(\r\n                            `${name}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n                        // 마우스 위치..\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                    }\r\n                }\r\n                // 왼쪽 위\r\n                else if (posX > 0 && posY > 0) {\r\n                    if (newWidth < 300) {\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${name}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                        //\r\n                    }\r\n\r\n                    if (newHeight < 60) {\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${name}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n                // 오른쪽 위\r\n                else if (posX < 0 && posY > 0) {\r\n                    if (prevPos.current.X <= e.clientX) {\r\n                        localStorage.setItem(\r\n                            `${name}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n                        // 마우스 위치..\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                    }\r\n\r\n                    if (newHeight < 60) {\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${name}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n                // 왼쪽 아래\r\n                else if (posX > 0 && posY < 0) {\r\n                    if (newWidth < 300) {\r\n                    } else {\r\n                        localStorage.setItem(\r\n                            `${name}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                        //\r\n                    }\r\n\r\n                    if (prevPos.current.Y <= e.clientY) {\r\n                        localStorage.setItem(\r\n                            `${name}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n                // 오른쪽 아래\r\n                else if (posX < 0 && posY < 0) {\r\n                    if (prevPos.current.X <= e.clientX) {\r\n                        localStorage.setItem(\r\n                            `${name}width`,\r\n                            `${boxRef.current.offsetWidth - posX}px`\r\n                        );\r\n\r\n                        boxRef.current.style.width =\r\n                            boxRef.current.offsetWidth - posX + \"px\";\r\n                        // 마우스 위치..\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.X = e.clientX;\r\n                    }\r\n\r\n                    if (prevPos.current.Y <= e.clientY) {\r\n                        localStorage.setItem(\r\n                            `${name}height`,\r\n                            `${boxRef.current.offsetHeight - posY}px`\r\n                        );\r\n\r\n                        boxRef.current.style.height =\r\n                            boxRef.current.offsetHeight - posY + \"px\";\r\n\r\n                        // 현재 좌표가 이전 좌표로 바뀜\r\n                        prevPos.current.Y = e.clientY;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        [isMovable, isResizable]\r\n    );\r\n\r\n    // 이동 종료\r\n    const onMouseUp = useCallback(() => {\r\n        setIsMovable(false);\r\n    }, []);\r\n\r\n    // 현재 창 맨 앞으로\r\n    useEffect(() => {\r\n        if (activeProgram === name) {\r\n            boxRef.current.style.zIndex = temp_zIndexCnt + 1;\r\n            setZIndexCnt((prev) => prev + 1);\r\n        }\r\n    }, [activeProgram, name, setZIndexCnt]);\r\n\r\n    // 이동 활성화\r\n    useEffect(() => {\r\n        document.addEventListener(\"mousemove\", onMouseMove);\r\n\r\n        // 마우스 클릭이 종료되는 경우 모든 이벤트 종료 처리 필요\r\n        document.addEventListener(\"mouseup\", () => setIsResizable(false));\r\n\r\n        return () => {\r\n            document.removeEventListener(\"mousemove\", onMouseMove);\r\n        };\r\n    }, [onMouseMove]);\r\n\r\n    useEffect(() => {\r\n        if (status === \"active\") {\r\n            if (isMaxSize) {\r\n                boxRef.current.style.left = \"0px\";\r\n                boxRef.current.style.top = \"0px\";\r\n            } else {\r\n                const left = localStorage.getItem(`${name}Left`);\r\n                const top = localStorage.getItem(`${name}Top`);\r\n\r\n                //\r\n                if (left && top) {\r\n                    boxRef.current.style.left = left + \"px\";\r\n                    boxRef.current.style.top = top + \"px\";\r\n                } else {\r\n                    boxRef.current.style.left = \"calc(50vw - 250px)\";\r\n                    boxRef.current.style.top = \"calc(50vh - 250px)\";\r\n                }\r\n            }\r\n        }\r\n    }, [status, isMaxSize, boxRef]);\r\n\r\n    useEffect(() => {\r\n        /*\r\n        min\r\n        active\r\n        */\r\n\r\n        // 활성화\r\n        if (status === \"active\") {\r\n            boxRef.current.style.transition = \"0.25s\";\r\n            boxRef.current.style.opacity = \"1\";\r\n\r\n            const height = localStorage.getItem(`${name}height`);\r\n            const width = localStorage.getItem(`${name}width`);\r\n\r\n            if (height && width) {\r\n                boxRef.current.style.height = height;\r\n                boxRef.current.style.width = width;\r\n            } else {\r\n                boxRef.current.style.width = \"500px\";\r\n                boxRef.current.style.height = \"500px\";\r\n            }\r\n\r\n            boxRef.current.style.scale = \"1\";\r\n        }\r\n        // 최소화\r\n        else if (status === \"min\") {\r\n            boxRef.current.style.transition = \"0.25s\";\r\n            boxRef.current.style.opacity = \"0\";\r\n            boxRef.current.style.left = \"80px\";\r\n            boxRef.current.style.top = \"60vh\";\r\n            boxRef.current.style.scale = \"0.6\";\r\n            boxRef.current.style.width = \"500px\";\r\n            boxRef.current.style.height = \"500px\";\r\n        }\r\n    }, [status]);\r\n\r\n    const onMouseDown_Resize = useCallback((e) => {\r\n        setIsResizable(true);\r\n        prevPos.current = {\r\n            X: e.clientX,\r\n            Y: e.clientY,\r\n        };\r\n    }, []);\r\n\r\n    const onMouseMove_Resize = useCallback(() => {\r\n        //\r\n    }, []);\r\n\r\n    const onMouseUp_Resize = useCallback(() => {\r\n        //\r\n        setIsResizable(false);\r\n    }, []);\r\n\r\n    // 특정 아이템 클릭\r\n    const onClickItem = useCallback((name) => {\r\n        setSelectedItem(name);\r\n    }, []);\r\n\r\n    // 특정 아이템 더블 클릭\r\n    /*\r\n    현재 위치를 해당 아이템으로 변경한다.\r\n    */\r\n    const onDoubleClickItem = useCallback(\r\n        (item) => {\r\n            if (item.type === \"FOLDER\") {\r\n                setCurrentFolder(\r\n                    directory.find((findItem) => item.name === findItem.name)\r\n                );\r\n                setFolderContents(Directory_Tree[item.name] || []);\r\n            }\r\n\r\n            //     // 이동 기록에 없는 경우만 추가한다.\r\n            //     if (\r\n            //         !folderHistory.some(\r\n            //             (someItem) => someItem.name === item.name\r\n            //         )\r\n            //     ) {\r\n            //         setFolderHistory((prev) => [...prev, item.contents]);\r\n            //     }\r\n            //     setFolderContents(item.contents);\r\n            // }\r\n        },\r\n        [Directory_Tree, folderHistory, directory]\r\n    );\r\n\r\n    // 뒤로 가기\r\n    /*\r\n    현재 위치를 현재 아이템의 부모로 변경한다.\r\n    */\r\n    const onClickLeft = useCallback(() => {\r\n        if (!currentFolder.parent) return;\r\n\r\n        setFolderContents(Directory_Tree[currentFolder.parent]);\r\n        if (currentFolder.parent === \"KDH\") {\r\n            setCurrentFolder({\r\n                route: \"/ KDH\",\r\n            });\r\n        } else {\r\n            setCurrentFolder(\r\n                directory.find((item) => item.name === currentFolder.parent)\r\n            );\r\n        }\r\n    }, [setFolderContents, currentFolder, Directory_Tree]);\r\n\r\n    // 미구현\r\n    const onClickRight = useCallback(() => {\r\n        // setFolderContents(folderHistory[folderHistory.length - 1]);\r\n        //\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            localStorage.removeItem(`${name}Left`);\r\n            localStorage.removeItem(`${name}Top`);\r\n            localStorage.removeItem(`${name}width`);\r\n            localStorage.removeItem(`${name}height`);\r\n        };\r\n    }, []);\r\n\r\n    const propDatas = {\r\n        onClick,\r\n        onClickClose,\r\n        onClickMax,\r\n        onClickNormalSize,\r\n        onClickMin,\r\n        onMouseDown,\r\n        onMouseUp,\r\n        onMouseDown_Resize,\r\n        onMouseUp_Resize,\r\n        onClickItem,\r\n        onDoubleClickItem,\r\n        onClickLeft,\r\n        onClickRight,\r\n        setDisplayType,\r\n\r\n        boxRef,\r\n        isClose,\r\n        isMaxSize,\r\n        item,\r\n        selectedItem,\r\n        folderContents,\r\n        displayType,\r\n        displayList,\r\n        currentFolder,\r\n    };\r\n    return <FolderComponent {...propDatas} />;\r\n};\r\n\r\nexport default React.memo(FolderContainer);\r\n"],"names":["DEFAULT_SIZE","open","keyframes","FolderComponentBlock","styled","props","zIndexCnt","isClose","onClick","onClickClose","onClickMax","onClickNormalSize","onClickMin","onMouseDown","onMouseUp","onMouseDown_Resize","onMouseUp_Resize","onClickItem","onDoubleClickItem","onClickLeft","setDisplayType","onClickRight","boxRef","isMaxSize","item","selectedItem","folderContents","displayType","displayList","currentFolder","ref","className","src","icon","folderEmpty","alt","name","value","route","readOnly","onChange","e","target","map","idx","width","height","length","onDoubleClick","type","folderCnt","FolderContainer","status","Directory_Tree","useRecoilValue","rc_global_Directory_Tree","directory","rc_global_Directory_List","setProgramList","useSetRecoilState","rc_program_programList","useRecoilState","rc_program_zIndexCnt","setZIndexCnt","temp_zIndexCnt","rc_program_activeProgram","activeProgram","setActiveProgram","useState","isMovable","setIsMovable","isResizable","setIsResizable","setIsClose","setIsMaxSize","find","findItem","setCurrentFolder","setFolderContents","contents","folderHistory","setSelectedItem","prevPos","useRef","useCallback","current","style","transition","left","top","localStorage","setItem","getItem","prev","prevItem","opacity","setTimeout","filter","X","clientX","Y","clientY","onMouseMove","posX","posY","offsetLeft","offsetTop","newWidth","offsetWidth","newHeight","offsetHeight","useEffect","zIndex","document","addEventListener","removeEventListener","scale","parent","removeItem","propDatas","React"],"sourceRoot":""}